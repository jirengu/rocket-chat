var require = meteorInstall({"server":{"lib":{"cordova":{"facebook-login.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/lib/cordova/facebook-login.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
function getIdentity(accessToken) {                                                                                    // 1
	try {                                                                                                                 // 2
		return HTTP.get('https://graph.facebook.com/me', {                                                                   // 3
			params: {                                                                                                           // 4
				access_token: accessToken                                                                                          // 5
			}                                                                                                                   // 4
		}).data;                                                                                                             // 3
	} catch (error) {                                                                                                     // 8
		throw _.extend(new Error("Failed to fetch identity from Facebook. " + error.message), {                              // 9
			response: error.response                                                                                            // 10
		});                                                                                                                  // 9
	}                                                                                                                     // 12
}                                                                                                                      // 13
                                                                                                                       //
Accounts.registerLoginHandler(function (loginRequest) {                                                                // 15
	if (!loginRequest.cordova) {                                                                                          // 16
		return;                                                                                                              // 17
	}                                                                                                                     // 18
                                                                                                                       //
	loginRequest = loginRequest.authResponse;                                                                             // 20
	var identity = getIdentity(loginRequest.accessToken);                                                                 // 22
	var serviceData = {                                                                                                   // 23
		accessToken: loginRequest.accessToken,                                                                               // 24
		expiresAt: Date.now() + 1000 * loginRequest.expiresIn                                                                // 25
	};                                                                                                                    // 23
	var whitelisted = ['id', 'email', 'name', 'first_name', 'last_name', 'link', 'username', 'gender', 'locale', 'age_range'];
                                                                                                                       //
	var fields = _.pick(identity, whitelisted);                                                                           // 29
                                                                                                                       //
	var options = {                                                                                                       // 30
		profile: {}                                                                                                          // 31
	};                                                                                                                    // 30
                                                                                                                       //
	_.extend(serviceData, fields);                                                                                        // 34
                                                                                                                       //
	_.extend(options.profile, fields);                                                                                    // 35
                                                                                                                       //
	return Accounts.updateOrCreateUserFromExternalService('facebook', serviceData, options);                              // 37
});                                                                                                                    // 38
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"accounts.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/lib/accounts.js                                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var accountsConfig = {                                                                                                 // 1
	forbidClientAccountCreation: true,                                                                                    // 2
	loginExpirationInDays: RocketChat.settings.get('Accounts_LoginExpiration')                                            // 3
};                                                                                                                     // 1
Accounts.config(accountsConfig);                                                                                       // 6
Accounts.emailTemplates.siteName = RocketChat.settings.get('Site_Name');                                               // 8
Accounts.emailTemplates.from = RocketChat.settings.get('Site_Name') + " <" + RocketChat.settings.get('From_Email') + ">";
var verifyEmailHtml = Accounts.emailTemplates.verifyEmail.text;                                                        // 12
                                                                                                                       //
Accounts.emailTemplates.verifyEmail.html = function (user, url) {                                                      // 14
	url = url.replace(Meteor.absoluteUrl(), Meteor.absoluteUrl() + "login/");                                             // 15
	return verifyEmailHtml(user, url);                                                                                    // 16
};                                                                                                                     // 17
                                                                                                                       //
var resetPasswordHtml = Accounts.emailTemplates.resetPassword.text;                                                    // 19
                                                                                                                       //
Accounts.emailTemplates.resetPassword.html = function (user, url) {                                                    // 21
	url = url.replace(/\/#\//, '/');                                                                                      // 22
	return resetPasswordHtml(user, url);                                                                                  // 23
};                                                                                                                     // 24
                                                                                                                       //
Accounts.emailTemplates.enrollAccount.subject = function () {                                                          // 26
	var user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};                                    // 26
	var subject = void 0;                                                                                                 // 27
                                                                                                                       //
	if (RocketChat.settings.get('Accounts_Enrollment_Customized')) {                                                      // 28
		subject = RocketChat.settings.get('Accounts_Enrollment_Email_Subject');                                              // 29
	} else {                                                                                                              // 30
		subject = TAPi18n.__('Accounts_Enrollment_Email_Subject_Default', {                                                  // 31
			lng: user.language || RocketChat.settings.get('language') || 'en'                                                   // 32
		});                                                                                                                  // 31
	}                                                                                                                     // 34
                                                                                                                       //
	return RocketChat.placeholders.replace(subject);                                                                      // 35
};                                                                                                                     // 36
                                                                                                                       //
Accounts.emailTemplates.enrollAccount.html = function () /*, url*/{                                                    // 38
	var user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};                                    // 38
	var html = void 0;                                                                                                    // 39
                                                                                                                       //
	if (RocketChat.settings.get('Accounts_Enrollment_Customized')) {                                                      // 40
		html = RocketChat.settings.get('Accounts_Enrollment_Email');                                                         // 41
	} else {                                                                                                              // 42
		html = TAPi18n.__('Accounts_Enrollment_Email_Default', {                                                             // 43
			lng: user.language || RocketChat.settings.get('language') || 'en'                                                   // 44
		});                                                                                                                  // 43
	}                                                                                                                     // 46
                                                                                                                       //
	var header = RocketChat.placeholders.replace(RocketChat.settings.get('Email_Header') || '');                          // 48
	var footer = RocketChat.placeholders.replace(RocketChat.settings.get('Email_Footer') || '');                          // 49
	html = RocketChat.placeholders.replace(html, {                                                                        // 51
		name: user.name,                                                                                                     // 52
		email: user.emails && user.emails[0] && user.emails[0].address                                                       // 53
	});                                                                                                                   // 51
	return header + html + footer;                                                                                        // 56
};                                                                                                                     // 57
                                                                                                                       //
Accounts.onCreateUser(function (options) {                                                                             // 59
	var user = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};                                    // 59
	RocketChat.callbacks.run('beforeCreateUser', options, user);                                                          // 60
	user.status = 'offline';                                                                                              // 62
	user.active = !RocketChat.settings.get('Accounts_ManuallyApproveNewUsers');                                           // 63
                                                                                                                       //
	if (!user.name) {                                                                                                     // 65
		if (options.profile && options.profile.name) {                                                                       // 66
			user.name = options.profile.name;                                                                                   // 67
		}                                                                                                                    // 68
	}                                                                                                                     // 69
                                                                                                                       //
	if (user.services) {                                                                                                  // 71
		for (var _iterator = Object.values(user.services), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 72
                                                                                                                       //
			if (_isArray) {                                                                                                     // 72
				if (_i >= _iterator.length) break;                                                                                 // 72
				_ref = _iterator[_i++];                                                                                            // 72
			} else {                                                                                                            // 72
				_i = _iterator.next();                                                                                             // 72
				if (_i.done) break;                                                                                                // 72
				_ref = _i.value;                                                                                                   // 72
			}                                                                                                                   // 72
                                                                                                                       //
			var service = _ref;                                                                                                 // 72
                                                                                                                       //
			if (!user.name) {                                                                                                   // 73
				user.name = service.name || service.username;                                                                      // 74
			}                                                                                                                   // 75
                                                                                                                       //
			if (!user.emails && service.email) {                                                                                // 77
				user.emails = [{                                                                                                   // 78
					address: service.email,                                                                                           // 79
					verified: true                                                                                                    // 80
				}];                                                                                                                // 78
			}                                                                                                                   // 82
		}                                                                                                                    // 83
	}                                                                                                                     // 84
                                                                                                                       //
	return user;                                                                                                          // 86
});                                                                                                                    // 87
Accounts.insertUserDoc = _.wrap(Accounts.insertUserDoc, function (insertUserDoc, options, user) {                      // 89
	var roles = [];                                                                                                       // 90
                                                                                                                       //
	if (Match.test(user.globalRoles, [String]) && user.globalRoles.length > 0) {                                          // 92
		roles = roles.concat(user.globalRoles);                                                                              // 93
	}                                                                                                                     // 94
                                                                                                                       //
	delete user.globalRoles;                                                                                              // 96
                                                                                                                       //
	if (!user.services || !user.services.password) {                                                                      // 98
		var defaultAuthServiceRoles = String(RocketChat.settings.get('Accounts_Registration_AuthenticationServices_Default_Roles')).split(',');
                                                                                                                       //
		if (defaultAuthServiceRoles.length > 0) {                                                                            // 100
			roles = roles.concat(defaultAuthServiceRoles.map(function (s) {                                                     // 101
				return s.trim();                                                                                                   // 101
			}));                                                                                                                // 101
		}                                                                                                                    // 102
	}                                                                                                                     // 103
                                                                                                                       //
	if (!user.type) {                                                                                                     // 105
		user.type = 'user';                                                                                                  // 106
	}                                                                                                                     // 107
                                                                                                                       //
	var _id = insertUserDoc.call(Accounts, options, user);                                                                // 109
                                                                                                                       //
	user = Meteor.users.findOne({                                                                                         // 111
		_id: _id                                                                                                             // 112
	});                                                                                                                   // 111
                                                                                                                       //
	if (user.username && options.joinDefaultChannels !== false && user.joinDefaultChannels !== false) {                   // 115
		Meteor.runAsUser(_id, function () {                                                                                  // 116
			return Meteor.call('joinDefaultChannels', options.joinDefaultChannelsSilenced);                                     // 117
		});                                                                                                                  // 118
	}                                                                                                                     // 119
                                                                                                                       //
	if (roles.length === 0) {                                                                                             // 121
		var hasAdmin = RocketChat.models.Users.findOne({                                                                     // 122
			roles: 'admin',                                                                                                     // 123
			type: 'user'                                                                                                        // 124
		}, {                                                                                                                 // 122
			fields: {                                                                                                           // 126
				_id: 1                                                                                                             // 127
			}                                                                                                                   // 126
		});                                                                                                                  // 125
                                                                                                                       //
		if (hasAdmin) {                                                                                                      // 131
			roles.push('user');                                                                                                 // 132
		} else {                                                                                                             // 133
			roles.push('admin');                                                                                                // 134
		}                                                                                                                    // 135
	}                                                                                                                     // 136
                                                                                                                       //
	RocketChat.authz.addUserRoles(_id, roles);                                                                            // 138
	return _id;                                                                                                           // 140
});                                                                                                                    // 141
Accounts.validateLoginAttempt(function (login) {                                                                       // 143
	login = RocketChat.callbacks.run('beforeValidateLogin', login);                                                       // 144
                                                                                                                       //
	if (login.allowed !== true) {                                                                                         // 146
		return login.allowed;                                                                                                // 147
	}                                                                                                                     // 148
                                                                                                                       //
	if (login.user.type === 'visitor') {                                                                                  // 150
		return true;                                                                                                         // 151
	}                                                                                                                     // 152
                                                                                                                       //
	if (!!login.user.active !== true) {                                                                                   // 154
		throw new Meteor.Error('error-user-is-not-activated', 'User is not activated', {                                     // 155
			'function': 'Accounts.validateLoginAttempt'                                                                         // 156
		});                                                                                                                  // 155
	}                                                                                                                     // 158
                                                                                                                       //
	if (login.user.roles.includes('admin') === false && login.type === 'password' && RocketChat.settings.get('Accounts_EmailVerification') === true) {
		var validEmail = login.user.emails.filter(function (email) {                                                         // 161
			return email.verified === true;                                                                                     // 161
		});                                                                                                                  // 161
                                                                                                                       //
		if (validEmail.length === 0) {                                                                                       // 162
			throw new Meteor.Error('error-invalid-email', 'Invalid email __email__');                                           // 163
		}                                                                                                                    // 164
	}                                                                                                                     // 165
                                                                                                                       //
	RocketChat.models.Users.updateLastLoginById(login.user._id);                                                          // 167
	Meteor.defer(function () {                                                                                            // 168
		return RocketChat.callbacks.run('afterValidateLogin', login);                                                        // 169
	});                                                                                                                   // 170
	return true;                                                                                                          // 172
});                                                                                                                    // 173
Accounts.validateNewUser(function (user) {                                                                             // 175
	if (user.type === 'visitor') {                                                                                        // 176
		return true;                                                                                                         // 177
	}                                                                                                                     // 178
                                                                                                                       //
	if (RocketChat.settings.get('Accounts_Registration_AuthenticationServices_Enabled') === false && RocketChat.settings.get('LDAP_Enable') === false && !(user.services && user.services.password)) {
		throw new Meteor.Error('registration-disabled-authentication-services', 'User registration is disabled for authentication services');
	}                                                                                                                     // 182
                                                                                                                       //
	return true;                                                                                                          // 184
});                                                                                                                    // 185
Accounts.validateNewUser(function (user) {                                                                             // 187
	if (user.type === 'visitor') {                                                                                        // 188
		return true;                                                                                                         // 189
	}                                                                                                                     // 190
                                                                                                                       //
	var domainWhiteList = RocketChat.settings.get('Accounts_AllowedDomainsList');                                         // 192
                                                                                                                       //
	if (_.isEmpty(s.trim(domainWhiteList))) {                                                                             // 193
		return true;                                                                                                         // 194
	}                                                                                                                     // 195
                                                                                                                       //
	domainWhiteList = domainWhiteList.split(',').map(function (domain) {                                                  // 197
		return domain.trim();                                                                                                // 197
	});                                                                                                                   // 197
                                                                                                                       //
	if (user.emails && user.emails.length > 0) {                                                                          // 199
		(function () {                                                                                                       // 199
			var email = user.emails[0].address;                                                                                 // 200
			var inWhiteList = domainWhiteList.some(function (domain) {                                                          // 201
				return email.match('@' + RegExp.escape(domain) + '$');                                                             // 201
			});                                                                                                                 // 201
                                                                                                                       //
			if (inWhiteList === false) {                                                                                        // 203
				throw new Meteor.Error('error-invalid-domain');                                                                    // 204
			}                                                                                                                   // 205
		})();                                                                                                                // 199
	}                                                                                                                     // 206
                                                                                                                       //
	return true;                                                                                                          // 208
});                                                                                                                    // 209
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"cordova.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/lib/cordova.js                                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* global Push, SystemLogger */Meteor.methods({                                                                        // 1
	// log() {                                                                                                            // 4
	// 	return console.log(...arguments);                                                                                 // 5
	// },                                                                                                                 // 6
	push_test: function () {                                                                                              // 8
		var user = Meteor.user();                                                                                            // 9
                                                                                                                       //
		if (!user) {                                                                                                         // 11
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 12
				method: 'push_test'                                                                                                // 13
			});                                                                                                                 // 12
		}                                                                                                                    // 15
                                                                                                                       //
		if (!RocketChat.authz.hasRole(user._id, 'admin')) {                                                                  // 17
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 18
				method: 'push_test'                                                                                                // 19
			});                                                                                                                 // 18
		}                                                                                                                    // 21
                                                                                                                       //
		if (Push.enabled !== true) {                                                                                         // 23
			throw new Meteor.Error('error-push-disabled', 'Push is disabled', {                                                 // 24
				method: 'push_test'                                                                                                // 25
			});                                                                                                                 // 24
		}                                                                                                                    // 27
                                                                                                                       //
		var query = {                                                                                                        // 29
			$and: [{                                                                                                            // 30
				userId: user._id                                                                                                   // 31
			}, {                                                                                                                // 30
				$or: [{                                                                                                            // 33
					'token.apn': {                                                                                                    // 34
						$exists: true                                                                                                    // 35
					}                                                                                                                 // 34
				}, {                                                                                                               // 33
					'token.gcm': {                                                                                                    // 38
						$exists: true                                                                                                    // 39
					}                                                                                                                 // 38
				}]                                                                                                                 // 37
			}]                                                                                                                  // 32
		};                                                                                                                   // 29
		var tokens = Push.appCollection.find(query).count();                                                                 // 45
                                                                                                                       //
		if (tokens === 0) {                                                                                                  // 47
			throw new Meteor.Error('error-no-tokens-for-this-user', 'There are no tokens for this user', {                      // 48
				method: 'push_test'                                                                                                // 49
			});                                                                                                                 // 48
		}                                                                                                                    // 51
                                                                                                                       //
		Push.send({                                                                                                          // 53
			from: 'push',                                                                                                       // 54
			title: "@" + user.username,                                                                                         // 55
			text: TAPi18n.__('This_is_a_push_test_messsage'),                                                                   // 56
			apn: {                                                                                                              // 57
				text: "@" + user.username + ":\n" + TAPi18n.__('This_is_a_push_test_messsage')                                     // 58
			},                                                                                                                  // 57
			sound: 'default',                                                                                                   // 60
			query: {                                                                                                            // 61
				userId: user._id                                                                                                   // 62
			}                                                                                                                   // 61
		});                                                                                                                  // 53
		return {                                                                                                             // 66
			message: 'Your_push_was_sent_to_s_devices',                                                                         // 67
			params: [tokens]                                                                                                    // 68
		};                                                                                                                   // 66
	}                                                                                                                     // 70
});                                                                                                                    // 3
                                                                                                                       //
function sendPush(service, token, options) {                                                                           // 73
	var tries = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;                                    // 73
	var data = {                                                                                                          // 74
		data: {                                                                                                              // 75
			token: token,                                                                                                       // 76
			options: options                                                                                                    // 77
		}                                                                                                                    // 75
	};                                                                                                                    // 74
	return HTTP.post(RocketChat.settings.get('Push_gateway') + ("/push/" + service + "/send"), data, function (error, response) {
		if (response && response.statusCode === 406) {                                                                       // 82
			console.log('removing push token', token);                                                                          // 83
			Push.appCollection.remove({                                                                                         // 84
				$or: [{                                                                                                            // 85
					'token.apn': token                                                                                                // 86
				}, {                                                                                                               // 85
					'token.gcm': token                                                                                                // 88
				}]                                                                                                                 // 87
			});                                                                                                                 // 84
			return;                                                                                                             // 91
		}                                                                                                                    // 92
                                                                                                                       //
		if (!error) {                                                                                                        // 94
			return;                                                                                                             // 95
		}                                                                                                                    // 96
                                                                                                                       //
		SystemLogger.error("Error sending push to gateway (" + tries + " try) ->", error);                                   // 98
                                                                                                                       //
		if (tries <= 6) {                                                                                                    // 100
			var milli = Math.pow(10, tries + 2);                                                                                // 101
			SystemLogger.log('Trying sending push to gateway again in', milli, 'milliseconds');                                 // 103
			return Meteor.setTimeout(function () {                                                                              // 105
				return sendPush(service, token, options, tries + 1);                                                               // 106
			}, milli);                                                                                                          // 107
		}                                                                                                                    // 108
	});                                                                                                                   // 109
}                                                                                                                      // 110
                                                                                                                       //
function configurePush() {                                                                                             // 112
	if (RocketChat.settings.get('Push_debug')) {                                                                          // 113
		Push.debug = true;                                                                                                   // 114
		console.log('Push: configuring...');                                                                                 // 115
	}                                                                                                                     // 116
                                                                                                                       //
	if (RocketChat.settings.get('Push_enable') === true) {                                                                // 118
		Push.allow({                                                                                                         // 119
			send: function (userId /*, notification*/) {                                                                        // 120
				return RocketChat.authz.hasRole(userId, 'admin');                                                                  // 121
			}                                                                                                                   // 122
		});                                                                                                                  // 119
		var apn = void 0,                                                                                                    // 125
		    gcm = void 0;                                                                                                    // 125
                                                                                                                       //
		if (RocketChat.settings.get('Push_enable_gateway') === false) {                                                      // 127
			gcm = {                                                                                                             // 128
				apiKey: RocketChat.settings.get('Push_gcm_api_key'),                                                               // 129
				projectNumber: RocketChat.settings.get('Push_gcm_project_number')                                                  // 130
			};                                                                                                                  // 128
			apn = {                                                                                                             // 133
				passphrase: RocketChat.settings.get('Push_apn_passphrase'),                                                        // 134
				keyData: RocketChat.settings.get('Push_apn_key'),                                                                  // 135
				certData: RocketChat.settings.get('Push_apn_cert')                                                                 // 136
			};                                                                                                                  // 133
                                                                                                                       //
			if (RocketChat.settings.get('Push_production') !== true) {                                                          // 139
				apn = {                                                                                                            // 140
					passphrase: RocketChat.settings.get('Push_apn_dev_passphrase'),                                                   // 141
					keyData: RocketChat.settings.get('Push_apn_dev_key'),                                                             // 142
					certData: RocketChat.settings.get('Push_apn_dev_cert'),                                                           // 143
					gateway: 'gateway.sandbox.push.apple.com'                                                                         // 144
				};                                                                                                                 // 140
			}                                                                                                                   // 146
                                                                                                                       //
			if (!apn.keyData || apn.keyData.trim() === '' || !apn.certData || apn.certData.trim() === '') {                     // 148
				apn = undefined;                                                                                                   // 149
			}                                                                                                                   // 150
                                                                                                                       //
			if (!gcm.apiKey || gcm.apiKey.trim() === '' || !gcm.projectNumber || gcm.projectNumber.trim() === '') {             // 152
				gcm = undefined;                                                                                                   // 153
			}                                                                                                                   // 154
		}                                                                                                                    // 155
                                                                                                                       //
		Push.Configure({                                                                                                     // 157
			apn: apn,                                                                                                           // 158
			gcm: gcm,                                                                                                           // 159
			production: RocketChat.settings.get('Push_production'),                                                             // 160
			sendInterval: 1000,                                                                                                 // 161
			sendBatchSize: 10                                                                                                   // 162
		});                                                                                                                  // 157
                                                                                                                       //
		if (RocketChat.settings.get('Push_enable_gateway') === true) {                                                       // 165
			Push.serverSend = function () {                                                                                     // 166
				var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {                                // 166
					badge: 0                                                                                                          // 166
				};                                                                                                                 // 166
                                                                                                                       //
				if (options.from !== String(options.from)) {                                                                       // 167
					throw new Error('Push.send: option "from" not a string');                                                         // 168
				}                                                                                                                  // 169
                                                                                                                       //
				if (options.title !== String(options.title)) {                                                                     // 170
					throw new Error('Push.send: option "title" not a string');                                                        // 171
				}                                                                                                                  // 172
                                                                                                                       //
				if (options.text !== String(options.text)) {                                                                       // 173
					throw new Error('Push.send: option "text" not a string');                                                         // 174
				}                                                                                                                  // 175
                                                                                                                       //
				if (RocketChat.settings.get('Push_debug')) {                                                                       // 176
					console.log("Push: send message \"" + options.title + "\" via query", options.query);                             // 177
				}                                                                                                                  // 178
                                                                                                                       //
				var query = {                                                                                                      // 180
					$and: [options.query, {                                                                                           // 181
						$or: [{                                                                                                          // 182
							'token.apn': {                                                                                                  // 183
								$exists: true                                                                                                  // 184
							}                                                                                                               // 183
						}, {                                                                                                             // 182
							'token.gcm': {                                                                                                  // 187
								$exists: true                                                                                                  // 188
							}                                                                                                               // 187
						}]                                                                                                               // 186
					}]                                                                                                                // 181
				};                                                                                                                 // 180
				return Push.appCollection.find(query).forEach(function (app) {                                                     // 194
					if (RocketChat.settings.get('Push_debug')) {                                                                      // 195
						console.log('Push: send to token', app.token);                                                                   // 196
					}                                                                                                                 // 197
                                                                                                                       //
					if (app.token.apn) {                                                                                              // 199
						options.topic = app.appName;                                                                                     // 200
						return sendPush('apn', app.token.apn, options);                                                                  // 201
					}                                                                                                                 // 202
                                                                                                                       //
					if (app.token.gcm) {                                                                                              // 204
						return sendPush('gcm', app.token.gcm, options);                                                                  // 205
					}                                                                                                                 // 206
				});                                                                                                                // 207
			};                                                                                                                  // 208
		}                                                                                                                    // 209
                                                                                                                       //
		return Push.enabled = true;                                                                                          // 210
	}                                                                                                                     // 211
}                                                                                                                      // 212
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 214
	return configurePush();                                                                                               // 215
});                                                                                                                    // 216
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"startup":{"migrations":{"v001.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v001.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 1,                                                                                                           // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Users.find({                                                                                // 4
			username: {                                                                                                         // 5
				$exists: false                                                                                                     // 6
			},                                                                                                                  // 5
			lastLogin: {                                                                                                        // 8
				$exists: true                                                                                                      // 9
			}                                                                                                                   // 8
		}).forEach(function (user) {                                                                                         // 4
			var username = RocketChat.generateUsernameSuggestion(user);                                                         // 12
                                                                                                                       //
			if (username && username.trim() !== '') {                                                                           // 13
				return RocketChat.models.Users.setUsername(user._id, username);                                                    // 14
			} else {                                                                                                            // 15
				return console.log('User without username', JSON.stringify(user, null, ' '));                                      // 16
			}                                                                                                                   // 17
		});                                                                                                                  // 18
	}                                                                                                                     // 19
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v002.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v002.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* globals getAvatarSuggestionForUser */RocketChat.Migrations.add({                                                    // 1
	version: 2,                                                                                                           // 4
	up: function () {                                                                                                     // 5
		return RocketChat.models.Users.find({                                                                                // 6
			avatarOrigin: {                                                                                                     // 7
				$exists: false                                                                                                     // 8
			},                                                                                                                  // 7
			username: {                                                                                                         // 10
				$exists: true                                                                                                      // 11
			}                                                                                                                   // 10
		}).forEach(function (user) {                                                                                         // 6
			var avatars = getAvatarSuggestionForUser(user);                                                                     // 14
			var services = Object.keys(avatars);                                                                                // 15
                                                                                                                       //
			if (services.length === 0) {                                                                                        // 17
				return;                                                                                                            // 18
			}                                                                                                                   // 19
                                                                                                                       //
			var service = services[0];                                                                                          // 21
			console.log(user.username, '->', service);                                                                          // 23
			var dataURI = avatars[service].blob;                                                                                // 25
                                                                                                                       //
			var _RocketChatFile$dataU = RocketChatFile.dataURIParse(dataURI),                                                   // 13
			    image = _RocketChatFile$dataU.image,                                                                            // 13
			    contentType = _RocketChatFile$dataU.contentType;                                                                // 13
                                                                                                                       //
			var rs = RocketChatFile.bufferToStream(new Buffer(image, 'base64'));                                                // 28
			var ws = RocketChatFileAvatarInstance.createWriteStream(user.username + ".jpg", contentType);                       // 29
			ws.on('end', Meteor.bindEnvironment(function () {                                                                   // 31
				return RocketChat.models.Users.setAvatarOrigin(user._id, service);                                                 // 32
			}));                                                                                                                // 33
			return rs.pipe(ws);                                                                                                 // 35
		});                                                                                                                  // 36
	}                                                                                                                     // 37
});                                                                                                                    // 3
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v003.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v003.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 3,                                                                                                           // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Subscriptions.tryDropIndex('uid_1');                                                               // 4
		RocketChat.models.Subscriptions.tryDropIndex('rid_1_uid_1');                                                         // 5
		console.log('Fixing ChatSubscription uid');                                                                          // 7
		RocketChat.models.Subscriptions.find({                                                                               // 9
			uid: {                                                                                                              // 10
				$exists: true                                                                                                      // 11
			}                                                                                                                   // 10
		}, {                                                                                                                 // 9
			nonreactive: true                                                                                                   // 14
		}).forEach(function (sub) {                                                                                          // 13
			var update = {};                                                                                                    // 16
			var user = RocketChat.models.Users.findOneById(sub.uid, {                                                           // 17
				fields: {                                                                                                          // 18
					username: 1                                                                                                       // 19
				}                                                                                                                  // 18
			});                                                                                                                 // 17
                                                                                                                       //
			if (user) {                                                                                                         // 23
				if (!update.$set) {                                                                                                // 24
					update.$set = {};                                                                                                 // 25
				}                                                                                                                  // 26
                                                                                                                       //
				if (!update.$unset) {                                                                                              // 28
					update.$unset = {};                                                                                               // 29
				}                                                                                                                  // 30
                                                                                                                       //
				update.$set['u._id'] = user._id;                                                                                   // 32
				update.$set['u.username'] = user.username;                                                                         // 33
				update.$unset.uid = 1;                                                                                             // 34
			}                                                                                                                   // 35
                                                                                                                       //
			if (Object.keys(update).length > 0) {                                                                               // 37
				return RocketChat.models.Subscriptions.update(sub._id, update);                                                    // 38
			}                                                                                                                   // 39
		});                                                                                                                  // 40
		console.log('Fixing ChatRoom uids');                                                                                 // 42
		RocketChat.models.Rooms.find({                                                                                       // 44
			'uids.0': {                                                                                                         // 45
				$exists: true                                                                                                      // 46
			}                                                                                                                   // 45
		}, {                                                                                                                 // 44
			nonreactive: true                                                                                                   // 49
		}).forEach(function (room) {                                                                                         // 48
			var update = {};                                                                                                    // 51
			var users = RocketChat.models.Users.find({                                                                          // 52
				_id: {                                                                                                             // 53
					$in: room.uids                                                                                                    // 54
				},                                                                                                                 // 53
				username: {                                                                                                        // 56
					$exists: true                                                                                                     // 57
				}                                                                                                                  // 56
			}, {                                                                                                                // 52
				fields: {                                                                                                          // 60
					username: 1                                                                                                       // 61
				}                                                                                                                  // 60
			});                                                                                                                 // 59
			var usernames = users.map(function (user) {                                                                         // 65
				return user.username;                                                                                              // 66
			});                                                                                                                 // 67
                                                                                                                       //
			if (!update.$set) {                                                                                                 // 69
				update.$set = {};                                                                                                  // 70
			}                                                                                                                   // 71
                                                                                                                       //
			if (!update.$unset) {                                                                                               // 73
				update.$unset = {};                                                                                                // 74
			}                                                                                                                   // 75
                                                                                                                       //
			update.$set.usernames = usernames;                                                                                  // 77
			update.$unset.uids = 1;                                                                                             // 78
			var user = RocketChat.models.Users.findOneById(room.uid, {                                                          // 80
				fields: {                                                                                                          // 81
					username: 1                                                                                                       // 82
				}                                                                                                                  // 81
			});                                                                                                                 // 80
                                                                                                                       //
			if (user) {                                                                                                         // 86
				update.$set['u._id'] = user._id;                                                                                   // 87
				update.$set['u.username'] = user.username;                                                                         // 88
				update.$unset.uid = 1;                                                                                             // 89
			}                                                                                                                   // 90
                                                                                                                       //
			if (room.t === 'd' && usernames.length === 2) {                                                                     // 92
				for (var _iterator = Object.keys(update.$set), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
					var _ref;                                                                                                         // 93
                                                                                                                       //
					if (_isArray) {                                                                                                   // 93
						if (_i >= _iterator.length) break;                                                                               // 93
						_ref = _iterator[_i++];                                                                                          // 93
					} else {                                                                                                          // 93
						_i = _iterator.next();                                                                                           // 93
						if (_i.done) break;                                                                                              // 93
						_ref = _i.value;                                                                                                 // 93
					}                                                                                                                 // 93
                                                                                                                       //
					var k = _ref;                                                                                                     // 93
					var v = update.$set[k];                                                                                           // 94
					room[k] = v;                                                                                                      // 95
				}                                                                                                                  // 96
                                                                                                                       //
				for (var _iterator2 = Object.keys(update.$unset), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
					var _ref2;                                                                                                        // 98
                                                                                                                       //
					if (_isArray2) {                                                                                                  // 98
						if (_i2 >= _iterator2.length) break;                                                                             // 98
						_ref2 = _iterator2[_i2++];                                                                                       // 98
					} else {                                                                                                          // 98
						_i2 = _iterator2.next();                                                                                         // 98
						if (_i2.done) break;                                                                                             // 98
						_ref2 = _i2.value;                                                                                               // 98
					}                                                                                                                 // 98
                                                                                                                       //
					var _k = _ref2;                                                                                                   // 98
					delete room[_k];                                                                                                  // 99
				}                                                                                                                  // 100
                                                                                                                       //
				var oldId = room._id;                                                                                              // 102
				room._id = usernames.sort().join(',');                                                                             // 104
				RocketChat.models.Rooms.insert(room);                                                                              // 106
				RocketChat.models.Rooms.removeById(oldId);                                                                         // 107
				RocketChat.models.Subscriptions.update({                                                                           // 109
					rid: oldId                                                                                                        // 110
				}, {                                                                                                               // 109
					$set: {                                                                                                           // 112
						rid: room._id                                                                                                    // 113
					}                                                                                                                 // 112
				}, {                                                                                                               // 111
					multi: true                                                                                                       // 116
				});                                                                                                                // 115
				return RocketChat.models.Messages.update({                                                                         // 119
					rid: oldId                                                                                                        // 120
				}, {                                                                                                               // 119
					$set: {                                                                                                           // 122
						rid: room._id                                                                                                    // 123
					}                                                                                                                 // 122
				}, {                                                                                                               // 121
					multi: true                                                                                                       // 126
				});                                                                                                                // 125
			} else {                                                                                                            // 128
				return RocketChat.models.Rooms.update(room._id, update);                                                           // 129
			}                                                                                                                   // 130
		});                                                                                                                  // 131
		console.log('Fixing ChatMessage uid');                                                                               // 133
		RocketChat.models.Messages.find({                                                                                    // 135
			uid: {                                                                                                              // 136
				$exists: true                                                                                                      // 137
			}                                                                                                                   // 136
		}, {                                                                                                                 // 135
			nonreactive: true                                                                                                   // 140
		}).forEach(function (message) {                                                                                      // 139
			var update = {};                                                                                                    // 142
			var user = RocketChat.models.Users.findOneById(message.uid, {                                                       // 143
				fields: {                                                                                                          // 144
					username: 1                                                                                                       // 145
				}                                                                                                                  // 144
			});                                                                                                                 // 143
                                                                                                                       //
			if (user) {                                                                                                         // 149
				if (!update.$set) {                                                                                                // 150
					update.$set = {};                                                                                                 // 151
				}                                                                                                                  // 152
                                                                                                                       //
				if (!update.$unset) {                                                                                              // 154
					update.$unset = {};                                                                                               // 155
				}                                                                                                                  // 156
                                                                                                                       //
				update.$set['u._id'] = user._id;                                                                                   // 158
				update.$set['u.username'] = user.username;                                                                         // 159
				update.$unset.uid = 1;                                                                                             // 160
			}                                                                                                                   // 161
                                                                                                                       //
			if (Object.keys(update).length > 0) {                                                                               // 163
				return RocketChat.models.Messages.update(message._id, update);                                                     // 164
			}                                                                                                                   // 165
		});                                                                                                                  // 166
		return console.log('End');                                                                                           // 168
	}                                                                                                                     // 169
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v004.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v004.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 4,                                                                                                           // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Messages.tryDropIndex('rid_1');                                                                    // 4
		RocketChat.models.Subscriptions.tryDropIndex('u._id_1');                                                             // 5
		console.log('Rename rn to name');                                                                                    // 7
		RocketChat.models.Subscriptions.update({                                                                             // 9
			rn: {                                                                                                               // 10
				$exists: true                                                                                                      // 11
			}                                                                                                                   // 10
		}, {                                                                                                                 // 9
			$rename: {                                                                                                          // 14
				rn: 'name'                                                                                                         // 15
			}                                                                                                                   // 14
		}, {                                                                                                                 // 13
			multi: true                                                                                                         // 18
		});                                                                                                                  // 17
		console.log('Adding names to rooms without name');                                                                   // 21
		RocketChat.models.Rooms.find({                                                                                       // 23
			name: ''                                                                                                            // 24
		}).forEach(function (item) {                                                                                         // 23
			var name = Random.id().toLowerCase();                                                                               // 26
			RocketChat.models.Rooms.setNameById(item._id, name);                                                                // 28
			return RocketChat.models.Subscriptions.update({                                                                     // 30
				rid: item._id                                                                                                      // 31
			}, {                                                                                                                // 30
				$set: {                                                                                                            // 33
					name: name                                                                                                        // 34
				}                                                                                                                  // 33
			}, {                                                                                                                // 32
				multi: true                                                                                                        // 37
			});                                                                                                                 // 36
		});                                                                                                                  // 39
		console.log('Making room names unique');                                                                             // 41
		RocketChat.models.Rooms.find().forEach(function (room) {                                                             // 43
			return RocketChat.models.Rooms.find({                                                                               // 45
				name: room.name,                                                                                                   // 46
				_id: {                                                                                                             // 47
					$ne: room._id                                                                                                     // 48
				}                                                                                                                  // 47
			}).forEach(function (item) {                                                                                        // 45
				var name = room.name + '-' + Random.id(2).toLowerCase();                                                           // 51
				RocketChat.models.Rooms.setNameById(item._id, name);                                                               // 53
				return RocketChat.models.Subscriptions.update({                                                                    // 55
					rid: item._id                                                                                                     // 56
				}, {                                                                                                               // 55
					$set: {                                                                                                           // 58
						name: name                                                                                                       // 59
					}                                                                                                                 // 58
				}, {                                                                                                               // 57
					multi: true                                                                                                       // 62
				});                                                                                                                // 61
			});                                                                                                                 // 64
		});                                                                                                                  // 65
		return console.log('End');                                                                                           // 67
	}                                                                                                                     // 68
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v005.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v005.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 5,                                                                                                           // 2
	up: function () {                                                                                                     // 3
		console.log('Dropping test rooms with less than 2 messages');                                                        // 4
		RocketChat.models.Rooms.find({                                                                                       // 6
			msgs: {                                                                                                             // 7
				$lt: 2                                                                                                             // 8
			}                                                                                                                   // 7
		}).forEach(function (room) {                                                                                         // 6
			console.log('Dropped: ', room.name);                                                                                // 11
			RocketChat.models.Rooms.removeById(room._id);                                                                       // 12
			RocketChat.models.Messages.removeByRoomId(room._id);                                                                // 13
			return RocketChat.models.Subscriptions.removeByRoomId(room._id);                                                    // 14
		});                                                                                                                  // 15
		console.log('Dropping test rooms with less than 2 user');                                                            // 17
		RocketChat.models.Rooms.find({                                                                                       // 18
			usernames: {                                                                                                        // 19
				$size: 1                                                                                                           // 20
			}                                                                                                                   // 19
		}).forEach(function (room) {                                                                                         // 18
			console.log('Dropped: ', room.name);                                                                                // 23
			RocketChat.models.Rooms.removeById(room._id);                                                                       // 24
			RocketChat.models.Messages.removeByRoomId(room._id);                                                                // 25
			return RocketChat.models.Subscriptions.removeByRoomId(room._id);                                                    // 26
		});                                                                                                                  // 27
		console.log('Adding username to all users');                                                                         // 29
		RocketChat.models.Users.find({                                                                                       // 30
			username: {                                                                                                         // 31
				$exists: 0                                                                                                         // 32
			},                                                                                                                  // 31
			emails: {                                                                                                           // 34
				$exists: 1                                                                                                         // 35
			}                                                                                                                   // 34
		}).forEach(function (user) {                                                                                         // 30
			var newUserName = user.emails[0].address.split('@')[0];                                                             // 38
                                                                                                                       //
			if (RocketChat.models.Users.findOneByUsername(newUserName)) {                                                       // 39
				newUserName = newUserName + Math.floor(Math.random() * 10 + 1);                                                    // 40
                                                                                                                       //
				if (RocketChat.models.Users.findOneByUsername(newUserName)) {                                                      // 41
					newUserName = newUserName + Math.floor(Math.random() * 10 + 1);                                                   // 42
                                                                                                                       //
					if (RocketChat.models.Users.findOneByUsername(newUserName)) {                                                     // 43
						newUserName = newUserName + Math.floor(Math.random() * 10 + 1);                                                  // 44
					}                                                                                                                 // 45
				}                                                                                                                  // 46
			}                                                                                                                   // 47
                                                                                                                       //
			console.log("Adding: username " + newUserName + " to all user " + user._id);                                        // 48
			return RocketChat.models.Users.setUsername(user._id, newUserName);                                                  // 49
		});                                                                                                                  // 50
		console.log('Fixing _id of direct messages rooms');                                                                  // 52
		RocketChat.models.Rooms.findByType('d').forEach(function (room) {                                                    // 53
			var newId = '';                                                                                                     // 54
                                                                                                                       //
			var id0 = RocketChat.models.Users.findOneByUsername(room.usernames[0])._id;                                         // 55
                                                                                                                       //
			var id1 = RocketChat.models.Users.findOneByUsername(room.usernames[1])._id;                                         // 56
                                                                                                                       //
			var ids = [id0, id1];                                                                                               // 57
			newId = ids.sort().join('');                                                                                        // 59
                                                                                                                       //
			if (newId !== room._id) {                                                                                           // 60
				console.log("Fixing: _id " + room._id + " to " + newId);                                                           // 61
				RocketChat.models.Subscriptions.update({                                                                           // 62
					rid: room._id                                                                                                     // 63
				}, {                                                                                                               // 62
					$set: {                                                                                                           // 65
						rid: newId                                                                                                       // 66
					}                                                                                                                 // 65
				}, {                                                                                                               // 64
					multi: 1                                                                                                          // 69
				});                                                                                                                // 68
				RocketChat.models.Messages.update({                                                                                // 71
					rid: room._id                                                                                                     // 72
				}, {                                                                                                               // 71
					$set: {                                                                                                           // 74
						rid: newId                                                                                                       // 75
					}                                                                                                                 // 74
				}, {                                                                                                               // 73
					multi: 1                                                                                                          // 78
				});                                                                                                                // 77
				RocketChat.models.Rooms.removeById(room._id);                                                                      // 80
				room._id = newId;                                                                                                  // 81
				RocketChat.models.Rooms.insert(room);                                                                              // 82
			}                                                                                                                   // 83
                                                                                                                       //
			RocketChat.models.Subscriptions.update({                                                                            // 85
				rid: room._id,                                                                                                     // 86
				'u._id': id0                                                                                                       // 87
			}, {                                                                                                                // 85
				$set: {                                                                                                            // 89
					name: room.usernames[1]                                                                                           // 90
				}                                                                                                                  // 89
			});                                                                                                                 // 88
			return RocketChat.models.Subscriptions.update({                                                                     // 94
				rid: room._id,                                                                                                     // 95
				'u._id': id1                                                                                                       // 96
			}, {                                                                                                                // 94
				$set: {                                                                                                            // 98
					name: room.usernames[0]                                                                                           // 99
				}                                                                                                                  // 98
			});                                                                                                                 // 97
		});                                                                                                                  // 102
		console.log('Adding u.username to all documents');                                                                   // 104
		RocketChat.models.Users.find({}, {                                                                                   // 105
			username: 1                                                                                                         // 106
		}).forEach(function (user) {                                                                                         // 105
			console.log("Adding: u.username " + user.username + " to all document");                                            // 108
			RocketChat.models.Rooms.update({                                                                                    // 109
				'u._id': user._id                                                                                                  // 110
			}, {                                                                                                                // 109
				$set: {                                                                                                            // 112
					'u.username': user.username                                                                                       // 113
				}                                                                                                                  // 112
			}, {                                                                                                                // 111
				multi: 1                                                                                                           // 116
			});                                                                                                                 // 115
			RocketChat.models.Subscriptions.update({                                                                            // 119
				'u._id': user._id                                                                                                  // 120
			}, {                                                                                                                // 119
				$set: {                                                                                                            // 122
					'u.username': user.username                                                                                       // 123
				}                                                                                                                  // 122
			}, {                                                                                                                // 121
				multi: 1                                                                                                           // 126
			});                                                                                                                 // 125
			RocketChat.models.Messages.update({                                                                                 // 129
				'u._id': user._id                                                                                                  // 130
			}, {                                                                                                                // 129
				$set: {                                                                                                            // 132
					'u.username': user.username                                                                                       // 133
				}                                                                                                                  // 132
			}, {                                                                                                                // 131
				multi: 1                                                                                                           // 136
			});                                                                                                                 // 135
			RocketChat.models.Messages.update({                                                                                 // 139
				uid: user._id                                                                                                      // 140
			}, {                                                                                                                // 139
				$set: {                                                                                                            // 142
					u: user                                                                                                           // 143
				}                                                                                                                  // 142
			}, {                                                                                                                // 141
				multi: 1                                                                                                           // 146
			});                                                                                                                 // 145
			RocketChat.models.Messages.update({                                                                                 // 149
				by: user._id                                                                                                       // 150
			}, {                                                                                                                // 149
				$set: {                                                                                                            // 152
					u: user                                                                                                           // 153
				}                                                                                                                  // 152
			}, {                                                                                                                // 151
				multi: 1                                                                                                           // 156
			});                                                                                                                 // 155
			RocketChat.models.Messages.update({                                                                                 // 159
				uid: {                                                                                                             // 160
					$exists: 1                                                                                                        // 161
				}                                                                                                                  // 160
			}, {                                                                                                                // 159
				$unset: {                                                                                                          // 164
					uid: 1,                                                                                                           // 165
					by: 1                                                                                                             // 166
				}                                                                                                                  // 164
			}, {                                                                                                                // 163
				multi: 1                                                                                                           // 169
			});                                                                                                                 // 168
		});                                                                                                                  // 171
		return console.log('End');                                                                                           // 173
	}                                                                                                                     // 174
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v006.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v006.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 6,                                                                                                           // 2
	up: function () {                                                                                                     // 3
		console.log('Changing _id of #general channel room from XXX to GENERAL');                                            // 4
		var room = RocketChat.models.Rooms.findOneByName('general');                                                         // 6
                                                                                                                       //
		if (room && room._id !== 'GENERAL') {                                                                                // 8
			RocketChat.models.Subscriptions.update({                                                                            // 9
				rid: room._id                                                                                                      // 10
			}, {                                                                                                                // 9
				$set: {                                                                                                            // 12
					rid: 'GENERAL'                                                                                                    // 13
				}                                                                                                                  // 12
			}, {                                                                                                                // 11
				multi: 1                                                                                                           // 16
			});                                                                                                                 // 15
			RocketChat.models.Messages.update({                                                                                 // 19
				rid: room._id                                                                                                      // 20
			}, {                                                                                                                // 19
				$set: {                                                                                                            // 22
					rid: 'GENERAL'                                                                                                    // 23
				}                                                                                                                  // 22
			}, {                                                                                                                // 21
				multi: 1                                                                                                           // 26
			});                                                                                                                 // 25
			RocketChat.models.Rooms.removeById(room._id);                                                                       // 29
			delete room._id;                                                                                                    // 31
			RocketChat.models.Rooms.upsert({                                                                                    // 33
				_id: 'GENERAL'                                                                                                     // 34
			}, {                                                                                                                // 33
				$set: room                                                                                                         // 36
			});                                                                                                                 // 35
		}                                                                                                                    // 38
                                                                                                                       //
		return console.log('End');                                                                                           // 40
	}                                                                                                                     // 41
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v007.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v007.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* globals OEmbed */RocketChat.Migrations.add({                                                                        // 1
	version: 7,                                                                                                           // 4
	up: function () {                                                                                                     // 5
		console.log('Populate urls in messages');                                                                            // 6
		var query = RocketChat.models.Messages.find({                                                                        // 8
			'urls.0': {                                                                                                         // 9
				$exists: true                                                                                                      // 10
			}                                                                                                                   // 9
		});                                                                                                                  // 8
		var count = query.count();                                                                                           // 14
		query.forEach(function (message, index) {                                                                            // 16
			console.log(index + 1 + " / " + count);                                                                             // 17
			message.urls = message.urls.map(function (url) {                                                                    // 19
				if (_.isString(url)) {                                                                                             // 20
					return {                                                                                                          // 21
						url: url                                                                                                         // 22
					};                                                                                                                // 21
				}                                                                                                                  // 24
                                                                                                                       //
				return url;                                                                                                        // 25
			});                                                                                                                 // 26
			return OEmbed.rocketUrlParser(message);                                                                             // 28
		});                                                                                                                  // 29
		return console.log('End');                                                                                           // 31
	}                                                                                                                     // 32
});                                                                                                                    // 3
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v008.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v008.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 8,                                                                                                           // 2
	up: function () {                                                                                                     // 3
		console.log('Load old settings record');                                                                             // 4
		var settings = RocketChat.models.Settings.findOne({                                                                  // 5
			_id: 'settings'                                                                                                     // 6
		});                                                                                                                  // 5
                                                                                                                       //
		if (settings) {                                                                                                      // 9
			if (settings.CDN_PREFIX) {                                                                                          // 10
				RocketChat.models.Settings.insert({                                                                                // 11
					_id: 'CDN_PREFIX',                                                                                                // 11
					value: settings.CDN_PREFIX,                                                                                       // 11
					type: 'string',                                                                                                   // 11
					group: 'General'                                                                                                  // 11
				});                                                                                                                // 11
			}                                                                                                                   // 12
                                                                                                                       //
			if (settings.ENV && settings.ENV.MAIL_URL) {                                                                        // 14
				RocketChat.models.Settings.insert({                                                                                // 15
					_id: 'MAIL_URL',                                                                                                  // 15
					value: settings.ENV.MAIL_URL,                                                                                     // 15
					type: 'string',                                                                                                   // 15
					group: 'SMTP'                                                                                                     // 15
				});                                                                                                                // 15
			}                                                                                                                   // 16
                                                                                                                       //
			if (settings.denyUnverifiedEmails) {                                                                                // 18
				RocketChat.models.Settings.insert({                                                                                // 19
					_id: 'Accounts_denyUnverifiedEmails',                                                                             // 19
					value: settings.denyUnverifiedEmails,                                                                             // 19
					type: 'boolean',                                                                                                  // 19
					group: 'Accounts'                                                                                                 // 19
				});                                                                                                                // 19
			}                                                                                                                   // 20
                                                                                                                       //
			if (settings.public && settings.public.avatarStore && settings.public.avatarStore.type) {                           // 22
				RocketChat.models.Settings.insert({                                                                                // 23
					_id: 'avatarStore_type',                                                                                          // 23
					value: settings.public.avatarStore.type,                                                                          // 23
					type: 'string',                                                                                                   // 23
					group: 'API'                                                                                                      // 23
				});                                                                                                                // 23
			}                                                                                                                   // 24
                                                                                                                       //
			if (settings.public && settings.public.avatarStore && settings.public.avatarStore.path) {                           // 26
				RocketChat.models.Settings.insert({                                                                                // 27
					_id: 'avatarStore_path',                                                                                          // 27
					value: settings.public.avatarStore.path,                                                                          // 27
					type: 'string',                                                                                                   // 27
					group: 'API'                                                                                                      // 27
				});                                                                                                                // 27
			}                                                                                                                   // 28
                                                                                                                       //
			return RocketChat.models.Settings.remove({                                                                          // 30
				_id: 'settings'                                                                                                    // 31
			});                                                                                                                 // 30
		}                                                                                                                    // 33
	}                                                                                                                     // 34
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v009.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v009.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 9,                                                                                                           // 2
	up: function () {                                                                                                     // 3
		// Migrate existing source collection data to target collection                                                      // 4
		// target collection is defined in collections.coffee using the new collection name                                  // 5
		// source collection is dropped after data migration                                                                 // 6
		var toMigrate = [{                                                                                                   // 7
			source: new Meteor.Collection('data.ChatRoom'),                                                                     // 9
			target: RocketChat.models.Rooms.model                                                                               // 10
		}, {                                                                                                                 // 8
			source: new Meteor.Collection('data.ChatSubscription'),                                                             // 12
			target: RocketChat.models.Subscriptions.model                                                                       // 13
		}, {                                                                                                                 // 11
			source: new Meteor.Collection('data.ChatMessage'),                                                                  // 15
			target: RocketChat.models.Messages.model                                                                            // 16
		}, {                                                                                                                 // 14
			source: new Meteor.Collection('settings'),                                                                          // 18
			target: RocketChat.models.Settings.model                                                                            // 19
		}, {                                                                                                                 // 17
			// this collection may not exit                                                                                     // 21
			source: new Meteor.Collection('oembed_cache'),                                                                      // 22
			target: RocketChat.models.OEmbedCache.model                                                                         // 23
		}];                                                                                                                  // 20
		return toMigrate.forEach(function (collection) {                                                                     // 27
			var target = collection.target,                                                                                     // 27
			    source = collection.source; // rawCollection available as of Meteor 1.0.4                                       // 27
                                                                                                                       //
			console.log("Migrating data from: " + source.rawCollection().collectionName + " to: " + target.rawCollection().collectionName);
			source.find().forEach(function (doc) {                                                                              // 33
				// use upsert to account for GENERAL room created by initialData                                                   // 34
				return target.upsert({                                                                                             // 35
					_id: doc._id                                                                                                      // 36
				}, doc);                                                                                                           // 35
			});                                                                                                                 // 38
			var rawSource = source.rawCollection();                                                                             // 40
			return Meteor.wrapAsync(rawSource.drop, rawSource)(function (err /*, res*/) {                                       // 42
				if (err) {                                                                                                         // 43
					return console.log("Error dropping " + rawSource.collectionName + " collection due to: " + err.errmsg);           // 44
				}                                                                                                                  // 45
			}); // Note: the following would have been much easier, but didn't work.  The serverside                            // 46
			// data was not published to the client for some reason.                                                            // 49
			// newName = target.rawCollection().collectionName                                                                  // 50
			// Meteor.wrapAsync(rawSource.rename, rawSource )(newName, {dropTarget:true})                                       // 51
		});                                                                                                                  // 52
	}                                                                                                                     // 53
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v010.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v010.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 10,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		/*                                                                                                                   // 4
   * Remove duplicated usernames from rooms                                                                            //
   */var count = 0;                                                                                                    //
		RocketChat.models.Rooms.find({                                                                                       // 9
			'usernames.0': {                                                                                                    // 10
				$exists: true                                                                                                      // 11
			}                                                                                                                   // 10
		}, {                                                                                                                 // 9
			fields: {                                                                                                           // 14
				usernames: 1                                                                                                       // 15
			}                                                                                                                   // 14
		}).forEach(function (room) {                                                                                         // 13
			var newUsernames = _.uniq(room.usernames);                                                                          // 18
                                                                                                                       //
			if (newUsernames.length !== room.usernames.length) {                                                                // 19
				count++;                                                                                                           // 20
				return RocketChat.models.Rooms.update({                                                                            // 21
					_id: room._id                                                                                                     // 22
				}, {                                                                                                               // 21
					$set: {                                                                                                           // 24
						usernames: newUsernames                                                                                          // 25
					}                                                                                                                 // 24
				});                                                                                                                // 23
			}                                                                                                                   // 28
		});                                                                                                                  // 29
		return console.log("Removed duplicated usernames from " + count + " rooms");                                         // 31
	}                                                                                                                     // 32
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v011.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v011.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 11,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		/*                                                                                                                   // 4
   * Set GENERAL room to be default                                                                                    //
   */RocketChat.models.Rooms.update({                                                                                  //
			_id: 'GENERAL'                                                                                                      // 8
		}, {                                                                                                                 // 7
			$set: {                                                                                                             // 10
				'default': true                                                                                                    // 11
			}                                                                                                                   // 10
		});                                                                                                                  // 9
		return console.log('Set GENERAL room to be default');                                                                // 15
	}                                                                                                                     // 16
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v012.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v012.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 12,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		// Set oldest user as admin, if none exists yet                                                                      // 4
		var admin = RocketChat.models.Users.findOneAdmin(true, {                                                             // 5
			fields: {                                                                                                           // 6
				_id: 1                                                                                                             // 7
			}                                                                                                                   // 6
		});                                                                                                                  // 5
                                                                                                                       //
		if (!admin) {                                                                                                        // 11
			// get oldest user                                                                                                  // 12
			var oldestUser = RocketChat.models.Users.findOne({}, {                                                              // 13
				fields: {                                                                                                          // 14
					username: 1                                                                                                       // 15
				},                                                                                                                 // 14
				sort: {                                                                                                            // 17
					createdAt: 1                                                                                                      // 18
				}                                                                                                                  // 17
			});                                                                                                                 // 13
                                                                                                                       //
			if (oldestUser) {                                                                                                   // 22
				Meteor.users.update({                                                                                              // 23
					_id: oldestUser._id                                                                                               // 24
				}, {                                                                                                               // 23
					$set: {                                                                                                           // 26
						admin: true                                                                                                      // 27
					}                                                                                                                 // 26
				});                                                                                                                // 25
				return console.log("Set " + oldestUser.username + " as admin for being the oldest user");                          // 31
			}                                                                                                                   // 32
		}                                                                                                                    // 33
	}                                                                                                                     // 34
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v013.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v013.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 13,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		// Set all current users as active                                                                                   // 4
		RocketChat.models.Users.setAllUsersActive(true);                                                                     // 5
		return console.log('Set all users as active');                                                                       // 6
	}                                                                                                                     // 7
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v014.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v014.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 14,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		// Remove unused settings                                                                                            // 4
		RocketChat.models.Settings.remove({                                                                                  // 5
			_id: 'API_Piwik_URL'                                                                                                // 5
		});                                                                                                                  // 5
		RocketChat.models.Settings.remove({                                                                                  // 6
			_id: 'API_Piwik_ID'                                                                                                 // 6
		});                                                                                                                  // 6
		RocketChat.models.Settings.remove({                                                                                  // 7
			_id: 'Message_Edit'                                                                                                 // 7
		});                                                                                                                  // 7
		RocketChat.models.Settings.remove({                                                                                  // 8
			_id: 'Message_Delete'                                                                                               // 8
		});                                                                                                                  // 8
		RocketChat.models.Settings.remove({                                                                                  // 9
			_id: 'Message_KeepStatusHistory'                                                                                    // 9
		});                                                                                                                  // 9
		RocketChat.models.Settings.update({                                                                                  // 11
			_id: 'Message_ShowEditedStatus'                                                                                     // 11
		}, {                                                                                                                 // 11
			$set: {                                                                                                             // 12
				type: 'boolean',                                                                                                   // 13
				value: true                                                                                                        // 14
			}                                                                                                                   // 12
		});                                                                                                                  // 11
		RocketChat.models.Settings.update({                                                                                  // 18
			_id: 'Message_ShowDeletedStatus'                                                                                    // 18
		}, {                                                                                                                 // 18
			$set: {                                                                                                             // 19
				type: 'boolean',                                                                                                   // 20
				value: false                                                                                                       // 21
			}                                                                                                                   // 19
		});                                                                                                                  // 18
		var metaKeys = [{                                                                                                    // 25
			old: 'Meta:language',                                                                                               // 27
			"new": 'Meta_language'                                                                                              // 28
		}, {                                                                                                                 // 26
			old: 'Meta:fb:app_id',                                                                                              // 30
			"new": 'Meta_fb_app_id'                                                                                             // 31
		}, {                                                                                                                 // 29
			old: 'Meta:robots',                                                                                                 // 33
			"new": 'Meta_robots'                                                                                                // 34
		}, {                                                                                                                 // 32
			old: 'Meta:google-site-verification',                                                                               // 36
			"new": 'Meta_google-site-verification'                                                                              // 37
		}, {                                                                                                                 // 35
			old: 'Meta:msvalidate.01',                                                                                          // 39
			"new": 'Meta_msvalidate01'                                                                                          // 40
		}];                                                                                                                  // 38
                                                                                                                       //
		for (var _iterator = metaKeys, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 44
                                                                                                                       //
			if (_isArray) {                                                                                                     // 44
				if (_i >= _iterator.length) break;                                                                                 // 44
				_ref = _iterator[_i++];                                                                                            // 44
			} else {                                                                                                            // 44
				_i = _iterator.next();                                                                                             // 44
				if (_i.done) break;                                                                                                // 44
				_ref = _i.value;                                                                                                   // 44
			}                                                                                                                   // 44
                                                                                                                       //
			var oldAndNew = _ref;                                                                                               // 44
			var oldSetting = RocketChat.models.Settings.findOne({                                                               // 45
				_id: oldAndNew.old                                                                                                 // 45
			});                                                                                                                 // 45
			var oldValue = oldSetting && oldSetting.value;                                                                      // 46
			var newSetting = RocketChat.models.Settings.findOne({                                                               // 48
				_id: oldAndNew.new                                                                                                 // 48
			});                                                                                                                 // 48
			var newValue = newSetting && newSetting.value;                                                                      // 49
                                                                                                                       //
			if (oldValue && newValue) {                                                                                         // 51
				RocketChat.models.Settings.update({                                                                                // 52
					_id: oldAndNew.new                                                                                                // 53
				}, {                                                                                                               // 52
					$set: {                                                                                                           // 55
						value: newValue                                                                                                  // 56
					}                                                                                                                 // 55
				});                                                                                                                // 54
			}                                                                                                                   // 59
                                                                                                                       //
			RocketChat.models.Settings.remove({                                                                                 // 61
				_id: oldAndNew.old                                                                                                 // 62
			});                                                                                                                 // 61
		}                                                                                                                    // 64
                                                                                                                       //
		RocketChat.models.Settings.remove({                                                                                  // 66
			_id: 'SMTP_Security'                                                                                                // 67
		});                                                                                                                  // 66
	}                                                                                                                     // 69
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v015.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v015.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 15,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		console.log('Starting file migration');                                                                              // 4
		var oldFilesCollection = new Meteor.Collection('cfs.Files.filerecord');                                              // 5
		var oldGridFSCollection = new Meteor.Collection('cfs_gridfs.files.files');                                           // 6
		var oldChunkCollection = new Meteor.Collection('cfs_gridfs.files.chunks');                                           // 7
		var newFilesCollection = RocketChat.models.Uploads;                                                                  // 8
		var newGridFSCollection = new Meteor.Collection('rocketchat_uploads.files');                                         // 9
		var newChunkCollection = new Meteor.Collection('rocketchat_uploads.chunks');                                         // 10
		oldFilesCollection.find({                                                                                            // 12
			'copies.files.key': {                                                                                               // 13
				$exists: true                                                                                                      // 14
			}                                                                                                                   // 13
		}).forEach(function (cfsRecord) {                                                                                    // 12
			var nameParts = cfsRecord.original.name && cfsRecord.original.name.split('.');                                      // 17
			var extension = '';                                                                                                 // 18
			var url = "ufs/rocketchat_uploads/" + cfsRecord._id;                                                                // 19
			console.log('migrating file', url);                                                                                 // 21
                                                                                                                       //
			if (nameParts && nameParts.length > 1) {                                                                            // 23
				extension = nameParts.pop();                                                                                       // 24
				url = url + '.' + extension;                                                                                       // 25
			}                                                                                                                   // 26
                                                                                                                       //
			var record = {                                                                                                      // 28
				_id: cfsRecord._id,                                                                                                // 29
				name: cfsRecord.original.name || '',                                                                               // 30
				size: cfsRecord.original.size,                                                                                     // 31
				type: cfsRecord.original.type,                                                                                     // 32
				complete: true,                                                                                                    // 33
				uploading: false,                                                                                                  // 34
				store: 'rocketchat_uploads',                                                                                       // 35
				extension: extension,                                                                                              // 36
				userId: cfsRecord.userId,                                                                                          // 37
				uploadedAt: cfsRecord.updatedAt,                                                                                   // 38
				url: Meteor.absoluteUrl() + url                                                                                    // 39
			};                                                                                                                  // 28
			newFilesCollection.insert(record);                                                                                  // 42
			var oldGridFsFile = oldGridFSCollection.findOne({                                                                   // 44
				_id: new Meteor.Collection.ObjectID(cfsRecord.copies.files.key)                                                    // 45
			});                                                                                                                 // 44
			newGridFSCollection.insert({                                                                                        // 48
				_id: cfsRecord._id,                                                                                                // 49
				filename: cfsRecord._id,                                                                                           // 50
				contentType: oldGridFsFile.contentType,                                                                            // 51
				length: oldGridFsFile.length,                                                                                      // 52
				chunkSize: oldGridFsFile.chunkSize,                                                                                // 53
				uploadDate: oldGridFsFile.uploadDate,                                                                              // 54
				aliases: null,                                                                                                     // 55
				metadata: null,                                                                                                    // 56
				md5: oldGridFsFile.md5                                                                                             // 57
			});                                                                                                                 // 48
			oldChunkCollection.find({                                                                                           // 60
				files_id: new Meteor.Collection.ObjectID(cfsRecord.copies.files.key)                                               // 61
			}).forEach(function (oldChunk) {                                                                                    // 60
				newChunkCollection.insert({                                                                                        // 63
					_id: oldChunk._id,                                                                                                // 64
					files_id: cfsRecord._id,                                                                                          // 65
					n: oldChunk.n,                                                                                                    // 66
					data: oldChunk.data                                                                                               // 67
				});                                                                                                                // 63
			});                                                                                                                 // 69
			RocketChat.models.Messages.find({                                                                                   // 71
				$or: [{                                                                                                            // 72
					'urls.url': "https://demo.rocket.chat/cfs/files/Files/" + cfsRecord._id                                           // 73
				}, {                                                                                                               // 72
					'urls.url': "https://rocket.chat/cfs/files/Files/" + cfsRecord._id                                                // 75
				}]                                                                                                                 // 74
			}).forEach(function (message) {                                                                                     // 71
				for (var _iterator = message.urls, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
					var _ref;                                                                                                         // 78
                                                                                                                       //
					if (_isArray) {                                                                                                   // 78
						if (_i >= _iterator.length) break;                                                                               // 78
						_ref = _iterator[_i++];                                                                                          // 78
					} else {                                                                                                          // 78
						_i = _iterator.next();                                                                                           // 78
						if (_i.done) break;                                                                                              // 78
						_ref = _i.value;                                                                                                 // 78
					}                                                                                                                 // 78
                                                                                                                       //
					var urlsItem = _ref;                                                                                              // 78
                                                                                                                       //
					if (urlsItem.url === "https://demo.rocket.chat/cfs/files/Files/" + cfsRecord._id || urlsItem.url === "https://rocket.chat/cfs/files/Files/" + cfsRecord._id) {
						urlsItem.url = Meteor.absoluteUrl() + url;                                                                       // 80
                                                                                                                       //
						if (urlsItem.parsedUrl && urlsItem.parsedUrl.pathname) {                                                         // 81
							urlsItem.parsedUrl.pathname = "/" + url;                                                                        // 82
						}                                                                                                                // 83
                                                                                                                       //
						message.msg = message.msg.replace("https://demo.rocket.chat/cfs/files/Files/" + cfsRecord._id, Meteor.absoluteUrl() + url);
						message.msg = message.msg.replace("https://rocket.chat/cfs/files/Files/" + cfsRecord._id, Meteor.absoluteUrl() + url);
					}                                                                                                                 // 86
				}                                                                                                                  // 87
                                                                                                                       //
				RocketChat.models.Messages.update({                                                                                // 89
					_id: message._id                                                                                                  // 89
				}, {                                                                                                               // 89
					$set: {                                                                                                           // 90
						urls: message.urls,                                                                                              // 91
						msg: message.msg                                                                                                 // 92
					}                                                                                                                 // 90
				});                                                                                                                // 89
			});                                                                                                                 // 95
			oldFilesCollection.remove({                                                                                         // 97
				_id: cfsRecord._id                                                                                                 // 97
			});                                                                                                                 // 97
			oldGridFSCollection.remove({                                                                                        // 98
				_id: oldGridFsFile._id                                                                                             // 98
			});                                                                                                                 // 98
			oldChunkCollection.remove({                                                                                         // 99
				files_id: new Meteor.Collection.ObjectID(cfsRecord.copies.files.key)                                               // 99
			});                                                                                                                 // 99
		});                                                                                                                  // 100
		return console.log('End of file migration');                                                                         // 102
	}                                                                                                                     // 103
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v016.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v016.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 16,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Messages.tryDropIndex({                                                                     // 4
			_hidden: 1                                                                                                          // 5
		});                                                                                                                  // 4
	}                                                                                                                     // 7
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v017.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v017.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 17,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Messages.tryDropIndex({                                                                     // 4
			_hidden: 1                                                                                                          // 5
		});                                                                                                                  // 4
	}                                                                                                                     // 7
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v018.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v018.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 18,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var changes = {                                                                                                      // 4
			Accounts_Facebook: 'Accounts_OAuth_Facebook',                                                                       // 5
			Accounts_Facebook_id: 'Accounts_OAuth_Facebook_id',                                                                 // 6
			Accounts_Facebook_secret: 'Accounts_OAuth_Facebook_secret',                                                         // 7
			Accounts_Google: 'Accounts_OAuth_Google',                                                                           // 8
			Accounts_Google_id: 'Accounts_OAuth_Google_id',                                                                     // 9
			Accounts_Google_secret: 'Accounts_OAuth_Google_secret',                                                             // 10
			Accounts_Github: 'Accounts_OAuth_Github',                                                                           // 11
			Accounts_Github_id: 'Accounts_OAuth_Github_id',                                                                     // 12
			Accounts_Github_secret: 'Accounts_OAuth_Github_secret',                                                             // 13
			Accounts_Gitlab: 'Accounts_OAuth_Gitlab',                                                                           // 14
			Accounts_Gitlab_id: 'Accounts_OAuth_Gitlab_id',                                                                     // 15
			Accounts_Gitlab_secret: 'Accounts_OAuth_Gitlab_secret',                                                             // 16
			Accounts_Linkedin: 'Accounts_OAuth_Linkedin',                                                                       // 17
			Accounts_Linkedin_id: 'Accounts_OAuth_Linkedin_id',                                                                 // 18
			Accounts_Linkedin_secret: 'Accounts_OAuth_Linkedin_secret',                                                         // 19
			Accounts_Meteor: 'Accounts_OAuth_Meteor',                                                                           // 20
			Accounts_Meteor_id: 'Accounts_OAuth_Meteor_id',                                                                     // 21
			Accounts_Meteor_secret: 'Accounts_OAuth_Meteor_secret',                                                             // 22
			Accounts_Twitter: 'Accounts_OAuth_Twitter',                                                                         // 23
			Accounts_Twitter_id: 'Accounts_OAuth_Twitter_id',                                                                   // 24
			Accounts_Twitter_secret: 'Accounts_OAuth_Twitter_secret'                                                            // 25
		};                                                                                                                   // 4
                                                                                                                       //
		for (var _iterator = Object.keys(changes), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 28
                                                                                                                       //
			if (_isArray) {                                                                                                     // 28
				if (_i >= _iterator.length) break;                                                                                 // 28
				_ref = _iterator[_i++];                                                                                            // 28
			} else {                                                                                                            // 28
				_i = _iterator.next();                                                                                             // 28
				if (_i.done) break;                                                                                                // 28
				_ref = _i.value;                                                                                                   // 28
			}                                                                                                                   // 28
                                                                                                                       //
			var from = _ref;                                                                                                    // 28
			var to = changes[from];                                                                                             // 29
			var record = RocketChat.models.Settings.findOne({                                                                   // 30
				_id: from                                                                                                          // 31
			});                                                                                                                 // 30
                                                                                                                       //
			if (record) {                                                                                                       // 34
				delete record._id;                                                                                                 // 35
				RocketChat.models.Settings.upsert({                                                                                // 36
					_id: to                                                                                                           // 37
				}, record);                                                                                                        // 36
			}                                                                                                                   // 39
                                                                                                                       //
			RocketChat.models.Settings.remove({                                                                                 // 41
				_id: from                                                                                                          // 42
			});                                                                                                                 // 41
		}                                                                                                                    // 44
                                                                                                                       //
		return ServiceConfiguration.configurations.remove({});                                                               // 46
	}                                                                                                                     // 47
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v019.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v019.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 19,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		/*                                                                                                                   // 4
   * Migrate existing admin users to Role based admin functionality                                                    //
   * 'admin' role applies to global scope                                                                              //
   */var admins = Meteor.users.find({                                                                                  //
			admin: true                                                                                                         // 10
		}, {                                                                                                                 // 9
			fields: {                                                                                                           // 12
				_id: 1,                                                                                                            // 13
				username: 1                                                                                                        // 14
			}                                                                                                                   // 12
		}).fetch();                                                                                                          // 11
		admins.forEach(function (admin) {                                                                                    // 18
			RocketChat.authz.addUserRoles(admin._id, ['admin']);                                                                // 19
		});                                                                                                                  // 20
		Meteor.users.update({}, {                                                                                            // 22
			$unset: {                                                                                                           // 23
				admin: ''                                                                                                          // 24
			}                                                                                                                   // 23
		}, {                                                                                                                 // 22
			multi: true                                                                                                         // 27
		});                                                                                                                  // 26
                                                                                                                       //
		var usernames = _.pluck(admins, 'username').join(', ');                                                              // 30
                                                                                                                       //
		console.log(("Migrate " + usernames + " from admin field to 'admin' role").green); // Add 'user' role to all users   // 32
                                                                                                                       //
		var users = Meteor.users.find().fetch();                                                                             // 35
		users.forEach(function (user) {                                                                                      // 36
			RocketChat.authz.addUserRoles(user._id, ['user']);                                                                  // 37
		});                                                                                                                  // 38
		usernames = _.pluck(users, 'username').join(', ');                                                                   // 40
		console.log(("Add " + usernames + " to 'user' role").green); // Add 'moderator' role to channel/group creators       // 41
                                                                                                                       //
		var rooms = RocketChat.models.Rooms.findByTypes(['c', 'p']).fetch();                                                 // 44
		return rooms.forEach(function (room) {                                                                               // 45
			var creator = room && room.u && room.u._id;                                                                         // 46
                                                                                                                       //
			if (creator) {                                                                                                      // 48
				if (Meteor.users.findOne({                                                                                         // 49
					_id: creator                                                                                                      // 50
				})) {                                                                                                              // 49
					return RocketChat.authz.addUserRoles(creator, ['moderator'], room._id);                                           // 52
				} else {                                                                                                           // 53
					RocketChat.models.Subscriptions.removeByRoomId(room._id);                                                         // 54
					RocketChat.models.Messages.removeByRoomId(room._id);                                                              // 55
					return RocketChat.models.Rooms.removeById(room._id);                                                              // 56
				}                                                                                                                  // 57
			}                                                                                                                   // 58
		});                                                                                                                  // 59
	}                                                                                                                     // 60
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v020.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v020.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 20,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		/*                                                                                                                   // 4
   * Migrate existing `rocketchat_uploads` documents to include the room Id                                            //
   * where the file was uploaded to. The room Id is retrieved from the message                                         //
   * document created after the file upload.                                                                           //
   */ // list of channel messages which were created after uploading a file                                            //
		var msgQuery = {                                                                                                     // 11
			rid: {                                                                                                              // 12
				$exists: true                                                                                                      // 13
			},                                                                                                                  // 12
			'file._id': {                                                                                                       // 15
				$exists: true                                                                                                      // 16
			}                                                                                                                   // 15
		};                                                                                                                   // 11
		var msgOptions = {                                                                                                   // 20
			fields: {                                                                                                           // 21
				_id: 1,                                                                                                            // 22
				rid: 1,                                                                                                            // 23
				'file._id': 1                                                                                                      // 24
			}                                                                                                                   // 21
		};                                                                                                                   // 20
		var cursorFileMessages = RocketChat.models.Messages.find(msgQuery, msgOptions);                                      // 28
                                                                                                                       //
		if (!cursorFileMessages.count()) {                                                                                   // 29
			return;                                                                                                             // 30
		}                                                                                                                    // 31
                                                                                                                       //
		cursorFileMessages.fetch().forEach(function (msg) {                                                                  // 33
			return RocketChat.models.Uploads.update({                                                                           // 34
				_id: msg.file && msg.file._id                                                                                      // 35
			}, {                                                                                                                // 34
				$set: {                                                                                                            // 37
					rid: msg.rid                                                                                                      // 38
				}                                                                                                                  // 37
			}, {                                                                                                                // 36
				$multi: true                                                                                                       // 41
			});                                                                                                                 // 40
		});                                                                                                                  // 43
		return console.log('Updated rocketchat_uploads documents to include the room Id in which they were sent.');          // 45
	}                                                                                                                     // 46
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v021.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v021.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 21,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		/*                                                                                                                   // 4
   * Remove any i18nLabel from rocketchat_settings                                                                     //
   * They will be added again where necessary on next restart                                                          //
   */RocketChat.models.Settings.update({                                                                               //
			i18nLabel: {                                                                                                        // 9
				$exists: true                                                                                                      // 10
			}                                                                                                                   // 9
		}, {                                                                                                                 // 8
			$unset: {                                                                                                           // 13
				i18nLabel: 1                                                                                                       // 14
			}                                                                                                                   // 13
		}, {                                                                                                                 // 12
			multi: true                                                                                                         // 17
		});                                                                                                                  // 16
		return console.log('Removed i18nLabel from Settings. New labels will be added on next restart! Please restart your server.');
	}                                                                                                                     // 21
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v022.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v022.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 22,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		/*                                                                                                                   // 4
   * Update message edit field                                                                                         //
   */RocketChat.models.Messages.upgradeEtsToEditAt();                                                                  //
		return console.log('Updated old messages\' ets edited timestamp to new editedAt timestamp.');                        // 9
	}                                                                                                                     // 10
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v023.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v023.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 23,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Settings.remove({                                                                                  // 4
			_id: 'Accounts_denyUnverifiedEmails'                                                                                // 5
		});                                                                                                                  // 4
		return console.log('Deleting not used setting Accounts_denyUnverifiedEmails');                                       // 8
	}                                                                                                                     // 9
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v024.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v024.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 24,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Permissions.remove({                                                                        // 4
			_id: 'access-rocket-permissions'                                                                                    // 5
		});                                                                                                                  // 4
	}                                                                                                                     // 7
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v025.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v025.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 25,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Settings.update({                                                                           // 4
			_id: /Accounts_OAuth_Custom/                                                                                        // 5
		}, {                                                                                                                 // 4
			$set: {                                                                                                             // 7
				persistent: true                                                                                                   // 8
			},                                                                                                                  // 7
			$unset: {                                                                                                           // 10
				hidden: true                                                                                                       // 11
			}                                                                                                                   // 10
		}, {                                                                                                                 // 6
			multi: true                                                                                                         // 14
		});                                                                                                                  // 13
	}                                                                                                                     // 16
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v026.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v026.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 26,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Messages.update({                                                                           // 4
			t: 'rm'                                                                                                             // 5
		}, {                                                                                                                 // 4
			$set: {                                                                                                             // 7
				mentions: []                                                                                                       // 8
			}                                                                                                                   // 7
		}, {                                                                                                                 // 6
			multi: true                                                                                                         // 11
		});                                                                                                                  // 10
	}                                                                                                                     // 13
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v027.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v027.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 27,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Users.update({}, {                                                                                 // 5
			$rename: {                                                                                                          // 6
				roles: '_roles'                                                                                                    // 7
			}                                                                                                                   // 6
		}, {                                                                                                                 // 5
			multi: true                                                                                                         // 10
		});                                                                                                                  // 9
		RocketChat.models.Users.find({                                                                                       // 13
			_roles: {                                                                                                           // 14
				$exists: 1                                                                                                         // 15
			}                                                                                                                   // 14
		}).forEach(function (user) {                                                                                         // 13
			for (var _iterator = Object.keys(user._roles), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
				var _ref;                                                                                                          // 18
                                                                                                                       //
				if (_isArray) {                                                                                                    // 18
					if (_i >= _iterator.length) break;                                                                                // 18
					_ref = _iterator[_i++];                                                                                           // 18
				} else {                                                                                                           // 18
					_i = _iterator.next();                                                                                            // 18
					if (_i.done) break;                                                                                               // 18
					_ref = _i.value;                                                                                                  // 18
				}                                                                                                                  // 18
                                                                                                                       //
				var scope = _ref;                                                                                                  // 18
				var roles = user._roles[scope];                                                                                    // 19
				RocketChat.models.Roles.addUserRoles(user._id, roles, scope);                                                      // 20
			}                                                                                                                   // 21
		});                                                                                                                  // 22
		return RocketChat.models.Users.update({}, {                                                                          // 24
			$unset: {                                                                                                           // 25
				_roles: 1                                                                                                          // 26
			}                                                                                                                   // 25
		}, {                                                                                                                 // 24
			multi: true                                                                                                         // 29
		});                                                                                                                  // 28
	}                                                                                                                     // 31
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v028.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v028.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 28,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Permissions.addRole('view-c-room', 'bot');                                                  // 4
	}                                                                                                                     // 5
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v029.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v029.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 29,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var LDAP_Url = (RocketChat.models.Settings.findOne('LDAP_Url') || {}).value;                                         // 4
		var LDAP_TLS = (RocketChat.models.Settings.findOne('LDAP_TLS') || {}).value;                                         // 5
		var LDAP_DN = (RocketChat.models.Settings.findOne('LDAP_DN') || {}).value;                                           // 6
		var LDAP_Bind_Search = (RocketChat.models.Settings.findOne('LDAP_Bind_Search') || {}).value;                         // 7
                                                                                                                       //
		if (LDAP_Url && LDAP_Url.trim() !== '') {                                                                            // 9
			LDAP_Url = LDAP_Url.replace(/ldaps?:\/\//i, '');                                                                    // 10
			RocketChat.models.Settings.upsert({                                                                                 // 11
				_id: 'LDAP_Host'                                                                                                   // 11
			}, {                                                                                                                // 11
				$set: {                                                                                                            // 12
					value: LDAP_Url                                                                                                   // 13
				},                                                                                                                 // 12
				$setOnInsert: {                                                                                                    // 15
					createdAt: new Date()                                                                                             // 16
				}                                                                                                                  // 15
			});                                                                                                                 // 11
		}                                                                                                                    // 19
                                                                                                                       //
		if (LDAP_TLS === true) {                                                                                             // 21
			RocketChat.models.Settings.upsert({                                                                                 // 22
				_id: 'LDAP_Encryption'                                                                                             // 22
			}, {                                                                                                                // 22
				$set: {                                                                                                            // 23
					value: 'tls'                                                                                                      // 24
				},                                                                                                                 // 23
				$setOnInsert: {                                                                                                    // 26
					createdAt: new Date()                                                                                             // 27
				}                                                                                                                  // 26
			});                                                                                                                 // 22
		}                                                                                                                    // 30
                                                                                                                       //
		if (LDAP_DN && LDAP_DN.trim() !== '') {                                                                              // 32
			RocketChat.models.Settings.upsert({                                                                                 // 33
				_id: 'LDAP_Domain_Base'                                                                                            // 33
			}, {                                                                                                                // 33
				$set: {                                                                                                            // 34
					value: LDAP_DN                                                                                                    // 35
				},                                                                                                                 // 34
				$setOnInsert: {                                                                                                    // 37
					createdAt: new Date()                                                                                             // 38
				}                                                                                                                  // 37
			});                                                                                                                 // 33
			RocketChat.models.Settings.upsert({                                                                                 // 42
				_id: 'LDAP_Username_Field'                                                                                         // 42
			}, {                                                                                                                // 42
				$set: {                                                                                                            // 43
					value: ''                                                                                                         // 44
				},                                                                                                                 // 43
				$setOnInsert: {                                                                                                    // 46
					createdAt: new Date()                                                                                             // 47
				}                                                                                                                  // 46
			});                                                                                                                 // 42
			RocketChat.models.Settings.upsert({                                                                                 // 51
				_id: 'LDAP_Unique_Identifier_Field'                                                                                // 51
			}, {                                                                                                                // 51
				$set: {                                                                                                            // 52
					value: ''                                                                                                         // 53
				},                                                                                                                 // 52
				$setOnInsert: {                                                                                                    // 55
					createdAt: new Date()                                                                                             // 56
				}                                                                                                                  // 55
			});                                                                                                                 // 51
		}                                                                                                                    // 59
                                                                                                                       //
		if (LDAP_Bind_Search && LDAP_Bind_Search.trim() !== '') {                                                            // 61
			RocketChat.models.Settings.upsert({                                                                                 // 62
				_id: 'LDAP_Custom_Domain_Search'                                                                                   // 62
			}, {                                                                                                                // 62
				$set: {                                                                                                            // 63
					value: LDAP_Bind_Search                                                                                           // 64
				},                                                                                                                 // 63
				$setOnInsert: {                                                                                                    // 66
					createdAt: new Date()                                                                                             // 67
				}                                                                                                                  // 66
			});                                                                                                                 // 62
			RocketChat.models.Settings.upsert({                                                                                 // 71
				_id: 'LDAP_Use_Custom_Domain_Search'                                                                               // 71
			}, {                                                                                                                // 71
				$set: {                                                                                                            // 72
					value: true                                                                                                       // 73
				},                                                                                                                 // 72
				$setOnInsert: {                                                                                                    // 75
					createdAt: new Date()                                                                                             // 76
				}                                                                                                                  // 75
			});                                                                                                                 // 71
		}                                                                                                                    // 79
                                                                                                                       //
		RocketChat.models.Settings.remove({                                                                                  // 81
			_id: 'LDAP_Url'                                                                                                     // 81
		});                                                                                                                  // 81
		RocketChat.models.Settings.remove({                                                                                  // 82
			_id: 'LDAP_TLS'                                                                                                     // 82
		});                                                                                                                  // 82
		RocketChat.models.Settings.remove({                                                                                  // 83
			_id: 'LDAP_DN'                                                                                                      // 83
		});                                                                                                                  // 83
		RocketChat.models.Settings.remove({                                                                                  // 84
			_id: 'LDAP_Bind_Search'                                                                                             // 84
		});                                                                                                                  // 84
	}                                                                                                                     // 85
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v030.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v030.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 30,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var WebRTC_STUN_Server = (RocketChat.models.Settings.findOne('WebRTC_STUN_Server') || {}).value;                     // 4
		var WebRTC_TURN_Server = (RocketChat.models.Settings.findOne('WebRTC_TURN_Server') || {}).value;                     // 5
		var WebRTC_TURN_Username = (RocketChat.models.Settings.findOne('WebRTC_TURN_Username') || {}).value;                 // 6
		var WebRTC_TURN_Password = (RocketChat.models.Settings.findOne('WebRTC_TURN_Password') || {}).value;                 // 7
		RocketChat.models.Settings.remove({                                                                                  // 9
			_id: 'WebRTC_STUN_Server'                                                                                           // 9
		});                                                                                                                  // 9
		RocketChat.models.Settings.remove({                                                                                  // 10
			_id: 'WebRTC_TURN_Server'                                                                                           // 10
		});                                                                                                                  // 10
		RocketChat.models.Settings.remove({                                                                                  // 11
			_id: 'WebRTC_TURN_Username'                                                                                         // 11
		});                                                                                                                  // 11
		RocketChat.models.Settings.remove({                                                                                  // 12
			_id: 'WebRTC_TURN_Password'                                                                                         // 12
		});                                                                                                                  // 12
                                                                                                                       //
		if (WebRTC_STUN_Server === 'stun:stun.l.google.com:19302' && WebRTC_TURN_Server === 'turn:numb.viagenie.ca:3478' && WebRTC_TURN_Username === 'team@rocket.chat' && WebRTC_TURN_Password === 'demo') {
			return;                                                                                                             // 15
		}                                                                                                                    // 16
                                                                                                                       //
		var servers = '';                                                                                                    // 18
                                                                                                                       //
		if (WebRTC_STUN_Server) {                                                                                            // 19
			servers += WebRTC_STUN_Server;                                                                                      // 20
		}                                                                                                                    // 21
                                                                                                                       //
		if (WebRTC_TURN_Server) {                                                                                            // 23
			servers += ', ';                                                                                                    // 24
                                                                                                                       //
			if (WebRTC_TURN_Username != null) {                                                                                 // 25
				servers += encodeURIComponent(WebRTC_TURN_Username) + ':' + encodeURIComponent(WebRTC_TURN_Password) + '@';        // 26
			}                                                                                                                   // 27
                                                                                                                       //
			servers += WebRTC_TURN_Server;                                                                                      // 28
		}                                                                                                                    // 29
                                                                                                                       //
		if (servers !== '') {                                                                                                // 31
			return RocketChat.models.Settings.upsert({                                                                          // 32
				_id: 'WebRTC_Servers'                                                                                              // 32
			}, {                                                                                                                // 32
				$set: {                                                                                                            // 33
					value: servers                                                                                                    // 34
				},                                                                                                                 // 33
				$setOnInsert: {                                                                                                    // 36
					createdAt: new Date()                                                                                             // 37
				}                                                                                                                  // 36
			});                                                                                                                 // 32
		}                                                                                                                    // 40
	}                                                                                                                     // 41
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v031.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v031.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 31,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var changes = {                                                                                                      // 4
			API_Analytics: 'GoogleTagManager_id'                                                                                // 5
		};                                                                                                                   // 4
                                                                                                                       //
		for (var _iterator = Object.keys(changes), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 8
                                                                                                                       //
			if (_isArray) {                                                                                                     // 8
				if (_i >= _iterator.length) break;                                                                                 // 8
				_ref = _iterator[_i++];                                                                                            // 8
			} else {                                                                                                            // 8
				_i = _iterator.next();                                                                                             // 8
				if (_i.done) break;                                                                                                // 8
				_ref = _i.value;                                                                                                   // 8
			}                                                                                                                   // 8
                                                                                                                       //
			var from = _ref;                                                                                                    // 8
			var to = changes[from];                                                                                             // 9
			var record = RocketChat.models.Settings.findOne({                                                                   // 10
				_id: from                                                                                                          // 11
			});                                                                                                                 // 10
                                                                                                                       //
			if (record) {                                                                                                       // 14
				delete record._id;                                                                                                 // 15
				RocketChat.models.Settings.upsert({                                                                                // 16
					_id: to                                                                                                           // 17
				}, record);                                                                                                        // 16
			}                                                                                                                   // 19
                                                                                                                       //
			RocketChat.models.Settings.remove({                                                                                 // 21
				_id: from                                                                                                          // 22
			});                                                                                                                 // 21
		}                                                                                                                    // 24
	}                                                                                                                     // 25
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v032.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v032.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 32,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Settings.update({                                                                           // 4
			_id: /Accounts_OAuth_Custom_/                                                                                       // 5
		}, {                                                                                                                 // 4
			$set: {                                                                                                             // 7
				group: 'OAuth'                                                                                                     // 8
			}                                                                                                                   // 7
		}, {                                                                                                                 // 6
			multi: true                                                                                                         // 11
		});                                                                                                                  // 10
	}                                                                                                                     // 13
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v033.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v033.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 33,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var scriptAlert = '/**\n * This script is out-of-date, convert to the new format\n * (https://rocket.chat/docs/administrator-guides/integrations)\n**/\n\n';
		var integrations = RocketChat.models.Integrations.find({                                                             // 6
			$or: [{                                                                                                             // 7
				script: {                                                                                                          // 9
					$exists: false                                                                                                    // 10
				},                                                                                                                 // 9
				processIncomingRequestScript: {                                                                                    // 12
					$exists: true                                                                                                     // 13
				}                                                                                                                  // 12
			}, {                                                                                                                // 8
				script: {                                                                                                          // 16
					$exists: false                                                                                                    // 17
				},                                                                                                                 // 16
				prepareOutgoingRequestScript: {                                                                                    // 19
					$exists: true                                                                                                     // 20
				}                                                                                                                  // 19
			}, {                                                                                                                // 15
				script: {                                                                                                          // 23
					$exists: false                                                                                                    // 24
				},                                                                                                                 // 23
				processOutgoingResponseScript: {                                                                                   // 26
					$exists: true                                                                                                     // 27
				}                                                                                                                  // 26
			}]                                                                                                                  // 22
		}).fetch();                                                                                                          // 6
		integrations.forEach(function (integration) {                                                                        // 33
			var script = '';                                                                                                    // 34
                                                                                                                       //
			if (integration.processIncomingRequestScript) {                                                                     // 35
				script += integration.processIncomingRequestScript + '\n\n';                                                       // 36
			}                                                                                                                   // 37
                                                                                                                       //
			if (integration.prepareOutgoingRequestScript) {                                                                     // 38
				script += integration.prepareOutgoingRequestScript + '\n\n';                                                       // 39
			}                                                                                                                   // 40
                                                                                                                       //
			if (integration.processOutgoingResponseScript) {                                                                    // 41
				script += integration.processOutgoingResponseScript + '\n\n';                                                      // 42
			}                                                                                                                   // 43
                                                                                                                       //
			return RocketChat.models.Integrations.update(integration._id, {                                                     // 45
				$set: {                                                                                                            // 46
					script: scriptAlert + script.replace(/^/gm, '// ')                                                                // 47
				}                                                                                                                  // 46
			});                                                                                                                 // 45
		});                                                                                                                  // 50
		var update = {                                                                                                       // 52
			$unset: {                                                                                                           // 53
				processIncomingRequestScript: 1,                                                                                   // 54
				prepareOutgoingRequestScript: 1,                                                                                   // 55
				processOutgoingResponseScript: 1                                                                                   // 56
			}                                                                                                                   // 53
		};                                                                                                                   // 52
		RocketChat.models.Integrations.update({}, update, {                                                                  // 60
			multi: true                                                                                                         // 61
		});                                                                                                                  // 60
		update = {                                                                                                           // 64
			$set: {                                                                                                             // 65
				enabled: true                                                                                                      // 66
			}                                                                                                                   // 65
		};                                                                                                                   // 64
		RocketChat.models.Integrations.update({                                                                              // 70
			enabled: {                                                                                                          // 71
				$exists: false                                                                                                     // 72
			}                                                                                                                   // 71
		}, update, {                                                                                                         // 70
			multi: true                                                                                                         // 75
		});                                                                                                                  // 74
	}                                                                                                                     // 77
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v034.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v034.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 34,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Settings.update({                                                                           // 4
			_id: 'Layout_Login_Header',                                                                                         // 5
			value: '<a class="logo" href="/"><img src="/assets/logo/logo.svg?v=3" /></a>'                                       // 6
		}, {                                                                                                                 // 4
			$set: {                                                                                                             // 8
				value: '<a class="logo" href="/"><img src="/assets/logo?v=3" /></a>'                                               // 9
			}                                                                                                                   // 8
		});                                                                                                                  // 7
	}                                                                                                                     // 12
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v035.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v035.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 35,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		return RocketChat.models.Messages.update({                                                                           // 4
			'file._id': {                                                                                                       // 5
				$exists: true                                                                                                      // 6
			},                                                                                                                  // 5
			'attachments.title_link': {                                                                                         // 8
				$exists: true                                                                                                      // 9
			},                                                                                                                  // 8
			'attachments.title_link_download': {                                                                                // 11
				$exists: false                                                                                                     // 12
			}                                                                                                                   // 11
		}, {                                                                                                                 // 4
			$set: {                                                                                                             // 15
				'attachments.$.title_link_download': true                                                                          // 16
			}                                                                                                                   // 15
		}, {                                                                                                                 // 14
			multi: true                                                                                                         // 19
		});                                                                                                                  // 18
	}                                                                                                                     // 21
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v036.js":["url",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v036.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var url = void 0;                                                                                                      // 1
module.import('url', {                                                                                                 // 1
	"default": function (v) {                                                                                             // 1
		url = v;                                                                                                             // 1
	}                                                                                                                     // 1
}, 0);                                                                                                                 // 1
RocketChat.Migrations.add({                                                                                            // 3
	version: 36,                                                                                                          // 4
	up: function () {                                                                                                     // 5
		var loginHeader = RocketChat.models.Settings.findOne({                                                               // 6
			_id: 'Layout_Login_Header'                                                                                          // 7
		});                                                                                                                  // 6
                                                                                                                       //
		if (!loginHeader || !loginHeader.value) {                                                                            // 10
			return;                                                                                                             // 11
		}                                                                                                                    // 12
                                                                                                                       //
		var match = loginHeader.value.match(/<img\ssrc=['"]([^'"]+)/);                                                       // 14
                                                                                                                       //
		if (match && match.length === 2) {                                                                                   // 16
			(function () {                                                                                                      // 16
				var requestUrl = match[1];                                                                                         // 17
                                                                                                                       //
				if (requestUrl[0] === '/') {                                                                                       // 18
					requestUrl = url.resolve(Meteor.absoluteUrl(), requestUrl);                                                       // 19
				}                                                                                                                  // 20
                                                                                                                       //
				try {                                                                                                              // 22
					Meteor.startup(function () {                                                                                      // 23
						return Meteor.setTimeout(function () {                                                                           // 24
							var result;                                                                                                     // 25
							result = HTTP.get(requestUrl, {                                                                                 // 26
								npmRequestOptions: {                                                                                           // 27
									encoding: 'binary'                                                                                            // 28
								}                                                                                                              // 27
							});                                                                                                             // 26
                                                                                                                       //
							if (result.statusCode === 200) {                                                                                // 31
								return RocketChat.Assets.setAsset(result.content, result.headers['content-type'], 'logo');                     // 32
							}                                                                                                               // 33
						}, 30000);                                                                                                       // 34
					});                                                                                                               // 35
				} catch (e) {                                                                                                      // 36
					console.log(e);                                                                                                   // 37
				}                                                                                                                  // 38
			})();                                                                                                               // 16
		}                                                                                                                    // 39
                                                                                                                       //
		return RocketChat.models.Settings.remove({                                                                           // 41
			_id: 'Layout_Login_Header'                                                                                          // 42
		});                                                                                                                  // 41
	}                                                                                                                     // 44
});                                                                                                                    // 3
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"v037.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v037.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 37,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Permissions) {                                              // 4
			// Find permission add-user (changed it to create-user)                                                             // 6
			var addUserPermission = RocketChat.models.Permissions.findOne('add-user');                                          // 7
                                                                                                                       //
			if (addUserPermission) {                                                                                            // 9
				RocketChat.models.Permissions.upsert({                                                                             // 10
					_id: 'create-user'                                                                                                // 10
				}, {                                                                                                               // 10
					$set: {                                                                                                           // 10
						roles: addUserPermission.roles                                                                                   // 10
					}                                                                                                                 // 10
				});                                                                                                                // 10
				RocketChat.models.Permissions.remove({                                                                             // 11
					_id: 'add-user'                                                                                                   // 11
				});                                                                                                                // 11
			}                                                                                                                   // 12
		}                                                                                                                    // 13
	}                                                                                                                     // 14
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v038.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v038.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 38,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.settings && RocketChat.settings.get) {                                                  // 4
			var allowPinning = RocketChat.settings.get('Message_AllowPinningByAnyone'); // If public pinning was allowed, add pinning permissions to 'users', else leave it to 'owners' and 'moderators'
                                                                                                                       //
			if (allowPinning) {                                                                                                 // 8
				if (RocketChat.models && RocketChat.models.Permissions) {                                                          // 9
					RocketChat.models.Permissions.update({                                                                            // 10
						_id: 'pin-message'                                                                                               // 10
					}, {                                                                                                              // 10
						$addToSet: {                                                                                                     // 10
							roles: 'user'                                                                                                   // 10
						}                                                                                                                // 10
					});                                                                                                               // 10
				}                                                                                                                  // 11
			}                                                                                                                   // 12
		}                                                                                                                    // 13
	}                                                                                                                     // 14
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v039.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v039.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 39,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 4
			var footer = RocketChat.models.Settings.findOne({                                                                   // 5
				_id: 'Layout_Sidenav_Footer'                                                                                       // 5
			}); // Replace footer octicons with icons                                                                           // 5
                                                                                                                       //
			if (footer && footer.value !== '') {                                                                                // 8
				var footerValue = footer.value.replace('octicon octicon-pencil', 'icon-pencil');                                   // 9
				footerValue = footerValue.replace('octicon octicon-heart', 'icon-heart');                                          // 10
				footerValue = footerValue.replace('octicon octicon-mark-github', 'icon-github-circled');                           // 11
				RocketChat.models.Settings.update({                                                                                // 12
					_id: 'Layout_Sidenav_Footer'                                                                                      // 12
				}, {                                                                                                               // 12
					$set: {                                                                                                           // 12
						value: footerValue,                                                                                              // 12
						packageValue: footerValue                                                                                        // 12
					}                                                                                                                 // 12
				});                                                                                                                // 12
			}                                                                                                                   // 13
		}                                                                                                                    // 14
	}                                                                                                                     // 15
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v040.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v040.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 40,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Settings.find({                                                                                    // 4
			_id: /Accounts_OAuth_Custom_/,                                                                                      // 4
			i18nLabel: 'Accounts_OAuth_Custom_Enable'                                                                           // 4
		}).forEach(function (customOauth) {                                                                                  // 4
			var parts = customOauth._id.split('_');                                                                             // 5
                                                                                                                       //
			var name = parts[3];                                                                                                // 6
			var id = 'Accounts_OAuth_Custom_' + name + '_token_sent_via';                                                       // 7
                                                                                                                       //
			if (!RocketChat.models.Settings.findOne({                                                                           // 8
				_id: id                                                                                                            // 8
			})) {                                                                                                               // 8
				RocketChat.models.Settings.insert({                                                                                // 9
					'_id': id,                                                                                                        // 10
					'type': 'select',                                                                                                 // 11
					'group': 'OAuth',                                                                                                 // 12
					'section': 'Custom OAuth: ' + name,                                                                               // 13
					'i18nLabel': 'Accounts_OAuth_Custom_Token_Sent_Via',                                                              // 14
					'persistent': true,                                                                                               // 15
					'values': [{                                                                                                      // 16
						'key': 'header',                                                                                                 // 18
						'i18nLabel': 'Header'                                                                                            // 19
					}, {                                                                                                              // 17
						'key': 'payload',                                                                                                // 22
						'i18nLabel': 'Payload'                                                                                           // 23
					}],                                                                                                               // 21
					'packageValue': 'payload',                                                                                        // 26
					'valueSource': 'packageValue',                                                                                    // 27
					'ts': new Date(),                                                                                                 // 28
					'hidden': false,                                                                                                  // 29
					'blocked': false,                                                                                                 // 30
					'sorter': 255,                                                                                                    // 31
					'i18nDescription': 'Accounts_OAuth_Custom_' + name + '_token_sent_via_Description',                               // 32
					'createdAt': new Date(),                                                                                          // 33
					'value': 'payload'                                                                                                // 34
				});                                                                                                                // 9
			}                                                                                                                   // 36
		});                                                                                                                  // 37
	}                                                                                                                     // 38
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v041.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v041.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 41,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Users) {                                                    // 4
			RocketChat.models.Users.update({                                                                                    // 5
				bot: true                                                                                                          // 5
			}, {                                                                                                                // 5
				$set: {                                                                                                            // 5
					type: 'bot'                                                                                                       // 5
				}                                                                                                                  // 5
			}, {                                                                                                                // 5
				multi: true                                                                                                        // 5
			});                                                                                                                 // 5
			RocketChat.models.Users.update({                                                                                    // 6
				'profile.guest': true                                                                                              // 6
			}, {                                                                                                                // 6
				$set: {                                                                                                            // 6
					type: 'visitor'                                                                                                   // 6
				}                                                                                                                  // 6
			}, {                                                                                                                // 6
				multi: true                                                                                                        // 6
			});                                                                                                                 // 6
			RocketChat.models.Users.update({                                                                                    // 7
				type: {                                                                                                            // 7
					$exists: false                                                                                                    // 7
				}                                                                                                                  // 7
			}, {                                                                                                                // 7
				$set: {                                                                                                            // 7
					type: 'user'                                                                                                      // 7
				}                                                                                                                  // 7
			}, {                                                                                                                // 7
				multi: true                                                                                                        // 7
			});                                                                                                                 // 7
		}                                                                                                                    // 8
	}                                                                                                                     // 9
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v042.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v042.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 42,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var files = RocketChat.__migration_assets_files = new Mongo.Collection('assets.files');                              // 4
		var chunks = RocketChat.__migration_assets_chunks = new Mongo.Collection('assets.chunks');                           // 5
		var list = {                                                                                                         // 6
			'favicon.ico': 'favicon_ico',                                                                                       // 7
			'favicon.svg': 'favicon',                                                                                           // 8
			'favicon_64.png': 'favicon_64',                                                                                     // 9
			'favicon_96.png': 'favicon_96',                                                                                     // 10
			'favicon_128.png': 'favicon_128',                                                                                   // 11
			'favicon_192.png': 'favicon_192',                                                                                   // 12
			'favicon_256.png': 'favicon_256'                                                                                    // 13
		};                                                                                                                   // 6
                                                                                                                       //
		for (var _iterator = Object.keys(list), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 16
                                                                                                                       //
			if (_isArray) {                                                                                                     // 16
				if (_i >= _iterator.length) break;                                                                                 // 16
				_ref = _iterator[_i++];                                                                                            // 16
			} else {                                                                                                            // 16
				_i = _iterator.next();                                                                                             // 16
				if (_i.done) break;                                                                                                // 16
				_ref = _i.value;                                                                                                   // 16
			}                                                                                                                   // 16
                                                                                                                       //
			var from = _ref;                                                                                                    // 16
			var to = list[from];                                                                                                // 17
			var query = {                                                                                                       // 19
				_id: to                                                                                                            // 20
			};                                                                                                                  // 19
                                                                                                                       //
			if (!files.findOne(query)) {                                                                                        // 23
				var oldFile = files.findOne({                                                                                      // 24
					_id: from                                                                                                         // 25
				});                                                                                                                // 24
                                                                                                                       //
				if (oldFile) {                                                                                                     // 28
					var extension = RocketChat.Assets.mime.extension(oldFile.contentType);                                            // 29
					RocketChat.settings.removeById("Assets_" + from);                                                                 // 30
					RocketChat.settings.updateById("Assets_" + to, {                                                                  // 31
						url: "/assets/" + to + "." + extension,                                                                          // 32
						defaultUrl: RocketChat.Assets.assets[to].defaultUrl                                                              // 33
					});                                                                                                               // 31
					oldFile._id = to;                                                                                                 // 36
					oldFile.filename = to;                                                                                            // 37
					files.insert(oldFile);                                                                                            // 38
					files.remove({                                                                                                    // 39
						_id: from                                                                                                        // 40
					});                                                                                                               // 39
					chunks.update({                                                                                                   // 43
						files_id: from                                                                                                   // 44
					}, {                                                                                                              // 43
						$set: {                                                                                                          // 46
							files_id: to                                                                                                    // 47
						}                                                                                                                // 46
					}, {                                                                                                              // 45
						multi: true                                                                                                      // 50
					});                                                                                                               // 49
				}                                                                                                                  // 52
			}                                                                                                                   // 53
		}                                                                                                                    // 54
	}                                                                                                                     // 55
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v043.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v043.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 43,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Permissions) {                                              // 4
			RocketChat.models.Permissions.update({                                                                              // 5
				_id: 'pin-message'                                                                                                 // 5
			}, {                                                                                                                // 5
				$addToSet: {                                                                                                       // 5
					roles: 'admin'                                                                                                    // 5
				}                                                                                                                  // 5
			});                                                                                                                 // 5
		}                                                                                                                    // 6
	}                                                                                                                     // 7
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v044.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v044.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 44,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Users) {                                                    // 4
			RocketChat.models.Users.find({                                                                                      // 5
				$or: [{                                                                                                            // 5
					'settings.preferences.disableNewRoomNotification': {                                                              // 5
						$exists: 1                                                                                                       // 5
					}                                                                                                                 // 5
				}, {                                                                                                               // 5
					'settings.preferences.disableNewMessageNotification': {                                                           // 5
						$exists: 1                                                                                                       // 5
					}                                                                                                                 // 5
				}]                                                                                                                 // 5
			}).forEach(function (user) {                                                                                        // 5
				var newRoomNotification = !(user && user.settings && user.settings.preferences && user.settings.preferences.disableNewRoomNotification);
				var newMessageNotification = !(user && user.settings && user.settings.preferences && user.settings.preferences.disableNewMessageNotification);
				RocketChat.models.Users.update({                                                                                   // 8
					_id: user._id                                                                                                     // 8
				}, {                                                                                                               // 8
					$unset: {                                                                                                         // 8
						'settings.preferences.disableNewRoomNotification': 1,                                                            // 8
						'settings.preferences.disableNewMessageNotification': 1                                                          // 8
					},                                                                                                                // 8
					$set: {                                                                                                           // 8
						'settings.preferences.newRoomNotification': newRoomNotification,                                                 // 8
						'settings.preferences.newMessageNotification': newMessageNotification                                            // 8
					}                                                                                                                 // 8
				});                                                                                                                // 8
			});                                                                                                                 // 9
		}                                                                                                                    // 10
                                                                                                                       //
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 12
			var optOut = RocketChat.models.Settings.findOne({                                                                   // 13
				_id: 'Statistics_opt_out'                                                                                          // 13
			});                                                                                                                 // 13
                                                                                                                       //
			if (optOut) {                                                                                                       // 14
				RocketChat.models.Settings.remove({                                                                                // 15
					_id: 'Statistics_opt_out'                                                                                         // 15
				});                                                                                                                // 15
				RocketChat.models.Settings.upsert({                                                                                // 16
					_id: 'Statistics_reporting'                                                                                       // 16
				}, {                                                                                                               // 16
					$set: {                                                                                                           // 17
						value: !optOut.value ? true : false,                                                                             // 18
						i18nDescription: 'Statistics_reporting_Description',                                                             // 19
						packageValue: true,                                                                                              // 20
						i18nLabel: 'Statistics_reporting'                                                                                // 21
					}                                                                                                                 // 17
				});                                                                                                                // 16
			}                                                                                                                   // 24
		}                                                                                                                    // 25
                                                                                                                       //
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 27
			var favoriteRooms = RocketChat.models.Settings.findOne({                                                            // 28
				_id: 'Disable_Favorite_Rooms'                                                                                      // 28
			});                                                                                                                 // 28
                                                                                                                       //
			if (favoriteRooms) {                                                                                                // 29
				RocketChat.models.Settings.remove({                                                                                // 30
					_id: 'Disable_Favorite_Rooms'                                                                                     // 30
				});                                                                                                                // 30
				RocketChat.models.Settings.upsert({                                                                                // 31
					_id: 'Favorite_Rooms'                                                                                             // 31
				}, {                                                                                                               // 31
					$set: {                                                                                                           // 32
						value: !favoriteRooms.value ? true : false,                                                                      // 33
						i18nDescription: 'Favorite_Rooms_Description',                                                                   // 34
						packageValue: true,                                                                                              // 35
						i18nLabel: 'Favorite_Rooms'                                                                                      // 36
					}                                                                                                                 // 32
				});                                                                                                                // 31
			}                                                                                                                   // 39
		}                                                                                                                    // 40
	}                                                                                                                     // 41
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v045.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v045.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 45,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		// finds the latest created visitor                                                                                  // 5
		var lastVisitor = RocketChat.models.Users.find({                                                                     // 6
			type: 'visitor'                                                                                                     // 6
		}, {                                                                                                                 // 6
			fields: {                                                                                                           // 6
				username: 1                                                                                                        // 6
			},                                                                                                                  // 6
			sort: {                                                                                                             // 6
				createdAt: -1                                                                                                      // 6
			},                                                                                                                  // 6
			limit: 1                                                                                                            // 6
		}).fetch();                                                                                                          // 6
                                                                                                                       //
		if (lastVisitor && lastVisitor.length > 0) {                                                                         // 8
			var lastNumber = lastVisitor[0].username.replace(/^guest\-/, '');                                                   // 9
			RocketChat.settings.add('Livechat_guest_count', parseInt(lastNumber) + 1, {                                         // 11
				type: 'int',                                                                                                       // 11
				group: 'Livechat'                                                                                                  // 11
			});                                                                                                                 // 11
		}                                                                                                                    // 12
	}                                                                                                                     // 13
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v046.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v046.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 46,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Users) {                                                    // 4
			RocketChat.models.Users.update({                                                                                    // 5
				type: {                                                                                                            // 5
					$exists: false                                                                                                    // 5
				}                                                                                                                  // 5
			}, {                                                                                                                // 5
				$set: {                                                                                                            // 5
					type: 'user'                                                                                                      // 5
				}                                                                                                                  // 5
			}, {                                                                                                                // 5
				multi: true                                                                                                        // 5
			});                                                                                                                 // 5
		}                                                                                                                    // 6
	}                                                                                                                     // 7
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v047.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v047.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 47,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 4
			var autolinkerUrls = RocketChat.models.Settings.findOne({                                                           // 5
				_id: 'AutoLinker_Urls'                                                                                             // 5
			});                                                                                                                 // 5
                                                                                                                       //
			if (autolinkerUrls) {                                                                                               // 6
				RocketChat.models.Settings.remove({                                                                                // 7
					_id: 'AutoLinker_Urls'                                                                                            // 7
				});                                                                                                                // 7
				RocketChat.models.Settings.upsert({                                                                                // 8
					_id: 'AutoLinker_Urls_Scheme'                                                                                     // 8
				}, {                                                                                                               // 8
					$set: {                                                                                                           // 9
						value: autolinkerUrls.value ? true : false,                                                                      // 10
						i18nLabel: 'AutoLinker_Urls_Scheme'                                                                              // 11
					}                                                                                                                 // 9
				});                                                                                                                // 8
				RocketChat.models.Settings.upsert({                                                                                // 14
					_id: 'AutoLinker_Urls_www'                                                                                        // 14
				}, {                                                                                                               // 14
					$set: {                                                                                                           // 15
						value: autolinkerUrls.value ? true : false,                                                                      // 16
						i18nLabel: 'AutoLinker_Urls_www'                                                                                 // 17
					}                                                                                                                 // 15
				});                                                                                                                // 14
				RocketChat.models.Settings.upsert({                                                                                // 20
					_id: 'AutoLinker_Urls_TLD'                                                                                        // 20
				}, {                                                                                                               // 20
					$set: {                                                                                                           // 21
						value: autolinkerUrls.value ? true : false,                                                                      // 22
						i18nLabel: 'AutoLinker_Urls_TLD'                                                                                 // 23
					}                                                                                                                 // 21
				});                                                                                                                // 20
			}                                                                                                                   // 26
		}                                                                                                                    // 27
	}                                                                                                                     // 28
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v048.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v048.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 48,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 4
			var RocketBot_Enabled = RocketChat.models.Settings.findOne({                                                        // 6
				_id: 'RocketBot_Enabled'                                                                                           // 7
			});                                                                                                                 // 6
                                                                                                                       //
			if (RocketBot_Enabled) {                                                                                            // 9
				RocketChat.models.Settings.remove({                                                                                // 10
					_id: 'RocketBot_Enabled'                                                                                          // 11
				});                                                                                                                // 10
				RocketChat.models.Settings.upsert({                                                                                // 13
					_id: 'InternalHubot_Enabled'                                                                                      // 14
				}, {                                                                                                               // 13
					$set: {                                                                                                           // 16
						value: RocketBot_Enabled.value                                                                                   // 17
					}                                                                                                                 // 16
				});                                                                                                                // 15
			}                                                                                                                   // 20
                                                                                                                       //
			var RocketBot_Name = RocketChat.models.Settings.findOne({                                                           // 22
				_id: 'RocketBot_Name'                                                                                              // 23
			});                                                                                                                 // 22
                                                                                                                       //
			if (RocketBot_Name) {                                                                                               // 25
				RocketChat.models.Settings.remove({                                                                                // 26
					_id: 'RocketBot_Name'                                                                                             // 27
				});                                                                                                                // 26
				RocketChat.models.Settings.upsert({                                                                                // 29
					_id: 'InternalHubot_Username'                                                                                     // 30
				}, {                                                                                                               // 29
					$set: {                                                                                                           // 32
						value: RocketBot_Name.value                                                                                      // 33
					}                                                                                                                 // 32
				});                                                                                                                // 31
			}                                                                                                                   // 36
		}                                                                                                                    // 38
	}                                                                                                                     // 39
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v049.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v049.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 49,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var count = 1;                                                                                                       // 5
		RocketChat.models.Rooms.find({                                                                                       // 7
			t: 'l'                                                                                                              // 7
		}, {                                                                                                                 // 7
			sort: {                                                                                                             // 7
				ts: 1                                                                                                              // 7
			},                                                                                                                  // 7
			fields: {                                                                                                           // 7
				_id: 1                                                                                                             // 7
			}                                                                                                                   // 7
		}).forEach(function (room) {                                                                                         // 7
			RocketChat.models.Rooms.update({                                                                                    // 8
				_id: room._id                                                                                                      // 8
			}, {                                                                                                                // 8
				$set: {                                                                                                            // 8
					code: count                                                                                                       // 8
				}                                                                                                                  // 8
			});                                                                                                                 // 8
			RocketChat.models.Subscriptions.update({                                                                            // 9
				rid: room._id                                                                                                      // 9
			}, {                                                                                                                // 9
				$set: {                                                                                                            // 9
					code: count                                                                                                       // 9
				}                                                                                                                  // 9
			}, {                                                                                                                // 9
				multi: true                                                                                                        // 9
			});                                                                                                                 // 9
			count++;                                                                                                            // 10
		});                                                                                                                  // 11
		RocketChat.models.Settings.upsert({                                                                                  // 13
			_id: 'Livechat_Room_Count'                                                                                          // 13
		}, {                                                                                                                 // 13
			$set: {                                                                                                             // 14
				value: count,                                                                                                      // 15
				type: 'int',                                                                                                       // 16
				group: 'Livechat'                                                                                                  // 17
			}                                                                                                                   // 14
		});                                                                                                                  // 13
	}                                                                                                                     // 20
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v050.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v050.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 50,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Subscriptions.tryDropIndex('u._id_1_name_1_t_1');                                                  // 4
		RocketChat.models.Subscriptions.tryEnsureIndex({                                                                     // 5
			'u._id': 1,                                                                                                         // 5
			'name': 1,                                                                                                          // 5
			't': 1                                                                                                              // 5
		});                                                                                                                  // 5
	}                                                                                                                     // 6
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v051.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v051.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 51,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Rooms.find({                                                                                       // 4
			t: 'l',                                                                                                             // 4
			'v.token': {                                                                                                        // 4
				$exists: true                                                                                                      // 4
			},                                                                                                                  // 4
			label: {                                                                                                            // 4
				$exists: false                                                                                                     // 4
			}                                                                                                                   // 4
		}).forEach(function (room) {                                                                                         // 4
			var user = RocketChat.models.Users.findOne({                                                                        // 5
				'profile.token': room.v.token                                                                                      // 5
			});                                                                                                                 // 5
                                                                                                                       //
			if (user) {                                                                                                         // 6
				RocketChat.models.Rooms.update({                                                                                   // 7
					_id: room._id                                                                                                     // 7
				}, {                                                                                                               // 7
					$set: {                                                                                                           // 8
						label: user.name || user.username,                                                                               // 9
						'v._id': user._id                                                                                                // 10
					}                                                                                                                 // 8
				});                                                                                                                // 7
				RocketChat.models.Subscriptions.update({                                                                           // 13
					rid: room._id                                                                                                     // 13
				}, {                                                                                                               // 13
					$set: {                                                                                                           // 14
						name: user.name || user.username                                                                                 // 15
					}                                                                                                                 // 14
				}, {                                                                                                               // 13
					multi: true                                                                                                       // 17
				});                                                                                                                // 17
			}                                                                                                                   // 18
		});                                                                                                                  // 19
	}                                                                                                                     // 20
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v052.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v052.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 52,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Users.update({                                                                                     // 4
			_id: 'rocket.cat'                                                                                                   // 4
		}, {                                                                                                                 // 4
			$addToSet: {                                                                                                        // 4
				roles: 'bot'                                                                                                       // 4
			}                                                                                                                   // 4
		});                                                                                                                  // 4
	}                                                                                                                     // 5
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v053.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v053.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 53,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Settings.update({                                                                                  // 4
			_id: 'Email_Header',                                                                                                // 4
			value: ''                                                                                                           // 4
		}, {                                                                                                                 // 4
			$set: {                                                                                                             // 5
				value: '<table border="0" cellspacing="0" cellpadding="0" width="100%" bgcolor="#f3f3f3" style="color:#4a4a4a;font-family: Helvetica,Arial,sans-serif;font-size:14px;line-height:20px;border-collapse:callapse;border-spacing:0;margin:0 auto"><tr><td style="padding:1em"><table border="0" cellspacing="0" cellpadding="0" align="center" width="100%" style="width:100%;margin:0 auto;max-width:800px"><tr><td bgcolor="#ffffff" style="background-color:#ffffff; border: 1px solid #DDD; font-size: 10pt; font-family: Helvetica,Arial,sans-serif;"><table width="100%" border="0" cellspacing="0" cellpadding="0"><tr><td style="background-color: #04436a;"><h1 style="font-family: Helvetica,Arial,sans-serif; padding: 0 1em; margin: 0; line-height: 70px; color: #FFF;">[Site_Name]</h1></td></tr><tr><td style="padding: 1em; font-size: 10pt; font-family: Helvetica,Arial,sans-serif;">'
			}                                                                                                                   // 5
		});                                                                                                                  // 4
		RocketChat.models.Settings.update({                                                                                  // 10
			_id: 'Email_Footer',                                                                                                // 10
			value: ''                                                                                                           // 10
		}, {                                                                                                                 // 10
			$set: {                                                                                                             // 11
				value: '</td></tr></table></td></tr><tr><td border="0" cellspacing="0" cellpadding="0" width="100%" style="font-family: Helvetica,Arial,sans-serif; max-width: 800px; margin: 0 auto; padding: 1.5em; text-align: center; font-size: 8pt; color: #999;">Powered by <a href="https://rocket.chat" target="_blank">Rocket.Chat</a></td></tr></table></td></tr></table>'
			}                                                                                                                   // 11
		});                                                                                                                  // 10
	}                                                                                                                     // 15
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v054.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v054.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 54,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Users) {                                                    // 4
			// Set default message viewMode to 'normal' or 'cozy' depending on the users' current settings and remove the field 'compactView'
			RocketChat.models.Users.update({                                                                                    // 6
				'settings.preferences.compactView': true                                                                           // 6
			}, {                                                                                                                // 6
				$set: {                                                                                                            // 6
					'settings.preferences.viewMode': 1                                                                                // 6
				},                                                                                                                 // 6
				$unset: {                                                                                                          // 6
					'settings.preferences.compactView': 1                                                                             // 6
				}                                                                                                                  // 6
			}, {                                                                                                                // 6
				multi: true                                                                                                        // 6
			});                                                                                                                 // 6
			RocketChat.models.Users.update({                                                                                    // 7
				'settings.preferences.viewMode': {                                                                                 // 7
					$ne: 1                                                                                                            // 7
				}                                                                                                                  // 7
			}, {                                                                                                                // 7
				$set: {                                                                                                            // 7
					'settings.preferences.viewMode': 0                                                                                // 7
				}                                                                                                                  // 7
			}, {                                                                                                                // 7
				multi: true                                                                                                        // 7
			});                                                                                                                 // 7
		}                                                                                                                    // 8
	}                                                                                                                     // 9
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v055.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v055.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 55,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Rooms.find({                                                                                       // 4
			'topic': {                                                                                                          // 4
				$exists: 1,                                                                                                        // 4
				$ne: ''                                                                                                            // 4
			}                                                                                                                   // 4
		}, {                                                                                                                 // 4
			topic: 1                                                                                                            // 4
		}).forEach(function (room) {                                                                                         // 4
			var topic = s.escapeHTML(room.topic);                                                                               // 5
			RocketChat.models.Rooms.update({                                                                                    // 6
				_id: room._id                                                                                                      // 6
			}, {                                                                                                                // 6
				$set: {                                                                                                            // 6
					topic: topic                                                                                                      // 6
				}                                                                                                                  // 6
			});                                                                                                                 // 6
			RocketChat.models.Messages.update({                                                                                 // 7
				t: 'room_changed_topic',                                                                                           // 7
				rid: room._id                                                                                                      // 7
			}, {                                                                                                                // 7
				$set: {                                                                                                            // 7
					msg: topic                                                                                                        // 7
				}                                                                                                                  // 7
			});                                                                                                                 // 7
		});                                                                                                                  // 8
	}                                                                                                                     // 9
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v056.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v056.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 56,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Messages.find({                                                                                    // 4
			_id: /\./                                                                                                           // 4
		}).forEach(function (message) {                                                                                      // 4
			var oldId = message._id;                                                                                            // 5
			message._id = message._id.replace(/(.*)\.S?(.*)/, 'slack-$1-$2');                                                   // 6
			RocketChat.models.Messages.insert(message);                                                                         // 7
			RocketChat.models.Messages.remove({                                                                                 // 8
				_id: oldId                                                                                                         // 8
			});                                                                                                                 // 8
		});                                                                                                                  // 9
	}                                                                                                                     // 10
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v057.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v057.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 57,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Messages.find({                                                                                    // 4
			_id: /slack-([a-zA-Z0-9]+)S([0-9]+-[0-9]+)/                                                                         // 4
		}).forEach(function (message) {                                                                                      // 4
			var oldId = message._id;                                                                                            // 5
			message._id = message._id.replace(/slack-([a-zA-Z0-9]+)S([0-9]+-[0-9]+)/, 'slack-$1-$2');                           // 6
			RocketChat.models.Messages.insert(message);                                                                         // 7
			RocketChat.models.Messages.remove({                                                                                 // 8
				_id: oldId                                                                                                         // 8
			});                                                                                                                 // 8
		});                                                                                                                  // 9
		RocketChat.models.Messages.find({                                                                                    // 11
			_id: /slack-slack/                                                                                                  // 11
		}).forEach(function (message) {                                                                                      // 11
			var oldId = message._id;                                                                                            // 12
			message._id = message._id.replace('slack-slack', 'slack');                                                          // 13
			RocketChat.models.Messages.insert(message);                                                                         // 14
			RocketChat.models.Messages.remove({                                                                                 // 15
				_id: oldId                                                                                                         // 15
			});                                                                                                                 // 15
		});                                                                                                                  // 16
		RocketChat.models.Messages.find({                                                                                    // 18
			_id: /\./                                                                                                           // 18
		}).forEach(function (message) {                                                                                      // 18
			var oldId = message._id;                                                                                            // 19
			message._id = message._id.replace(/(.*)\.?S(.*)/, 'slack-$1-$2');                                                   // 20
			message._id = message._id.replace(/\./g, '-');                                                                      // 21
			RocketChat.models.Messages.remove({                                                                                 // 22
				_id: message._id                                                                                                   // 22
			});                                                                                                                 // 22
			RocketChat.models.Messages.insert(message);                                                                         // 23
			RocketChat.models.Messages.remove({                                                                                 // 24
				_id: oldId                                                                                                         // 24
			});                                                                                                                 // 24
		});                                                                                                                  // 25
	}                                                                                                                     // 26
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v058.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v058.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 58,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Settings.update({                                                                                  // 4
			_id: 'Push_gateway',                                                                                                // 4
			value: 'https://rocket.chat'                                                                                        // 4
		}, {                                                                                                                 // 4
			$set: {                                                                                                             // 5
				value: 'https://gateway.rocket.chat',                                                                              // 6
				packageValue: 'https://gateway.rocket.chat'                                                                        // 7
			}                                                                                                                   // 5
		});                                                                                                                  // 4
	}                                                                                                                     // 10
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v059.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v059.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 59,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var users = RocketChat.models.Users.find({}, {                                                                       // 4
			sort: {                                                                                                             // 4
				createdAt: 1                                                                                                       // 4
			},                                                                                                                  // 4
			limit: 1                                                                                                            // 4
		}).fetch();                                                                                                          // 4
                                                                                                                       //
		if (users && users.length > 0) {                                                                                     // 5
			var createdAt = users[0].createdAt;                                                                                 // 6
			RocketChat.models.Settings.update({                                                                                 // 7
				createdAt: {                                                                                                       // 7
					$exists: 0                                                                                                        // 7
				}                                                                                                                  // 7
			}, {                                                                                                                // 7
				$set: {                                                                                                            // 7
					createdAt: createdAt                                                                                              // 7
				}                                                                                                                  // 7
			}, {                                                                                                                // 7
				multi: true                                                                                                        // 7
			});                                                                                                                 // 7
			RocketChat.models.Statistics.update({                                                                               // 8
				installedAt: {                                                                                                     // 8
					$exists: 0                                                                                                        // 8
				}                                                                                                                  // 8
			}, {                                                                                                                // 8
				$set: {                                                                                                            // 8
					installedAt: createdAt                                                                                            // 8
				}                                                                                                                  // 8
			}, {                                                                                                                // 8
				multi: true                                                                                                        // 8
			});                                                                                                                 // 8
		}                                                                                                                    // 9
	}                                                                                                                     // 10
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v060.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v060.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 60,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var subscriptions = RocketChat.models.Subscriptions.find({                                                           // 4
			$or: [{                                                                                                             // 4
				name: {                                                                                                            // 4
					$exists: 0                                                                                                        // 4
				}                                                                                                                  // 4
			}, {                                                                                                                // 4
				name: {                                                                                                            // 4
					$not: {                                                                                                           // 4
						$type: 2                                                                                                         // 4
					}                                                                                                                 // 4
				}                                                                                                                  // 4
			}]                                                                                                                  // 4
		}).fetch();                                                                                                          // 4
                                                                                                                       //
		if (subscriptions && subscriptions.length > 0) {                                                                     // 5
			RocketChat.models.Subscriptions.remove({                                                                            // 6
				_id: {                                                                                                             // 6
					$in: _.pluck(subscriptions, '_id')                                                                                // 6
				}                                                                                                                  // 6
			});                                                                                                                 // 6
		}                                                                                                                    // 7
                                                                                                                       //
		subscriptions = RocketChat.models.Subscriptions.find().forEach(function (subscription) {                             // 9
			var user = RocketChat.models.Users.findOne({                                                                        // 10
				_id: subscription && subscription.u && subscription.u._id                                                          // 10
			});                                                                                                                 // 10
                                                                                                                       //
			if (!user) {                                                                                                        // 11
				RocketChat.models.Subscriptions.remove({                                                                           // 12
					_id: subscription._id                                                                                             // 12
				});                                                                                                                // 12
			}                                                                                                                   // 13
		});                                                                                                                  // 14
	}                                                                                                                     // 15
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v061.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v061.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 61,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Users.find({                                                                                       // 4
			active: false                                                                                                       // 4
		}).forEach(function (user) {                                                                                         // 4
			RocketChat.models.Subscriptions.setArchivedByUsername(user.username, true);                                         // 5
		});                                                                                                                  // 6
	}                                                                                                                     // 7
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v062.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v062.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 62,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Settings.remove({                                                                                  // 4
			_id: 'Atlassian Crowd',                                                                                             // 4
			type: 'group'                                                                                                       // 4
		});                                                                                                                  // 4
	}                                                                                                                     // 5
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v063.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v063.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 63,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var forward = RocketChat.models.Settings.findOne({                                                                   // 4
			_id: 'Livechat_forward_open_chats'                                                                                  // 4
		});                                                                                                                  // 4
		var timeout = RocketChat.models.Settings.findOne({                                                                   // 5
			_id: 'Livechat_forward_open_chats_timeout'                                                                          // 5
		});                                                                                                                  // 5
                                                                                                                       //
		if (forward && forward.value) {                                                                                      // 7
			RocketChat.models.Settings.upsert({                                                                                 // 8
				_id: 'Livechat_agent_leave_action'                                                                                 // 8
			}, {                                                                                                                // 8
				$set: {                                                                                                            // 9
					value: 'forward',                                                                                                 // 10
					type: 'string',                                                                                                   // 11
					group: 'Livechat'                                                                                                 // 12
				}                                                                                                                  // 9
			});                                                                                                                 // 8
		}                                                                                                                    // 15
                                                                                                                       //
		if (timeout && timeout.value !== 60) {                                                                               // 17
			RocketChat.models.Settings.upsert({                                                                                 // 18
				_id: 'Livechat_agent_leave_action_timeout'                                                                         // 18
			}, {                                                                                                                // 18
				$set: {                                                                                                            // 19
					value: timeout.value,                                                                                             // 20
					type: 'int',                                                                                                      // 21
					group: 'Livechat'                                                                                                 // 22
				}                                                                                                                  // 19
			});                                                                                                                 // 18
		}                                                                                                                    // 25
                                                                                                                       //
		RocketChat.models.Settings.remove({                                                                                  // 27
			_id: 'Livechat_forward_open_chats'                                                                                  // 27
		});                                                                                                                  // 27
		RocketChat.models.Settings.remove({                                                                                  // 28
			_id: 'Livechat_forward_open_chats_timeout'                                                                          // 28
		});                                                                                                                  // 28
	}                                                                                                                     // 29
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v064.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v064.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 64,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Messages.find({                                                                                    // 4
			't': 'room_changed_topic',                                                                                          // 4
			'msg': /</                                                                                                          // 4
		}, {                                                                                                                 // 4
			msg: 1                                                                                                              // 4
		}).forEach(function (message) {                                                                                      // 4
			var msg = s.escapeHTML(message.msg);                                                                                // 5
			RocketChat.models.Messages.update({                                                                                 // 6
				_id: message._id                                                                                                   // 6
			}, {                                                                                                                // 6
				$set: {                                                                                                            // 6
					msg: msg                                                                                                          // 6
				}                                                                                                                  // 6
			});                                                                                                                 // 6
		});                                                                                                                  // 7
	}                                                                                                                     // 8
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v065.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v065.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 65,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 4
			// New color settings - start with old settings as defaults                                                         // 6
			var replace1 = RocketChat.models.Settings.findOne({                                                                 // 7
				_id: 'theme-color-quaternary-font-color'                                                                           // 7
			});                                                                                                                 // 7
			var replace2 = RocketChat.models.Settings.findOne({                                                                 // 8
				_id: 'theme-color-input-font-color'                                                                                // 8
			});                                                                                                                 // 8
			var replace3 = RocketChat.models.Settings.findOne({                                                                 // 9
				_id: 'theme-color-status-online'                                                                                   // 9
			});                                                                                                                 // 9
			var replace4 = RocketChat.models.Settings.findOne({                                                                 // 10
				_id: 'theme-color-status-away'                                                                                     // 10
			});                                                                                                                 // 10
			var replace5 = RocketChat.models.Settings.findOne({                                                                 // 11
				_id: 'theme-color-status-busy'                                                                                     // 11
			});                                                                                                                 // 11
			var replace6 = RocketChat.models.Settings.findOne({                                                                 // 12
				_id: 'theme-color-info-active-font-color'                                                                          // 12
			});                                                                                                                 // 12
                                                                                                                       //
			if (replace1) {                                                                                                     // 13
				RocketChat.models.Settings.upsert({                                                                                // 14
					_id: 'theme-color-secondary-action-color'                                                                         // 14
				}, {                                                                                                               // 14
					$set: {                                                                                                           // 14
						value: replace1.value                                                                                            // 14
					}                                                                                                                 // 14
				});                                                                                                                // 14
			}                                                                                                                   // 15
                                                                                                                       //
			if (replace2) {                                                                                                     // 16
				RocketChat.models.Settings.upsert({                                                                                // 17
					_id: 'theme-color-component-color'                                                                                // 17
				}, {                                                                                                               // 17
					$set: {                                                                                                           // 17
						value: replace2.value                                                                                            // 17
					}                                                                                                                 // 17
				});                                                                                                                // 17
			}                                                                                                                   // 18
                                                                                                                       //
			if (replace3) {                                                                                                     // 19
				RocketChat.models.Settings.upsert({                                                                                // 20
					_id: 'theme-color-success-color'                                                                                  // 20
				}, {                                                                                                               // 20
					$set: {                                                                                                           // 20
						value: replace3.value                                                                                            // 20
					}                                                                                                                 // 20
				});                                                                                                                // 20
			}                                                                                                                   // 21
                                                                                                                       //
			if (replace4) {                                                                                                     // 22
				RocketChat.models.Settings.upsert({                                                                                // 23
					_id: 'theme-color-pending-color'                                                                                  // 23
				}, {                                                                                                               // 23
					$set: {                                                                                                           // 23
						value: replace4.value                                                                                            // 23
					}                                                                                                                 // 23
				});                                                                                                                // 23
			}                                                                                                                   // 24
                                                                                                                       //
			if (replace5) {                                                                                                     // 25
				RocketChat.models.Settings.upsert({                                                                                // 26
					_id: 'theme-color-error-color'                                                                                    // 26
				}, {                                                                                                               // 26
					$set: {                                                                                                           // 26
						value: replace5.value                                                                                            // 26
					}                                                                                                                 // 26
				});                                                                                                                // 26
			}                                                                                                                   // 27
                                                                                                                       //
			if (replace6) {                                                                                                     // 28
				RocketChat.models.Settings.upsert({                                                                                // 29
					_id: 'theme-color-selection-color'                                                                                // 29
				}, {                                                                                                               // 29
					$set: {                                                                                                           // 29
						value: replace6.value                                                                                            // 29
					}                                                                                                                 // 29
				});                                                                                                                // 29
			} // Renamed color settings                                                                                         // 30
                                                                                                                       //
                                                                                                                       //
			var oldColor = RocketChat.models.Settings.findOne({                                                                 // 33
				_id: 'theme-color-action-buttons-color'                                                                            // 33
			});                                                                                                                 // 33
                                                                                                                       //
			if (oldColor) {                                                                                                     // 34
				RocketChat.models.Settings.remove({                                                                                // 35
					_id: 'theme-color-action-buttons-color'                                                                           // 35
				});                                                                                                                // 35
				RocketChat.models.Settings.upsert({                                                                                // 36
					_id: 'theme-color-primary-action-color'                                                                           // 36
				}, {                                                                                                               // 36
					$set: {                                                                                                           // 36
						value: oldColor.value                                                                                            // 36
					}                                                                                                                 // 36
				});                                                                                                                // 36
			} // Removed color settings                                                                                         // 37
                                                                                                                       //
                                                                                                                       //
			RocketChat.models.Settings.remove({                                                                                 // 40
				_id: 'theme-color-quaternary-font-color'                                                                           // 40
			});                                                                                                                 // 40
			RocketChat.models.Settings.remove({                                                                                 // 41
				_id: 'theme-color-active-channel-background-color'                                                                 // 41
			});                                                                                                                 // 41
			RocketChat.models.Settings.remove({                                                                                 // 42
				_id: 'theme-color-active-channel-font-color'                                                                       // 42
			});                                                                                                                 // 42
			RocketChat.models.Settings.remove({                                                                                 // 43
				_id: 'theme-color-blockquote-background'                                                                           // 43
			});                                                                                                                 // 43
			RocketChat.models.Settings.remove({                                                                                 // 44
				_id: 'theme-color-clean-buttons-color'                                                                             // 44
			});                                                                                                                 // 44
			RocketChat.models.Settings.remove({                                                                                 // 45
				_id: 'theme-color-code-background'                                                                                 // 45
			});                                                                                                                 // 45
			RocketChat.models.Settings.remove({                                                                                 // 46
				_id: 'theme-color-code-border'                                                                                     // 46
			});                                                                                                                 // 46
			RocketChat.models.Settings.remove({                                                                                 // 47
				_id: 'theme-color-code-color'                                                                                      // 47
			});                                                                                                                 // 47
			RocketChat.models.Settings.remove({                                                                                 // 48
				_id: 'theme-color-info-active-font-color'                                                                          // 48
			});                                                                                                                 // 48
			RocketChat.models.Settings.remove({                                                                                 // 49
				_id: 'theme-color-input-font-color'                                                                                // 49
			});                                                                                                                 // 49
			RocketChat.models.Settings.remove({                                                                                 // 50
				_id: 'theme-color-message-hover-background-color'                                                                  // 50
			});                                                                                                                 // 50
			RocketChat.models.Settings.remove({                                                                                 // 51
				_id: 'theme-color-smallprint-font-color'                                                                           // 51
			});                                                                                                                 // 51
			RocketChat.models.Settings.remove({                                                                                 // 52
				_id: 'theme-color-smallprint-hover-color'                                                                          // 52
			});                                                                                                                 // 52
			RocketChat.models.Settings.remove({                                                                                 // 53
				_id: 'theme-color-unread-notification-color'                                                                       // 53
			});                                                                                                                 // 53
		}                                                                                                                    // 54
	}                                                                                                                     // 55
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v066.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v066.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 66,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 4
			// New color settings - start with old settings as defaults                                                         // 6
			var replace1 = RocketChat.models.Settings.findOne({                                                                 // 7
				_id: 'theme-color-tertiary-background-color'                                                                       // 7
			});                                                                                                                 // 7
                                                                                                                       //
			if (replace1) {                                                                                                     // 8
				RocketChat.models.Settings.upsert({                                                                                // 9
					_id: 'theme-color-component-color'                                                                                // 9
				}, {                                                                                                               // 9
					$set: {                                                                                                           // 9
						value: replace1.value                                                                                            // 9
					}                                                                                                                 // 9
				});                                                                                                                // 9
			}                                                                                                                   // 10
		}                                                                                                                    // 11
	}                                                                                                                     // 12
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v067.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v067.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 67,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.LivechatDepartment) {                                       // 4
			RocketChat.models.LivechatDepartment.model.update({}, {                                                             // 5
				$set: {                                                                                                            // 6
					showOnRegistration: true                                                                                          // 7
				}                                                                                                                  // 6
			}, {                                                                                                                // 5
				multi: true                                                                                                        // 9
			});                                                                                                                 // 9
		}                                                                                                                    // 10
	}                                                                                                                     // 11
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v068.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v068.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 68,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var GoogleSiteVerification_id = RocketChat.models.Settings.findOne({                                                 // 4
			_id: 'GoogleSiteVerification_id'                                                                                    // 4
		});                                                                                                                  // 4
                                                                                                                       //
		if (GoogleSiteVerification_id && GoogleSiteVerification_id.value) {                                                  // 6
			RocketChat.models.Settings.update({                                                                                 // 7
				_id: 'Meta_google-site-verification'                                                                               // 7
			}, {                                                                                                                // 7
				$set: {                                                                                                            // 8
					value: GoogleSiteVerification_id.value                                                                            // 9
				}                                                                                                                  // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 12
                                                                                                                       //
		RocketChat.models.Settings.remove({                                                                                  // 14
			_id: 'GoogleSiteVerification_id'                                                                                    // 14
		});                                                                                                                  // 14
	}                                                                                                                     // 15
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v069.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v069.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 69,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Settings.update({                                                                                  // 4
			'_id': 'theme-color-custom-scrollbar-color',                                                                        // 5
			'value': 'rgba(255, 255, 255, 0.05)'                                                                                // 6
		}, {                                                                                                                 // 4
			$set: {                                                                                                             // 8
				'editor': 'expression',                                                                                            // 9
				'value': '@transparent-darker'                                                                                     // 10
			}                                                                                                                   // 8
		});                                                                                                                  // 7
		RocketChat.models.Settings.update({                                                                                  // 13
			'_id': 'theme-color-info-font-color',                                                                               // 14
			'value': '#aaaaaa'                                                                                                  // 15
		}, {                                                                                                                 // 13
			$set: {                                                                                                             // 17
				'editor': 'expression',                                                                                            // 18
				'value': '@secondary-font-color'                                                                                   // 19
			}                                                                                                                   // 17
		});                                                                                                                  // 16
		RocketChat.models.Settings.update({                                                                                  // 22
			'_id': 'theme-color-link-font-color',                                                                               // 23
			'value': '#008ce3'                                                                                                  // 24
		}, {                                                                                                                 // 22
			$set: {                                                                                                             // 26
				'editor': 'expression',                                                                                            // 27
				'value': '@primary-action-color'                                                                                   // 28
			}                                                                                                                   // 26
		});                                                                                                                  // 25
		RocketChat.models.Settings.update({                                                                                  // 31
			'_id': 'theme-color-status-away',                                                                                   // 32
			'value': '#fcb316'                                                                                                  // 33
		}, {                                                                                                                 // 31
			$set: {                                                                                                             // 35
				'editor': 'expression',                                                                                            // 36
				'value': '@pending-color'                                                                                          // 37
			}                                                                                                                   // 35
		});                                                                                                                  // 34
		RocketChat.models.Settings.update({                                                                                  // 40
			'_id': 'theme-color-status-busy',                                                                                   // 41
			'value': '#d30230'                                                                                                  // 42
		}, {                                                                                                                 // 40
			$set: {                                                                                                             // 44
				'editor': 'expression',                                                                                            // 45
				'value': '@error-color'                                                                                            // 46
			}                                                                                                                   // 44
		});                                                                                                                  // 43
		RocketChat.models.Settings.update({                                                                                  // 49
			'_id': 'theme-color-status-offline',                                                                                // 50
			'value': 'rgba(150, 150, 150, 0.50)'                                                                                // 51
		}, {                                                                                                                 // 49
			$set: {                                                                                                             // 53
				'editor': 'expression',                                                                                            // 54
				'value': '@transparent-darker'                                                                                     // 55
			}                                                                                                                   // 53
		});                                                                                                                  // 52
		RocketChat.models.Settings.update({                                                                                  // 58
			'_id': 'theme-color-status-online',                                                                                 // 59
			'value': '#35ac19'                                                                                                  // 60
		}, {                                                                                                                 // 58
			$set: {                                                                                                             // 62
				'editor': 'expression',                                                                                            // 63
				'value': '@success-color'                                                                                          // 64
			}                                                                                                                   // 62
		});                                                                                                                  // 61
		RocketChat.models.Settings.update({                                                                                  // 67
			'_id': 'theme-color-tertiary-background-color',                                                                     // 68
			'value': '#eaeaea'                                                                                                  // 69
		}, {                                                                                                                 // 67
			$set: {                                                                                                             // 71
				'editor': 'expression',                                                                                            // 72
				'value': '@component-color'                                                                                        // 73
			}                                                                                                                   // 71
		});                                                                                                                  // 70
		return RocketChat.models.Settings.update({                                                                           // 76
			'_id': 'theme-color-tertiary-font-color',                                                                           // 77
			'value': 'rgba(255, 255, 255, 0.6)'                                                                                 // 78
		}, {                                                                                                                 // 76
			$set: {                                                                                                             // 80
				'editor': 'expression',                                                                                            // 81
				'value': '@transparent-lightest'                                                                                   // 82
			}                                                                                                                   // 80
		});                                                                                                                  // 79
	}                                                                                                                     // 85
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v070.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v070.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 70,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var settings = RocketChat.models.Settings.find({                                                                     // 4
			_id: /^Accounts_OAuth_Custom_.+/                                                                                    // 4
		}).fetch();                                                                                                          // 4
                                                                                                                       //
		for (var _iterator = settings, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 5
                                                                                                                       //
			if (_isArray) {                                                                                                     // 5
				if (_i >= _iterator.length) break;                                                                                 // 5
				_ref = _iterator[_i++];                                                                                            // 5
			} else {                                                                                                            // 5
				_i = _iterator.next();                                                                                             // 5
				if (_i.done) break;                                                                                                // 5
				_ref = _i.value;                                                                                                   // 5
			}                                                                                                                   // 5
                                                                                                                       //
			var setting = _ref;                                                                                                 // 5
			var _id = setting._id;                                                                                              // 6
			setting._id = setting._id.replace(/Accounts_OAuth_Custom_([A-Za-z0-9]+)_(.+)/, 'Accounts_OAuth_Custom-$1-$2');      // 7
			setting._id = setting._id.replace(/Accounts_OAuth_Custom_([A-Za-z0-9]+)/, 'Accounts_OAuth_Custom-$1');              // 8
			RocketChat.models.Settings.remove({                                                                                 // 10
				_id: _id                                                                                                           // 10
			});                                                                                                                 // 10
			RocketChat.models.Settings.insert(setting);                                                                         // 11
		}                                                                                                                    // 12
	}                                                                                                                     // 13
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v071.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v071.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 71,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		//Removes the reactions on messages which are the system type "rm" ;)                                                // 4
		RocketChat.models.Messages.find({                                                                                    // 5
			't': 'rm',                                                                                                          // 5
			'reactions': {                                                                                                      // 5
				$exists: true,                                                                                                     // 5
				$not: {                                                                                                            // 5
					$size: 0                                                                                                          // 5
				}                                                                                                                  // 5
			}                                                                                                                   // 5
		}, {                                                                                                                 // 5
			t: 1                                                                                                                // 5
		}).forEach(function (message) {                                                                                      // 5
			RocketChat.models.Messages.update({                                                                                 // 6
				_id: message._id                                                                                                   // 6
			}, {                                                                                                                // 6
				$set: {                                                                                                            // 6
					reactions: []                                                                                                     // 6
				}                                                                                                                  // 6
			});                                                                                                                 // 6
		});                                                                                                                  // 7
	}                                                                                                                     // 8
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v072.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v072.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 72,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Users.find({                                                                                       // 4
			type: 'visitor',                                                                                                    // 4
			'emails.address': {                                                                                                 // 4
				$exists: true                                                                                                      // 4
			}                                                                                                                   // 4
		}, {                                                                                                                 // 4
			emails: 1                                                                                                           // 4
		}).forEach(function (visitor) {                                                                                      // 4
			RocketChat.models.Users.update({                                                                                    // 5
				_id: visitor._id                                                                                                   // 5
			}, {                                                                                                                // 5
				$set: {                                                                                                            // 6
					visitorEmails: visitor.emails                                                                                     // 7
				},                                                                                                                 // 6
				$unset: {                                                                                                          // 9
					emails: 1                                                                                                         // 10
				}                                                                                                                  // 9
			});                                                                                                                 // 5
		});                                                                                                                  // 13
	}                                                                                                                     // 14
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v073.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v073.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 73,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Users.find({                                                                                       // 4
			'oauth.athorizedClients': {                                                                                         // 4
				$exists: true                                                                                                      // 4
			}                                                                                                                   // 4
		}, {                                                                                                                 // 4
			oauth: 1                                                                                                            // 4
		}).forEach(function (user) {                                                                                         // 4
			RocketChat.models.Users.update({                                                                                    // 5
				_id: user._id                                                                                                      // 5
			}, {                                                                                                                // 5
				$set: {                                                                                                            // 6
					'oauth.authorizedClients': user.oauth.athorizedClients                                                            // 7
				},                                                                                                                 // 6
				$unset: {                                                                                                          // 9
					'oauth.athorizedClients': 1                                                                                       // 10
				}                                                                                                                  // 9
			});                                                                                                                 // 5
		});                                                                                                                  // 13
	}                                                                                                                     // 14
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v074.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v074.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 74,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 4
			RocketChat.models.Settings.remove({                                                                                 // 5
				_id: 'Assets_favicon_64'                                                                                           // 5
			});                                                                                                                 // 5
			RocketChat.models.Settings.remove({                                                                                 // 6
				_id: 'Assets_favicon_96'                                                                                           // 6
			});                                                                                                                 // 6
			RocketChat.models.Settings.remove({                                                                                 // 7
				_id: 'Assets_favicon_128'                                                                                          // 7
			});                                                                                                                 // 7
			RocketChat.models.Settings.remove({                                                                                 // 8
				_id: 'Assets_favicon_256'                                                                                          // 8
			});                                                                                                                 // 8
			RocketChat.models.Settings.update({                                                                                 // 9
				_id: 'Assets_favicon_192'                                                                                          // 9
			}, {                                                                                                                // 9
				$set: {                                                                                                            // 10
					i18nLabel: 'android-chrome 192x192 (png)'                                                                         // 11
				}                                                                                                                  // 10
			});                                                                                                                 // 9
		}                                                                                                                    // 14
	}                                                                                                                     // 15
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v075.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v075.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 71.1,                                                                                                        // 2
	up: function () {                                                                                                     // 3
		ServiceConfiguration.configurations.remove({});                                                                      // 4
	}                                                                                                                     // 5
});                                                                                                                    // 1
RocketChat.Migrations.add({                                                                                            // 8
	version: 75,                                                                                                          // 9
	up: function () {                                                                                                     // 10
		ServiceConfiguration.configurations.remove({});                                                                      // 11
	}                                                                                                                     // 12
});                                                                                                                    // 8
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v076.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v076.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 76,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 4
			RocketChat.models.Settings.find({                                                                                   // 5
				section: 'Colors (alphas)'                                                                                         // 5
			}).forEach(function (setting) {                                                                                     // 5
				RocketChat.models.Settings.remove({                                                                                // 6
					_id: setting._id                                                                                                  // 6
				});                                                                                                                // 6
			});                                                                                                                 // 7
		}                                                                                                                    // 8
	}                                                                                                                     // 9
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v077.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v077.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 77,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Rooms) {                                                    // 4
			RocketChat.models.Rooms.find({                                                                                      // 5
				t: 'l',                                                                                                            // 6
				'v._id': {                                                                                                         // 7
					$exists: true                                                                                                     // 7
				},                                                                                                                 // 7
				'v.username': {                                                                                                    // 8
					$exists: false                                                                                                    // 8
				}                                                                                                                  // 8
			}, {                                                                                                                // 5
				fields: {                                                                                                          // 9
					'v._id': 1                                                                                                        // 9
				}                                                                                                                  // 9
			}).forEach(function (room) {                                                                                        // 9
				var user = RocketChat.models.Users.findOne({                                                                       // 10
					_id: room.v._id                                                                                                   // 10
				}, {                                                                                                               // 10
					username: 1                                                                                                       // 10
				});                                                                                                                // 10
                                                                                                                       //
				if (user && user.username) {                                                                                       // 12
					RocketChat.models.Rooms.update({                                                                                  // 13
						_id: room._id                                                                                                    // 14
					}, {                                                                                                              // 13
						$set: {                                                                                                          // 16
							'v.username': user.username                                                                                     // 17
						}                                                                                                                // 16
					});                                                                                                               // 15
				}                                                                                                                  // 20
			});                                                                                                                 // 21
		}                                                                                                                    // 22
	}                                                                                                                     // 23
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v078.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v078.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 78,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.Permissions.update({                                                                               // 4
			_id: {                                                                                                              // 4
				$in: ['create-c', 'create-d', 'create-p']                                                                          // 4
			}                                                                                                                   // 4
		}, {                                                                                                                 // 4
			$addToSet: {                                                                                                        // 4
				roles: 'bot'                                                                                                       // 4
			}                                                                                                                   // 4
		}, {                                                                                                                 // 4
			multi: true                                                                                                         // 4
		});                                                                                                                  // 4
	}                                                                                                                     // 5
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v079.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v079.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 79,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var integrations = RocketChat.models.Integrations.find({                                                             // 4
			type: 'webhook-incoming'                                                                                            // 4
		}).fetch();                                                                                                          // 4
                                                                                                                       //
		for (var _iterator = integrations, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 6
                                                                                                                       //
			if (_isArray) {                                                                                                     // 6
				if (_i >= _iterator.length) break;                                                                                 // 6
				_ref = _iterator[_i++];                                                                                            // 6
			} else {                                                                                                            // 6
				_i = _iterator.next();                                                                                             // 6
				if (_i.done) break;                                                                                                // 6
				_ref = _i.value;                                                                                                   // 6
			}                                                                                                                   // 6
                                                                                                                       //
			var integration = _ref;                                                                                             // 6
                                                                                                                       //
			if (typeof integration.channel === 'string') {                                                                      // 7
				RocketChat.models.Integrations.update({                                                                            // 8
					_id: integration._id                                                                                              // 8
				}, {                                                                                                               // 8
					$set: {                                                                                                           // 9
						channel: integration.channel.split(',').map(function (channel) {                                                 // 10
							return channel.trim();                                                                                          // 10
						})                                                                                                               // 10
					}                                                                                                                 // 9
				});                                                                                                                // 8
			}                                                                                                                   // 13
		}                                                                                                                    // 14
	}                                                                                                                     // 15
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v080.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v080.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 80,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var query = {                                                                                                        // 4
			type: 'webhook-outgoing',                                                                                           // 5
			$or: [{                                                                                                             // 6
				channel: []                                                                                                        // 7
			}, {                                                                                                                // 6
				channel: ''                                                                                                        // 9
			}, {                                                                                                                // 8
				channel: {                                                                                                         // 11
					$exists: false                                                                                                    // 12
				}                                                                                                                  // 11
			}]                                                                                                                  // 10
		};                                                                                                                   // 4
		var update = {                                                                                                       // 17
			$set: {                                                                                                             // 18
				channel: ['all_public_channels']                                                                                   // 19
			}                                                                                                                   // 18
		};                                                                                                                   // 17
		RocketChat.models.Integrations.update(query, update, {                                                               // 23
			multi: true                                                                                                         // 23
		});                                                                                                                  // 23
	}                                                                                                                     // 24
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v081.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v081.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 81,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		RocketChat.models.OAuthApps.update({                                                                                 // 4
			_id: 'zapier'                                                                                                       // 4
		}, {                                                                                                                 // 4
			$set: {                                                                                                             // 5
				active: true,                                                                                                      // 6
				redirectUri: 'https://zapier.com/dashboard/auth/oauth/return/App32270API/'                                         // 7
			}                                                                                                                   // 5
		});                                                                                                                  // 4
	}                                                                                                                     // 10
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v082.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v082.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 82,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var admins = RocketChat.authz.getUsersInRole('admin').fetch();                                                       // 4
                                                                                                                       //
		if (admins.length === 1 && admins[0]._id === 'rocket.cat') {                                                         // 5
			RocketChat.authz.removeUserFromRoles('rocket.cat', 'admin');                                                        // 6
		}                                                                                                                    // 7
	}                                                                                                                     // 8
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v083.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v083.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 83,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Settings && RocketChat.models.Users) {                      // 4
			var setting = RocketChat.models.Settings.findOne({                                                                  // 5
				_id: 'InternalHubot_Username'                                                                                      // 5
			});                                                                                                                 // 5
                                                                                                                       //
			if (setting && setting.value) {                                                                                     // 6
				var username = setting.value;                                                                                      // 7
				var user = RocketChat.models.Users.findOne({                                                                       // 8
					username: username                                                                                                // 8
				});                                                                                                                // 8
                                                                                                                       //
				if (!user && setting.value === 'Rocket.Cat') {                                                                     // 9
					RocketChat.models.Settings.update({                                                                               // 10
						_id: 'InternalHubot_Username'                                                                                    // 10
					}, {                                                                                                              // 10
						$set: {                                                                                                          // 10
							value: 'rocket.cat',                                                                                            // 10
							packageValue: 'rocket.cat'                                                                                      // 10
						}                                                                                                                // 10
					});                                                                                                               // 10
				}                                                                                                                  // 11
			}                                                                                                                   // 12
		}                                                                                                                    // 13
	}                                                                                                                     // 14
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v084.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v084.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 84,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat.models && RocketChat.models.Permissions) {                                                            // 4
			// Update permission name, copy values from old name                                                                // 6
			var oldPermission = RocketChat.models.Permissions.findOne('add-user-to-room');                                      // 7
                                                                                                                       //
			if (oldPermission && oldPermission.roles.length) {                                                                  // 8
				RocketChat.models.Permissions.upsert({                                                                             // 9
					_id: 'add-user-to-joined-room'                                                                                    // 9
				}, {                                                                                                               // 9
					$set: {                                                                                                           // 9
						roles: oldPermission.roles                                                                                       // 9
					}                                                                                                                 // 9
				});                                                                                                                // 9
				RocketChat.models.Permissions.remove({                                                                             // 10
					_id: 'add-user-to-room'                                                                                           // 10
				});                                                                                                                // 10
			}                                                                                                                   // 11
		}                                                                                                                    // 12
	},                                                                                                                    // 13
	down: function () {                                                                                                   // 15
		if (RocketChat.models && RocketChat.models.Permissions) {                                                            // 16
			// Revert permission name, copy values from updated name                                                            // 18
			var newPermission = RocketChat.models.Permissions.findOne('add-user-to-joined-room');                               // 19
                                                                                                                       //
			if (newPermission && newPermission.roles.length) {                                                                  // 20
				RocketChat.models.Permissions.upsert({                                                                             // 21
					_id: 'add-user-to-room'                                                                                           // 21
				}, {                                                                                                               // 21
					$set: {                                                                                                           // 21
						roles: newPermission.roles                                                                                       // 21
					}                                                                                                                 // 21
				});                                                                                                                // 21
				RocketChat.models.Permissions.remove({                                                                             // 22
					_id: 'add-user-to-joined-room'                                                                                    // 22
				});                                                                                                                // 22
			}                                                                                                                   // 23
		}                                                                                                                    // 24
	}                                                                                                                     // 25
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v085.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v085.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 85,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var query = {                                                                                                        // 4
			t: 'p',                                                                                                             // 5
			usernames: {                                                                                                        // 6
				$size: 2                                                                                                           // 6
			},                                                                                                                  // 6
			u: {                                                                                                                // 7
				$exists: false                                                                                                     // 7
			},                                                                                                                  // 7
			name: {                                                                                                             // 8
				$exists: false                                                                                                     // 8
			}                                                                                                                   // 8
		};                                                                                                                   // 4
		var rooms = RocketChat.models.Rooms.find(query).fetch();                                                             // 11
                                                                                                                       //
		if (rooms.length > 0) {                                                                                              // 13
			var rids = rooms.map(function (room) {                                                                              // 14
				return room._id;                                                                                                   // 14
			});                                                                                                                 // 14
			RocketChat.models.Rooms.update({                                                                                    // 15
				_id: {                                                                                                             // 15
					$in: rids                                                                                                         // 15
				}                                                                                                                  // 15
			}, {                                                                                                                // 15
				$set: {                                                                                                            // 15
					t: 'd'                                                                                                            // 15
				}                                                                                                                  // 15
			}, {                                                                                                                // 15
				multi: true                                                                                                        // 15
			});                                                                                                                 // 15
			RocketChat.models.Subscriptions.update({                                                                            // 16
				rid: {                                                                                                             // 16
					$in: rids                                                                                                         // 16
				}                                                                                                                  // 16
			}, {                                                                                                                // 16
				$set: {                                                                                                            // 16
					t: 'd'                                                                                                            // 16
				}                                                                                                                  // 16
			}, {                                                                                                                // 16
				multi: true                                                                                                        // 16
			});                                                                                                                 // 16
		}                                                                                                                    // 17
	}                                                                                                                     // 18
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v086.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v086.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 86,                                                                                                          // 2
	up: function () {// Disabled this migration for it was not updating any user                                          // 3
	}                                                                                                                     // 5
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v087.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v087.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 87,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Users) {                                                    // 4
			RocketChat.models.Users.update({                                                                                    // 5
				'settings.preferences.newMessageNotification': false                                                               // 5
			}, {                                                                                                                // 5
				$set: {                                                                                                            // 5
					'settings.preferences.newMessageNotification': 'none'                                                             // 5
				}                                                                                                                  // 5
			}, {                                                                                                                // 5
				multi: true                                                                                                        // 5
			});                                                                                                                 // 5
			RocketChat.models.Users.update({                                                                                    // 6
				'settings.preferences.newMessageNotification': true                                                                // 6
			}, {                                                                                                                // 6
				$unset: {                                                                                                          // 6
					'settings.preferences.newMessageNotification': 1                                                                  // 6
				}                                                                                                                  // 6
			}, {                                                                                                                // 6
				multi: true                                                                                                        // 6
			});                                                                                                                 // 6
			RocketChat.models.Users.update({                                                                                    // 7
				'settings.preferences.newRoomNotification': false                                                                  // 7
			}, {                                                                                                                // 7
				$set: {                                                                                                            // 7
					'settings.preferences.newRoomNotification': 'none'                                                                // 7
				}                                                                                                                  // 7
			}, {                                                                                                                // 7
				multi: true                                                                                                        // 7
			});                                                                                                                 // 7
			RocketChat.models.Users.update({                                                                                    // 8
				'settings.preferences.newRoomNotification': true                                                                   // 8
			}, {                                                                                                                // 8
				$unset: {                                                                                                          // 8
					'settings.preferences.newRoomNotification': 1                                                                     // 8
				}                                                                                                                  // 8
			}, {                                                                                                                // 8
				multi: true                                                                                                        // 8
			});                                                                                                                 // 8
		}                                                                                                                    // 9
	}                                                                                                                     // 10
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v088.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v088.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 88,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		if (RocketChat && RocketChat.models && RocketChat.models.Settings) {                                                 // 4
			var setting = RocketChat.models.Settings.findOne({                                                                  // 5
				_id: 'Layout_Sidenav_Footer'                                                                                       // 5
			});                                                                                                                 // 5
                                                                                                                       //
			if (setting && setting.value && setting.packageValue) {                                                             // 6
				if (setting.value === '<img style="left: 10px; position: absolute;" src="/assets/logo.png" />') {                  // 7
					RocketChat.models.Settings.update({                                                                               // 8
						_id: 'Layout_Sidenav_Footer'                                                                                     // 8
					}, {                                                                                                              // 8
						$set: {                                                                                                          // 8
							value: setting.packageValue                                                                                     // 8
						}                                                                                                                // 8
					});                                                                                                               // 8
				}                                                                                                                  // 9
			}                                                                                                                   // 10
		}                                                                                                                    // 11
	}                                                                                                                     // 12
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"v089.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/v089.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RocketChat.Migrations.add({                                                                                            // 1
	version: 89,                                                                                                          // 2
	up: function () {                                                                                                     // 3
		var outgoingIntegrations = RocketChat.models.Integrations.find({                                                     // 4
			type: 'webhook-outgoing'                                                                                            // 4
		}, {                                                                                                                 // 4
			fields: {                                                                                                           // 4
				name: 1                                                                                                            // 4
			}                                                                                                                   // 4
		}).fetch();                                                                                                          // 4
		outgoingIntegrations.forEach(function (i) {                                                                          // 6
			RocketChat.models.Integrations.update(i._id, {                                                                      // 7
				$set: {                                                                                                            // 7
					event: 'sendMessage',                                                                                             // 7
					retryFailedCalls: true,                                                                                           // 7
					retryCount: 6,                                                                                                    // 7
					retryDelay: 'powers-of-ten'                                                                                       // 7
				}                                                                                                                  // 7
			});                                                                                                                 // 7
		});                                                                                                                  // 8
	},                                                                                                                    // 9
	down: function () {                                                                                                   // 10
		var outgoingIntegrations = RocketChat.models.Integrations.find({                                                     // 11
			type: 'webhook-outgoing',                                                                                           // 11
			event: {                                                                                                            // 11
				$ne: 'sendMessage'                                                                                                 // 11
			}                                                                                                                   // 11
		}, {                                                                                                                 // 11
			fields: {                                                                                                           // 11
				name: 1                                                                                                            // 11
			}                                                                                                                   // 11
		}).fetch();                                                                                                          // 11
		outgoingIntegrations.forEach(function (i) {                                                                          // 13
			RocketChat.models.Integrations.update(i._id, {                                                                      // 14
				$set: {                                                                                                            // 14
					enabled: false                                                                                                    // 14
				}                                                                                                                  // 14
			});                                                                                                                 // 14
		});                                                                                                                  // 15
	}                                                                                                                     // 16
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"xrun.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/migrations/xrun.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
if (RocketChat.Migrations.getVersion() !== 0) {                                                                        // 1
	RocketChat.Migrations.migrateTo('latest');                                                                            // 2
} else {                                                                                                               // 3
	var control = RocketChat.Migrations._getControl();                                                                    // 4
                                                                                                                       //
	control.version = _.last(RocketChat.Migrations._list).version;                                                        // 5
                                                                                                                       //
	RocketChat.Migrations._setControl(control);                                                                           // 6
}                                                                                                                      // 7
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"appcache.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/appcache.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
if (Meteor.AppCache) {                                                                                                 // 1
	Meteor.AppCache.config({                                                                                              // 2
		onlineOnly: ['/elements/', '/landing/', '/moment-locales/', '/scripts/']                                             // 3
	});                                                                                                                   // 2
}                                                                                                                      // 5
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"avatar.js":["file-type",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/avatar.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var getFileType = void 0;                                                                                              // 1
module.import('file-type', {                                                                                           // 1
	"default": function (v) {                                                                                             // 1
		getFileType = v;                                                                                                     // 1
	}                                                                                                                     // 1
}, 0);                                                                                                                 // 1
Meteor.startup(function () {                                                                                           // 3
	var storeType = 'GridFS';                                                                                             // 4
                                                                                                                       //
	if (RocketChat.settings.get('Accounts_AvatarStoreType')) {                                                            // 6
		storeType = RocketChat.settings.get('Accounts_AvatarStoreType');                                                     // 7
	}                                                                                                                     // 8
                                                                                                                       //
	var RocketChatStore = RocketChatFile[storeType];                                                                      // 10
                                                                                                                       //
	if (!RocketChatStore) {                                                                                               // 12
		throw new Error("Invalid RocketChatStore type [" + storeType + "]");                                                 // 13
	}                                                                                                                     // 14
                                                                                                                       //
	console.log(("Using " + storeType + " for Avatar storage").green);                                                    // 16
                                                                                                                       //
	function transformWrite(file, readStream, writeStream) {                                                              // 18
		if (RocketChatFile.enabled === false || RocketChat.settings.get('Accounts_AvatarResize') !== true) {                 // 19
			return readStream.pipe(writeStream);                                                                                // 20
		}                                                                                                                    // 21
                                                                                                                       //
		var height = RocketChat.settings.get('Accounts_AvatarSize');                                                         // 22
		var width = height;                                                                                                  // 23
		return RocketChatFile.gm(readStream, file.fileName).background('#ffffff').resize(width, height + '^').gravity('Center').crop(width, height).extent(width, height).stream('jpeg').pipe(writeStream);
	}                                                                                                                     // 25
                                                                                                                       //
	var path = '~/uploads';                                                                                               // 27
                                                                                                                       //
	if (RocketChat.settings.get('Accounts_AvatarStorePath') && RocketChat.settings.get('Accounts_AvatarStorePath').trim() !== '') {
		path = RocketChat.settings.get('Accounts_AvatarStorePath');                                                          // 29
	}                                                                                                                     // 30
                                                                                                                       //
	this.RocketChatFileAvatarInstance = new RocketChatStore({                                                             // 32
		name: 'avatars',                                                                                                     // 33
		absolutePath: path,                                                                                                  // 34
		transformWrite: transformWrite                                                                                       // 35
	});                                                                                                                   // 32
	return WebApp.connectHandlers.use('/avatar/', Meteor.bindEnvironment(function (req, res /*, next*/) {                 // 38
		var params = {                                                                                                       // 39
			username: decodeURIComponent(req.url.replace(/^\//, '').replace(/\?.*$/, ''))                                       // 40
		};                                                                                                                   // 39
		var username = params.username.replace(/\.jpg$/, '').replace(/^@/, '');                                              // 43
                                                                                                                       //
		if (_.isEmpty(params.username)) {                                                                                    // 45
			res.writeHead(403);                                                                                                 // 46
			res.write('Forbidden');                                                                                             // 47
			res.end();                                                                                                          // 48
			return;                                                                                                             // 49
		}                                                                                                                    // 50
                                                                                                                       //
		var file = void 0;                                                                                                   // 52
                                                                                                                       //
		if (params.username[0] !== '@') {                                                                                    // 54
			if (Meteor.settings && Meteor.settings.public && Meteor.settings.public.sandstorm) {                                // 55
				var user = RocketChat.models.Users.findOneByUsername(username);                                                    // 56
                                                                                                                       //
				if (user && user.services && user.services.sandstorm && user.services.sandstorm.picture) {                         // 57
					res.setHeader('Location', user.services.sandstorm.picture);                                                       // 58
					res.writeHead(302);                                                                                               // 59
					res.end();                                                                                                        // 60
					return;                                                                                                           // 61
				}                                                                                                                  // 62
			}                                                                                                                   // 63
                                                                                                                       //
			file = RocketChatFileAvatarInstance.getFileWithReadStream(encodeURIComponent(username + ".jpg"));                   // 65
		}                                                                                                                    // 66
                                                                                                                       //
		res.setHeader('Content-Disposition', 'inline');                                                                      // 68
                                                                                                                       //
		if (!file) {                                                                                                         // 69
			res.setHeader('Content-Type', 'image/svg+xml');                                                                     // 70
			res.setHeader('Cache-Control', 'public, max-age=0');                                                                // 71
			res.setHeader('Expires', '-1');                                                                                     // 72
			res.setHeader('Last-Modified', 'Thu, 01 Jan 2015 00:00:00 GMT');                                                    // 73
			var _reqModifiedHeader = req.headers['if-modified-since'];                                                          // 75
                                                                                                                       //
			if (_reqModifiedHeader) {                                                                                           // 77
				if (_reqModifiedHeader === 'Thu, 01 Jan 2015 00:00:00 GMT') {                                                      // 78
					res.writeHead(304);                                                                                               // 79
					res.end();                                                                                                        // 80
					return;                                                                                                           // 81
				}                                                                                                                  // 82
			}                                                                                                                   // 83
                                                                                                                       //
			var colors = ['#F44336', '#E91E63', '#9C27B0', '#673AB7', '#3F51B5', '#2196F3', '#03A9F4', '#00BCD4', '#009688', '#4CAF50', '#8BC34A', '#CDDC39', '#FFC107', '#FF9800', '#FF5722', '#795548', '#9E9E9E', '#607D8B'];
                                                                                                                       //
			if (RocketChat.settings.get('UI_Use_Name_Avatar')) {                                                                // 87
				var _user = RocketChat.models.Users.findOneByUsername(username, {                                                  // 88
					fields: {                                                                                                         // 89
						name: 1                                                                                                          // 90
					}                                                                                                                 // 89
				});                                                                                                                // 88
                                                                                                                       //
				if (_user && _user.name) {                                                                                         // 94
					username = _user.name;                                                                                            // 95
				}                                                                                                                  // 96
			}                                                                                                                   // 97
                                                                                                                       //
			var color = '';                                                                                                     // 99
			var initials = '';                                                                                                  // 100
                                                                                                                       //
			if (username === '?') {                                                                                             // 102
				color = '#000';                                                                                                    // 103
				initials = username;                                                                                               // 104
			} else {                                                                                                            // 105
				var position = username.length % colors.length;                                                                    // 106
				color = colors[position];                                                                                          // 108
				username = username.replace(/[^A-Za-z0-9]/g, '.').replace(/\.+/g, '.').replace(/(^\.)|(\.$)/g, '');                // 109
				var usernameParts = username.split('.');                                                                           // 111
				initials = usernameParts.length > 1 ? _.first(usernameParts)[0] + _.last(usernameParts)[0] : username.replace(/[^A-Za-z0-9]/g, '').substr(0, 2);
				initials = initials.toUpperCase();                                                                                 // 114
			}                                                                                                                   // 115
                                                                                                                       //
			var svg = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" pointer-events=\"none\" width=\"50\" height=\"50\" style=\"width: 50px; height: 50px; background-color: ' + color + ';\">\n	<text text-anchor=\"middle\" y=\"50%\" x=\"50%\" dy=\"0.36em\" pointer-events=\"auto\" fill=\"#ffffff\" font-family=\"Helvetica, Arial, Lucida Grande, sans-serif\" style=\"font-weight: 400; font-size: 28px;\">\n		' + initials + '\n	</text>\n</svg>';
			res.write(svg);                                                                                                     // 118
			res.end();                                                                                                          // 119
			return;                                                                                                             // 121
		}                                                                                                                    // 122
                                                                                                                       //
		var reqModifiedHeader = req.headers['if-modified-since'];                                                            // 124
                                                                                                                       //
		if (reqModifiedHeader) {                                                                                             // 125
			if (reqModifiedHeader === (file.uploadDate && file.uploadDate.toUTCString())) {                                     // 126
				res.setHeader('Last-Modified', reqModifiedHeader);                                                                 // 127
				res.writeHead(304);                                                                                                // 128
				res.end();                                                                                                         // 129
				return;                                                                                                            // 130
			}                                                                                                                   // 131
		}                                                                                                                    // 132
                                                                                                                       //
		res.setHeader('Cache-Control', 'public, max-age=0');                                                                 // 134
		res.setHeader('Expires', '-1');                                                                                      // 135
		res.setHeader('Last-Modified', file.uploadDate && file.uploadDate.toUTCString() || new Date().toUTCString());        // 136
		res.setHeader('Content-Length', file.length);                                                                        // 137
                                                                                                                       //
		if (file.contentType) {                                                                                              // 139
			res.setHeader('Content-Type', file.contentType);                                                                    // 140
		} else {                                                                                                             // 141
			file.readStream.once('data', function (chunk) {                                                                     // 142
				var fileType = getFileType(chunk);                                                                                 // 143
                                                                                                                       //
				if (fileType) {                                                                                                    // 144
					return res.setHeader('Content-Type', fileType.mime);                                                              // 145
				} else {                                                                                                           // 146
					return res.setHeader('Content-Type', 'image/jpeg');                                                               // 147
				}                                                                                                                  // 148
			});                                                                                                                 // 149
		}                                                                                                                    // 150
                                                                                                                       //
		file.readStream.pipe(res);                                                                                           // 152
	}));                                                                                                                  // 153
});                                                                                                                    // 154
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"cron.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/cron.js                                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* global SyncedCron */var logger = new Logger('SyncedCron');                                                          // 1
SyncedCron.config({                                                                                                    // 5
	logger: function (opts) {                                                                                             // 6
		return logger[opts.level].call(logger, opts.message);                                                                // 7
	},                                                                                                                    // 8
	collectionName: 'rocketchat_cron_history'                                                                             // 9
});                                                                                                                    // 5
                                                                                                                       //
function generateStatistics() {                                                                                        // 12
	var statistics = RocketChat.statistics.save();                                                                        // 13
	statistics.host = Meteor.absoluteUrl();                                                                               // 15
                                                                                                                       //
	if (RocketChat.settings.get('Statistics_reporting')) {                                                                // 17
		try {                                                                                                                // 18
			HTTP.post('https://collector.rocket.chat/', {                                                                       // 19
				data: statistics                                                                                                   // 20
			});                                                                                                                 // 19
		} catch (error) {                                                                                                    // 22
			/*error*/logger.warn('Failed to send usage report');                                                                // 23
		}                                                                                                                    // 25
	}                                                                                                                     // 26
}                                                                                                                      // 27
                                                                                                                       //
function cleanupOEmbedCache() {                                                                                        // 29
	return Meteor.call('OEmbedCacheCleanup');                                                                             // 30
}                                                                                                                      // 31
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 33
	return Meteor.defer(function () {                                                                                     // 34
		generateStatistics();                                                                                                // 35
		SyncedCron.add({                                                                                                     // 37
			name: 'Generate and save statistics',                                                                               // 38
			schedule: function (parser) {                                                                                       // 39
				return parser.cron(new Date().getMinutes() + ' * * * *');                                                          // 40
			},                                                                                                                  // 41
			job: generateStatistics                                                                                             // 42
		});                                                                                                                  // 37
		SyncedCron.add({                                                                                                     // 45
			name: 'Cleanup OEmbed cache',                                                                                       // 46
			schedule: function (parser) {                                                                                       // 47
				var now = new Date();                                                                                              // 48
				return parser.cron(now.getMinutes() + ' ' + now.getHours() + ' * * *');                                            // 49
			},                                                                                                                  // 50
			job: cleanupOEmbedCache                                                                                             // 51
		});                                                                                                                  // 45
		return SyncedCron.start();                                                                                           // 53
	});                                                                                                                   // 54
});                                                                                                                    // 55
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"i18n-validation.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/i18n-validation.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
function flat(obj) {                                                                                                   // 1
	var newObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};                                  // 1
	var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';                                    // 1
                                                                                                                       //
	for (var _iterator = Object.keys(obj), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
		var _ref;                                                                                                            // 2
                                                                                                                       //
		if (_isArray) {                                                                                                      // 2
			if (_i >= _iterator.length) break;                                                                                  // 2
			_ref = _iterator[_i++];                                                                                             // 2
		} else {                                                                                                             // 2
			_i = _iterator.next();                                                                                              // 2
			if (_i.done) break;                                                                                                 // 2
			_ref = _i.value;                                                                                                    // 2
		}                                                                                                                    // 2
                                                                                                                       //
		var key = _ref;                                                                                                      // 2
		var value = obj[key];                                                                                                // 3
                                                                                                                       //
		if (_.isObject(value)) {                                                                                             // 5
			flat(value, newObj, key + '.');                                                                                     // 6
		} else {                                                                                                             // 7
			newObj[path + key] = value;                                                                                         // 8
		}                                                                                                                    // 9
	}                                                                                                                     // 10
                                                                                                                       //
	return newObj;                                                                                                        // 12
}                                                                                                                      // 13
                                                                                                                       //
RocketChat.i18nValidation = function () {                                                                              // 15
	function i18nValidation() {                                                                                           // 15
		var l = {};                                                                                                          // 16
		var keys = {};                                                                                                       // 17
		var errors = [];                                                                                                     // 18
		var langs = Object.keys(TAPi18next.options.resStore);                                                                // 19
                                                                                                                       //
		for (var _iterator2 = Object.keys(TAPi18next.options.resStore), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
			var _ref2;                                                                                                          // 21
                                                                                                                       //
			if (_isArray2) {                                                                                                    // 21
				if (_i2 >= _iterator2.length) break;                                                                               // 21
				_ref2 = _iterator2[_i2++];                                                                                         // 21
			} else {                                                                                                            // 21
				_i2 = _iterator2.next();                                                                                           // 21
				if (_i2.done) break;                                                                                               // 21
				_ref2 = _i2.value;                                                                                                 // 21
			}                                                                                                                   // 21
                                                                                                                       //
			var lang = _ref2;                                                                                                   // 21
			var value = TAPi18next.options.resStore[lang];                                                                      // 22
			l[lang] = flat(value);                                                                                              // 24
                                                                                                                       //
			for (var _iterator5 = Object.keys(l[lang]), _isArray5 = Array.isArray(_iterator5), _i5 = 0, _iterator5 = _isArray5 ? _iterator5 : _iterator5[Symbol.iterator]();;) {
				var _ref5;                                                                                                         // 26
                                                                                                                       //
				if (_isArray5) {                                                                                                   // 26
					if (_i5 >= _iterator5.length) break;                                                                              // 26
					_ref5 = _iterator5[_i5++];                                                                                        // 26
				} else {                                                                                                           // 26
					_i5 = _iterator5.next();                                                                                          // 26
					if (_i5.done) break;                                                                                              // 26
					_ref5 = _i5.value;                                                                                                // 26
				}                                                                                                                  // 26
                                                                                                                       //
				var _key = _ref5;                                                                                                  // 26
                                                                                                                       //
				if (keys[_key] == null) {                                                                                          // 27
					keys[_key] = [];                                                                                                  // 28
				}                                                                                                                  // 29
                                                                                                                       //
				keys[_key].push(lang);                                                                                             // 30
			}                                                                                                                   // 31
		}                                                                                                                    // 32
                                                                                                                       //
		var len = 0;                                                                                                         // 34
                                                                                                                       //
		for (var _iterator3 = Object.keys(keys), _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
			var _ref3;                                                                                                          // 35
                                                                                                                       //
			if (_isArray3) {                                                                                                    // 35
				if (_i3 >= _iterator3.length) break;                                                                               // 35
				_ref3 = _iterator3[_i3++];                                                                                         // 35
			} else {                                                                                                            // 35
				_i3 = _iterator3.next();                                                                                           // 35
				if (_i3.done) break;                                                                                               // 35
				_ref3 = _i3.value;                                                                                                 // 35
			}                                                                                                                   // 35
                                                                                                                       //
			var key = _ref3;                                                                                                    // 35
			var present = keys[key];                                                                                            // 36
                                                                                                                       //
			if (!(present.length !== langs.length)) {                                                                           // 38
				continue;                                                                                                          // 39
			}                                                                                                                   // 40
                                                                                                                       //
			var error = (_.difference(langs, present).join(',') + ': missing translation for ').red + key.white + ('. Present in [' + present.join(',') + ']').red;
			errors.push(error);                                                                                                 // 44
                                                                                                                       //
			if (error.length > len) {                                                                                           // 46
				len = error.length;                                                                                                // 47
			}                                                                                                                   // 48
		}                                                                                                                    // 49
                                                                                                                       //
		if (errors.length > 0) {                                                                                             // 51
			console.log('+'.red + s.rpad('', len - 28, '-').red + '+'.red);                                                     // 52
                                                                                                                       //
			for (var _iterator4 = errors, _isArray4 = Array.isArray(_iterator4), _i4 = 0, _iterator4 = _isArray4 ? _iterator4 : _iterator4[Symbol.iterator]();;) {
				var _ref4;                                                                                                         // 54
                                                                                                                       //
				if (_isArray4) {                                                                                                   // 54
					if (_i4 >= _iterator4.length) break;                                                                              // 54
					_ref4 = _iterator4[_i4++];                                                                                        // 54
				} else {                                                                                                           // 54
					_i4 = _iterator4.next();                                                                                          // 54
					if (_i4.done) break;                                                                                              // 54
					_ref4 = _i4.value;                                                                                                // 54
				}                                                                                                                  // 54
                                                                                                                       //
				var error = _ref4;                                                                                                 // 54
				console.log('|'.red, s.rpad('' + error, len).red, '|'.red);                                                        // 55
			}                                                                                                                   // 56
                                                                                                                       //
			return console.log('+'.red + s.rpad('', len - 28, '-').red + '+'.red);                                              // 58
		}                                                                                                                    // 59
	}                                                                                                                     // 60
                                                                                                                       //
	return i18nValidation;                                                                                                // 15
}(); // Meteor.startup(function() {                                                                                    // 15
// 	RocketChat.i18nValidation();                                                                                       // 63
// });                                                                                                                 // 64
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"initialData.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/initialData.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 1
	Meteor.defer(function () {                                                                                            // 2
		if (!RocketChat.models.Rooms.findOneById('GENERAL')) {                                                               // 3
			RocketChat.models.Rooms.createWithIdTypeAndName('GENERAL', 'c', 'general', {                                        // 4
				'default': true                                                                                                    // 5
			});                                                                                                                 // 4
		}                                                                                                                    // 7
                                                                                                                       //
		if (!RocketChat.models.Users.db.findOneById('rocket.cat')) {                                                         // 9
			RocketChat.models.Users.create({                                                                                    // 10
				_id: 'rocket.cat',                                                                                                 // 11
				name: 'Rocket.Cat',                                                                                                // 12
				username: 'rocket.cat',                                                                                            // 13
				status: 'online',                                                                                                  // 14
				statusDefault: 'online',                                                                                           // 15
				utcOffset: 0,                                                                                                      // 16
				active: true,                                                                                                      // 17
				type: 'bot'                                                                                                        // 18
			});                                                                                                                 // 10
			RocketChat.authz.addUserRoles('rocket.cat', 'bot');                                                                 // 21
			var rs = RocketChatFile.bufferToStream(new Buffer(Assets.getBinary('avatars/rocketcat.png'), 'utf8'));              // 23
			RocketChatFileAvatarInstance.deleteFile('rocket.cat.jpg');                                                          // 25
			var ws = RocketChatFileAvatarInstance.createWriteStream('rocket.cat.jpg', 'image/png');                             // 27
			ws.on('end', Meteor.bindEnvironment(function () {                                                                   // 29
				return RocketChat.models.Users.setAvatarOrigin('rocket.cat', 'local');                                             // 30
			}));                                                                                                                // 31
			rs.pipe(ws);                                                                                                        // 33
		}                                                                                                                    // 34
                                                                                                                       //
		if (process.env.ADMIN_PASS) {                                                                                        // 36
			if (_.isEmpty(RocketChat.authz.getUsersInRole('admin').fetch())) {                                                  // 37
				console.log('Inserting admin user:'.green);                                                                        // 38
				var adminUser = {                                                                                                  // 39
					name: 'Administrator',                                                                                            // 40
					username: 'admin',                                                                                                // 41
					status: 'offline',                                                                                                // 42
					statusDefault: 'online',                                                                                          // 43
					utcOffset: 0,                                                                                                     // 44
					active: true                                                                                                      // 45
				};                                                                                                                 // 39
                                                                                                                       //
				if (process.env.ADMIN_NAME) {                                                                                      // 48
					adminUser.name = process.env.ADMIN_NAME;                                                                          // 49
				}                                                                                                                  // 50
                                                                                                                       //
				console.log(('Name: ' + adminUser.name).green);                                                                    // 52
                                                                                                                       //
				if (process.env.ADMIN_EMAIL) {                                                                                     // 54
					var re = /^[^@].*@[^@]+$/i;                                                                                       // 55
                                                                                                                       //
					if (re.test(process.env.ADMIN_EMAIL)) {                                                                           // 57
						if (!RocketChat.models.Users.findOneByEmailAddress(process.env.ADMIN_EMAIL)) {                                   // 58
							adminUser.emails = [{                                                                                           // 59
								address: process.env.ADMIN_EMAIL,                                                                              // 60
								verified: true                                                                                                 // 61
							}];                                                                                                             // 59
							console.log(('Email: ' + process.env.ADMIN_EMAIL).green);                                                       // 64
						} else {                                                                                                         // 65
							console.log('Email provided already exists; Ignoring environment variables ADMIN_EMAIL'.red);                   // 66
						}                                                                                                                // 67
					} else {                                                                                                          // 68
						console.log('Email provided is invalid; Ignoring environment variables ADMIN_EMAIL'.red);                        // 69
					}                                                                                                                 // 70
				}                                                                                                                  // 71
                                                                                                                       //
				if (process.env.ADMIN_USERNAME) {                                                                                  // 73
					var nameValidation = void 0;                                                                                      // 74
                                                                                                                       //
					try {                                                                                                             // 76
						nameValidation = new RegExp('^' + RocketChat.settings.get('UTF8_Names_Validation') + '$');                       // 77
					} catch (error) {                                                                                                 // 78
						nameValidation = new RegExp('^[0-9a-zA-Z-_.]+$');                                                                // 79
					}                                                                                                                 // 80
                                                                                                                       //
					if (nameValidation.test(process.env.ADMIN_USERNAME)) {                                                            // 82
						if (RocketChat.checkUsernameAvailability(process.env.ADMIN_USERNAME)) {                                          // 83
							adminUser.username = process.env.ADMIN_USERNAME;                                                                // 84
						} else {                                                                                                         // 85
							console.log('Username provided already exists; Ignoring environment variables ADMIN_USERNAME'.red);             // 86
						}                                                                                                                // 87
					} else {                                                                                                          // 88
						console.log('Username provided is invalid; Ignoring environment variables ADMIN_USERNAME'.red);                  // 89
					}                                                                                                                 // 90
				}                                                                                                                  // 91
                                                                                                                       //
				console.log(('Username: ' + adminUser.username).green);                                                            // 93
				adminUser.type = 'user';                                                                                           // 95
				var id = RocketChat.models.Users.create(adminUser);                                                                // 97
				Accounts.setPassword(id, process.env.ADMIN_PASS);                                                                  // 99
				console.log(('Password: ' + process.env.ADMIN_PASS).green);                                                        // 101
				RocketChat.authz.addUserRoles(id, 'admin');                                                                        // 103
			} else {                                                                                                            // 104
				console.log('Users with admin role already exist; Ignoring environment variables ADMIN_PASS'.red);                 // 105
			}                                                                                                                   // 106
		}                                                                                                                    // 107
                                                                                                                       //
		if (_.isEmpty(RocketChat.authz.getUsersInRole('admin').fetch())) {                                                   // 109
			var oldestUser = RocketChat.models.Users.findOne({                                                                  // 110
				_id: {                                                                                                             // 111
					$ne: 'rocket.cat'                                                                                                 // 112
				}                                                                                                                  // 111
			}, {                                                                                                                // 110
				fields: {                                                                                                          // 115
					username: 1                                                                                                       // 116
				},                                                                                                                 // 115
				sort: {                                                                                                            // 118
					createdAt: 1                                                                                                      // 119
				}                                                                                                                  // 118
			});                                                                                                                 // 114
                                                                                                                       //
			if (oldestUser) {                                                                                                   // 123
				RocketChat.authz.addUserRoles(oldestUser._id, 'admin');                                                            // 124
				console.log("No admins are found. Set " + oldestUser.username + " as admin for being the oldest user");            // 125
			}                                                                                                                   // 126
		}                                                                                                                    // 127
                                                                                                                       //
		RocketChat.models.Users.removeById('rocketchat.internal.admin.test');                                                // 129
                                                                                                                       //
		if (process.env.TEST_MODE === 'true') {                                                                              // 131
			console.log('Inserting admin test user:'.green);                                                                    // 132
			var _adminUser = {                                                                                                  // 134
				_id: 'rocketchat.internal.admin.test',                                                                             // 135
				name: 'RocketChat Internal Admin Test',                                                                            // 136
				username: 'rocketchat.internal.admin.test',                                                                        // 137
				emails: [{                                                                                                         // 138
					address: 'rocketchat.internal.admin.test@rocket.chat',                                                            // 140
					verified: true                                                                                                    // 141
				}],                                                                                                                // 139
				status: 'offline',                                                                                                 // 144
				statusDefault: 'online',                                                                                           // 145
				utcOffset: 0,                                                                                                      // 146
				active: true,                                                                                                      // 147
				type: 'user'                                                                                                       // 148
			};                                                                                                                  // 134
			console.log(("Name: " + _adminUser.name).green);                                                                    // 151
			console.log(("Email: " + _adminUser.emails[0].address).green);                                                      // 152
			console.log(("Username: " + _adminUser.username).green);                                                            // 153
			console.log(("Password: " + _adminUser._id).green);                                                                 // 154
                                                                                                                       //
			if (RocketChat.models.Users.db.findOneByEmailAddress(_adminUser.emails[0].address)) {                               // 156
				throw new Meteor.Error("Email " + _adminUser.emails[0].address + " already exists", 'Rocket.Chat can\'t run in test mode');
			}                                                                                                                   // 158
                                                                                                                       //
			if (!RocketChat.checkUsernameAvailability(_adminUser.username)) {                                                   // 160
				throw new Meteor.Error("Username " + _adminUser.username + " already exists", 'Rocket.Chat can\'t run in test mode');
			}                                                                                                                   // 162
                                                                                                                       //
			RocketChat.models.Users.create(_adminUser);                                                                         // 164
			Accounts.setPassword(_adminUser._id, _adminUser._id);                                                               // 166
			RocketChat.authz.addUserRoles(_adminUser._id, 'admin');                                                             // 168
			return RocketChat.addUserToDefaultChannels(_adminUser, true);                                                       // 170
		}                                                                                                                    // 171
	});                                                                                                                   // 172
});                                                                                                                    // 173
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"presence.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/presence.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* globals InstanceStatus, UserPresence, UserPresenceMonitor */Meteor.startup(function () {                            // 1
	var instance = {                                                                                                      // 4
		host: 'localhost',                                                                                                   // 5
		port: process.env.PORT                                                                                               // 6
	};                                                                                                                    // 4
                                                                                                                       //
	if (process.env.INSTANCE_IP) {                                                                                        // 9
		instance.host = process.env.INSTANCE_IP;                                                                             // 10
	}                                                                                                                     // 11
                                                                                                                       //
	InstanceStatus.registerInstance('rocket.chat', instance);                                                             // 13
	UserPresence.start();                                                                                                 // 15
	return UserPresenceMonitor.start();                                                                                   // 17
});                                                                                                                    // 18
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"roomPublishes.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/roomPublishes.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 1
	RocketChat.roomTypes.setPublish('c', function (identifier) {                                                          // 2
		var options = {                                                                                                      // 3
			fields: {                                                                                                           // 4
				name: 1,                                                                                                           // 5
				t: 1,                                                                                                              // 6
				cl: 1,                                                                                                             // 7
				u: 1,                                                                                                              // 8
				usernames: 1,                                                                                                      // 9
				topic: 1,                                                                                                          // 10
				muted: 1,                                                                                                          // 11
				archived: 1,                                                                                                       // 12
				ro: 1,                                                                                                             // 13
				reactWhenReadOnly: 1,                                                                                              // 14
				jitsiTimeout: 1,                                                                                                   // 15
				description: 1,                                                                                                    // 16
				sysMes: 1,                                                                                                         // 17
				joinCodeRequired: 1                                                                                                // 18
			}                                                                                                                   // 4
		};                                                                                                                   // 3
                                                                                                                       //
		if (RocketChat.authz.hasPermission(this.userId, 'view-join-code')) {                                                 // 22
			options.fields.joinCode = 1;                                                                                        // 23
		}                                                                                                                    // 24
                                                                                                                       //
		if (RocketChat.authz.hasPermission(this.userId, 'view-c-room')) {                                                    // 26
			return RocketChat.models.Rooms.findByTypeAndName('c', identifier, options);                                         // 27
		} else if (RocketChat.authz.hasPermission(this.userId, 'view-joined-room')) {                                        // 28
			var roomId = RocketChat.models.Subscriptions.findByTypeNameAndUserId('c', identifier, this.userId).fetch();         // 29
                                                                                                                       //
			if (roomId.length > 0) {                                                                                            // 30
				return RocketChat.models.Rooms.findById(roomId[0].rid, options);                                                   // 31
			}                                                                                                                   // 32
		}                                                                                                                    // 33
                                                                                                                       //
		return this.ready();                                                                                                 // 35
	});                                                                                                                   // 36
	RocketChat.roomTypes.setPublish('p', function (identifier) {                                                          // 38
		var options = {                                                                                                      // 39
			fields: {                                                                                                           // 40
				name: 1,                                                                                                           // 41
				t: 1,                                                                                                              // 42
				cl: 1,                                                                                                             // 43
				u: 1,                                                                                                              // 44
				usernames: 1,                                                                                                      // 45
				topic: 1,                                                                                                          // 46
				muted: 1,                                                                                                          // 47
				archived: 1,                                                                                                       // 48
				ro: 1,                                                                                                             // 49
				reactWhenReadOnly: 1,                                                                                              // 50
				jitsiTimeout: 1,                                                                                                   // 51
				description: 1,                                                                                                    // 52
				sysMes: 1                                                                                                          // 53
			}                                                                                                                   // 40
		};                                                                                                                   // 39
		var user = RocketChat.models.Users.findOneById(this.userId, {                                                        // 57
			fields: {                                                                                                           // 58
				username: 1                                                                                                        // 59
			}                                                                                                                   // 58
		});                                                                                                                  // 57
		return RocketChat.models.Rooms.findByTypeAndNameContainingUsername('p', identifier, user.username, options);         // 63
	});                                                                                                                   // 64
	return RocketChat.roomTypes.setPublish('d', function (identifier) {                                                   // 66
		var options = {                                                                                                      // 67
			fields: {                                                                                                           // 68
				name: 1,                                                                                                           // 69
				t: 1,                                                                                                              // 70
				cl: 1,                                                                                                             // 71
				u: 1,                                                                                                              // 72
				usernames: 1,                                                                                                      // 73
				topic: 1,                                                                                                          // 74
				jitsiTimeout: 1                                                                                                    // 75
			}                                                                                                                   // 68
		};                                                                                                                   // 67
		var user = RocketChat.models.Users.findOneById(this.userId, {                                                        // 79
			fields: {                                                                                                           // 80
				username: 1                                                                                                        // 81
			}                                                                                                                   // 80
		});                                                                                                                  // 79
                                                                                                                       //
		if (RocketChat.authz.hasAtLeastOnePermission(this.userId, ['view-d-room', 'view-joined-room'])) {                    // 85
			return RocketChat.models.Rooms.findByTypeContainingUsernames('d', [user.username, identifier], options);            // 86
		}                                                                                                                    // 87
                                                                                                                       //
		return this.ready();                                                                                                 // 89
	});                                                                                                                   // 90
});                                                                                                                    // 91
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"serverRunning.js":["fs","path","semver",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/startup/serverRunning.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var fs = void 0;                                                                                                       // 1
module.import('fs', {                                                                                                  // 1
	"default": function (v) {                                                                                             // 1
		fs = v;                                                                                                              // 1
	}                                                                                                                     // 1
}, 0);                                                                                                                 // 1
var path = void 0;                                                                                                     // 1
module.import('path', {                                                                                                // 1
	"default": function (v) {                                                                                             // 1
		path = v;                                                                                                            // 1
	}                                                                                                                     // 1
}, 1);                                                                                                                 // 1
var semver = void 0;                                                                                                   // 1
module.import('semver', {                                                                                              // 1
	"default": function (v) {                                                                                             // 1
		semver = v;                                                                                                          // 1
	}                                                                                                                     // 1
}, 2);                                                                                                                 // 1
Meteor.startup(function () {                                                                                           // 7
	var oplogState = 'Disabled';                                                                                          // 8
                                                                                                                       //
	if (MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle && MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle.onOplogEntry) {
		oplogState = 'Enabled';                                                                                              // 10
                                                                                                                       //
		if (RocketChat.settings.get('Force_Disable_OpLog_For_Cache') === true) {                                             // 11
			oplogState += ' (Disabled for Cache Sync)';                                                                         // 12
		}                                                                                                                    // 13
	}                                                                                                                     // 14
                                                                                                                       //
	var desiredNodeVersion = semver.clean(fs.readFileSync(path.join(process.cwd(), '../../.node_version.txt')).toString());
	var desiredNodeVersionMajor = String(semver.parse(desiredNodeVersion).major);                                         // 17
	return Meteor.setTimeout(function () {                                                                                // 19
		var msg = ["Rocket.Chat Version: " + RocketChat.Info.version, "     NodeJS Version: " + process.versions.node + " - " + process.arch, "           Platform: " + process.platform, "       Process Port: " + process.env.PORT, "           Site URL: " + RocketChat.settings.get('Site_Url'), "   ReplicaSet OpLog: " + oplogState];
                                                                                                                       //
		if (RocketChat.Info.commit && RocketChat.Info.commit.hash) {                                                         // 29
			msg.push("        Commit Hash: " + RocketChat.Info.commit.hash.substr(0, 10));                                      // 30
		}                                                                                                                    // 31
                                                                                                                       //
		if (RocketChat.Info.commit && RocketChat.Info.commit.branch) {                                                       // 33
			msg.push("      Commit Branch: " + RocketChat.Info.commit.branch);                                                  // 34
		}                                                                                                                    // 35
                                                                                                                       //
		msg = msg.join('\n');                                                                                                // 37
                                                                                                                       //
		if (semver.satisfies(process.versions.node, desiredNodeVersionMajor)) {                                              // 39
			return SystemLogger.startup_box(msg, 'SERVER RUNNING');                                                             // 40
		}                                                                                                                    // 41
                                                                                                                       //
		msg += ['', '', 'YOUR CURRENT NODEJS VERSION IS NOT SUPPORTED,', "PLEASE UPGRADE / DOWNGRADE TO VERSION " + desiredNodeVersionMajor + ".X.X"].join('\n');
		SystemLogger.error_box(msg, 'SERVER ERROR');                                                                         // 45
		return process.exit();                                                                                               // 47
	}, 100);                                                                                                              // 48
});                                                                                                                    // 49
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"configuration":{"accounts_meld.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/configuration/accounts_meld.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var orig_updateOrCreateUserFromExternalService = Accounts.updateOrCreateUserFromExternalService;                       // 1
                                                                                                                       //
Accounts.updateOrCreateUserFromExternalService = function (serviceName) /*, options*/{                                 // 3
	var serviceData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};                             // 3
	var services = ['facebook', 'github', 'gitlab', 'google', 'meteor-developer', 'linkedin', 'twitter', 'sandstorm'];    // 4
                                                                                                                       //
	if (services.includes(serviceName) === false && serviceData._OAuthCustom !== true) {                                  // 15
		return;                                                                                                              // 16
	}                                                                                                                     // 17
                                                                                                                       //
	if (serviceName === 'meteor-developer') {                                                                             // 19
		if (Array.isArray(serviceData.emails)) {                                                                             // 20
			serviceData.email = serviceData.emails.sort(function (a) {                                                          // 21
				return a.primary !== true;                                                                                         // 21
			}).filter(function (item) {                                                                                         // 21
				return item.verified === true;                                                                                     // 21
			})[0];                                                                                                              // 21
		}                                                                                                                    // 22
	}                                                                                                                     // 23
                                                                                                                       //
	if (serviceName === 'linkedin') {                                                                                     // 25
		serviceData.email = serviceData.emailAddress;                                                                        // 26
	}                                                                                                                     // 27
                                                                                                                       //
	if (serviceData.email) {                                                                                              // 29
		var user = RocketChat.models.Users.findOneByEmailAddress(serviceData.email);                                         // 30
                                                                                                                       //
		if (user != null) {                                                                                                  // 31
			var findQuery = {                                                                                                   // 32
				address: serviceData.email,                                                                                        // 33
				verified: true                                                                                                     // 34
			};                                                                                                                  // 32
                                                                                                                       //
			if (!_.findWhere(user.emails, findQuery)) {                                                                         // 37
				RocketChat.models.Users.resetPasswordAndSetRequirePasswordChange(user._id, true, 'This_email_has_already_been_used_and_has_not_been_verified__Please_change_your_password');
			}                                                                                                                   // 39
                                                                                                                       //
			RocketChat.models.Users.setServiceId(user._id, serviceName, serviceData.id);                                        // 41
			RocketChat.models.Users.setEmailVerified(user._id, serviceData.email);                                              // 42
		}                                                                                                                    // 43
	}                                                                                                                     // 44
                                                                                                                       //
	return orig_updateOrCreateUserFromExternalService.apply(this, arguments);                                             // 46
};                                                                                                                     // 47
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"methods":{"OEmbedCacheCleanup.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/OEmbedCacheCleanup.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	OEmbedCacheCleanup: function () {                                                                                     // 2
		if (Meteor.userId() && !RocketChat.authz.hasRole(Meteor.userId(), 'admin')) {                                        // 3
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 4
				method: 'OEmbedCacheCleanup'                                                                                       // 5
			});                                                                                                                 // 4
		}                                                                                                                    // 7
                                                                                                                       //
		var date = new Date();                                                                                               // 9
		var expirationDays = RocketChat.settings.get('API_EmbedCacheExpirationDays');                                        // 10
		date.setDate(date.getDate() - expirationDays);                                                                       // 11
		RocketChat.models.OEmbedCache.removeAfterDate(date);                                                                 // 12
		return {                                                                                                             // 13
			message: 'cache_cleared'                                                                                            // 14
		};                                                                                                                   // 13
	}                                                                                                                     // 16
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"addAllUserToRoom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/addAllUserToRoom.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	addAllUserToRoom: function (rid) {                                                                                    // 2
		check(rid, String);                                                                                                  // 4
                                                                                                                       //
		if (RocketChat.authz.hasRole(this.userId, 'admin') === true) {                                                       // 6
			var now, room, users;                                                                                               // 7
			var userCount = RocketChat.models.Users.find().count();                                                             // 8
                                                                                                                       //
			if (userCount > RocketChat.settings.get('API_User_Limit')) {                                                        // 9
				throw new Meteor.Error('error-user-limit-exceeded', 'User Limit Exceeded', {                                       // 10
					method: 'addAllToRoom'                                                                                            // 11
				});                                                                                                                // 10
			}                                                                                                                   // 13
                                                                                                                       //
			room = RocketChat.models.Rooms.findOneById(rid);                                                                    // 14
                                                                                                                       //
			if (room == null) {                                                                                                 // 15
				throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                     // 16
					method: 'addAllToRoom'                                                                                            // 17
				});                                                                                                                // 16
			}                                                                                                                   // 19
                                                                                                                       //
			users = RocketChat.models.Users.find().fetch();                                                                     // 20
			now = new Date();                                                                                                   // 21
			users.forEach(function (user) {                                                                                     // 22
				var subscription;                                                                                                  // 23
				subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, user._id);                            // 24
                                                                                                                       //
				if (subscription != null) {                                                                                        // 25
					return;                                                                                                           // 26
				}                                                                                                                  // 27
                                                                                                                       //
				RocketChat.callbacks.run('beforeJoinRoom', user, room);                                                            // 28
				RocketChat.models.Rooms.addUsernameById(rid, user.username);                                                       // 29
				RocketChat.models.Subscriptions.createWithRoomAndUser(room, user, {                                                // 30
					ts: now,                                                                                                          // 31
					open: true,                                                                                                       // 32
					alert: true,                                                                                                      // 33
					unread: 1                                                                                                         // 34
				});                                                                                                                // 30
				RocketChat.models.Messages.createUserJoinWithRoomIdAndUser(rid, user, {                                            // 36
					ts: now                                                                                                           // 37
				});                                                                                                                // 36
				Meteor.defer(function () {});                                                                                      // 39
				return RocketChat.callbacks.run('afterJoinRoom', user, room);                                                      // 40
			});                                                                                                                 // 41
			return true;                                                                                                        // 42
		} else {                                                                                                             // 43
			throw new Meteor.Error(403, 'Access to Method Forbidden', {                                                         // 44
				method: 'addAllToRoom'                                                                                             // 45
			});                                                                                                                 // 44
		}                                                                                                                    // 47
	}                                                                                                                     // 48
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"addRoomModerator.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/addRoomModerator.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	addRoomModerator: function (rid, userId) {                                                                            // 2
		check(rid, String);                                                                                                  // 3
		check(userId, String);                                                                                               // 4
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'addRoomModerator'                                                                                         // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		if (!RocketChat.authz.hasPermission(Meteor.userId(), 'set-moderator', rid)) {                                        // 12
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 13
				method: 'addRoomModerator'                                                                                         // 14
			});                                                                                                                 // 13
		}                                                                                                                    // 16
                                                                                                                       //
		var user = RocketChat.models.Users.findOneById(userId);                                                              // 18
                                                                                                                       //
		if (!user || !user.username) {                                                                                       // 20
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 21
				method: 'addRoomModerator'                                                                                         // 22
			});                                                                                                                 // 21
		}                                                                                                                    // 24
                                                                                                                       //
		var subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, user._id);                          // 26
                                                                                                                       //
		if (!subscription) {                                                                                                 // 28
			throw new Meteor.Error('error-user-not-in-room', 'User is not in this room', {                                      // 29
				method: 'addRoomModerator'                                                                                         // 30
			});                                                                                                                 // 29
		}                                                                                                                    // 32
                                                                                                                       //
		if (Array.isArray(subscription.roles) === true && subscription.roles.includes('moderator') === true) {               // 34
			throw new Meteor.Error('error-user-already-moderator', 'User is already a moderator', {                             // 35
				method: 'addRoomModerator'                                                                                         // 36
			});                                                                                                                 // 35
		}                                                                                                                    // 38
                                                                                                                       //
		RocketChat.models.Subscriptions.addRoleById(subscription._id, 'moderator');                                          // 40
		var fromUser = RocketChat.models.Users.findOneById(Meteor.userId());                                                 // 42
		RocketChat.models.Messages.createSubscriptionRoleAddedWithRoomIdAndUser(rid, user, {                                 // 44
			u: {                                                                                                                // 45
				_id: fromUser._id,                                                                                                 // 46
				username: fromUser.username                                                                                        // 47
			},                                                                                                                  // 45
			role: 'moderator'                                                                                                   // 49
		});                                                                                                                  // 44
                                                                                                                       //
		if (RocketChat.settings.get('UI_DisplayRoles')) {                                                                    // 52
			RocketChat.Notifications.notifyLogged('roles-change', {                                                             // 53
				type: 'added',                                                                                                     // 54
				_id: 'moderator',                                                                                                  // 55
				u: {                                                                                                               // 56
					_id: user._id,                                                                                                    // 57
					username: user.username                                                                                           // 58
				},                                                                                                                 // 56
				scope: rid                                                                                                         // 60
			});                                                                                                                 // 53
		}                                                                                                                    // 62
                                                                                                                       //
		return true;                                                                                                         // 64
	}                                                                                                                     // 65
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"addRoomOwner.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/addRoomOwner.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	addRoomOwner: function (rid, userId) {                                                                                // 2
		check(rid, String);                                                                                                  // 3
		check(userId, String);                                                                                               // 4
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'addRoomOwner'                                                                                             // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		if (!RocketChat.authz.hasPermission(Meteor.userId(), 'set-owner', rid)) {                                            // 12
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 13
				method: 'addRoomOwner'                                                                                             // 14
			});                                                                                                                 // 13
		}                                                                                                                    // 16
                                                                                                                       //
		var user = RocketChat.models.Users.findOneById(userId);                                                              // 18
                                                                                                                       //
		if (!user || !user.username) {                                                                                       // 20
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 21
				method: 'addRoomOwner'                                                                                             // 22
			});                                                                                                                 // 21
		}                                                                                                                    // 24
                                                                                                                       //
		var subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, user._id);                          // 26
                                                                                                                       //
		if (!subscription) {                                                                                                 // 28
			throw new Meteor.Error('error-user-not-in-room', 'User is not in this room', {                                      // 29
				method: 'addRoomOwner'                                                                                             // 30
			});                                                                                                                 // 29
		}                                                                                                                    // 32
                                                                                                                       //
		if (Array.isArray(subscription.roles) === true && subscription.roles.includes('owner') === true) {                   // 34
			throw new Meteor.Error('error-user-already-owner', 'User is already an owner', {                                    // 35
				method: 'addRoomOwner'                                                                                             // 36
			});                                                                                                                 // 35
		}                                                                                                                    // 38
                                                                                                                       //
		RocketChat.models.Subscriptions.addRoleById(subscription._id, 'owner');                                              // 40
		var fromUser = RocketChat.models.Users.findOneById(Meteor.userId());                                                 // 42
		RocketChat.models.Messages.createSubscriptionRoleAddedWithRoomIdAndUser(rid, user, {                                 // 44
			u: {                                                                                                                // 45
				_id: fromUser._id,                                                                                                 // 46
				username: fromUser.username                                                                                        // 47
			},                                                                                                                  // 45
			role: 'owner'                                                                                                       // 49
		});                                                                                                                  // 44
                                                                                                                       //
		if (RocketChat.settings.get('UI_DisplayRoles')) {                                                                    // 52
			RocketChat.Notifications.notifyLogged('roles-change', {                                                             // 53
				type: 'added',                                                                                                     // 54
				_id: 'owner',                                                                                                      // 55
				u: {                                                                                                               // 56
					_id: user._id,                                                                                                    // 57
					username: user.username                                                                                           // 58
				},                                                                                                                 // 56
				scope: rid                                                                                                         // 60
			});                                                                                                                 // 53
		}                                                                                                                    // 62
                                                                                                                       //
		return true;                                                                                                         // 64
	}                                                                                                                     // 65
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"canAccessRoom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/canAccessRoom.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	canAccessRoom: function (rid, userId) {                                                                               // 2
		check(rid, String);                                                                                                  // 3
		check(userId, String);                                                                                               // 4
		var user = RocketChat.models.Users.findOneById(userId, {                                                             // 6
			fields: {                                                                                                           // 7
				username: 1                                                                                                        // 8
			}                                                                                                                   // 7
		});                                                                                                                  // 6
                                                                                                                       //
		if (!user || !user.username) {                                                                                       // 12
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 13
				method: 'canAccessRoom'                                                                                            // 14
			});                                                                                                                 // 13
		}                                                                                                                    // 16
                                                                                                                       //
		if (!rid) {                                                                                                          // 18
			throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                      // 19
				method: 'canAccessRoom'                                                                                            // 20
			});                                                                                                                 // 19
		}                                                                                                                    // 22
                                                                                                                       //
		var room = RocketChat.models.Rooms.findOneById(rid);                                                                 // 24
                                                                                                                       //
		if (room) {                                                                                                          // 25
			if (RocketChat.authz.canAccessRoom.call(this, room, user)) {                                                        // 26
				room.username = user.username;                                                                                     // 27
				return room;                                                                                                       // 28
			}                                                                                                                   // 29
                                                                                                                       //
			return false;                                                                                                       // 31
		} else {                                                                                                             // 32
			throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                      // 33
				method: 'canAccessRoom'                                                                                            // 34
			});                                                                                                                 // 33
		}                                                                                                                    // 36
	}                                                                                                                     // 37
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"channelsList.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/channelsList.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	channelsList: function (filter, channelType, limit, sort) {                                                           // 2
		this.unblock();                                                                                                      // 3
		check(filter, String);                                                                                               // 5
		check(channelType, String);                                                                                          // 6
		check(limit, Match.Optional(Number));                                                                                // 7
		check(sort, Match.Optional(String));                                                                                 // 8
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 10
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 11
				method: 'channelsList'                                                                                             // 12
			});                                                                                                                 // 11
		}                                                                                                                    // 14
                                                                                                                       //
		var options = {                                                                                                      // 16
			fields: {                                                                                                           // 17
				name: 1,                                                                                                           // 18
				t: 1                                                                                                               // 19
			},                                                                                                                  // 17
			sort: {                                                                                                             // 21
				msgs: -1                                                                                                           // 22
			}                                                                                                                   // 21
		};                                                                                                                   // 16
                                                                                                                       //
		if (_.isNumber(limit)) {                                                                                             // 26
			options.limit = limit;                                                                                              // 27
		}                                                                                                                    // 28
                                                                                                                       //
		if (_.trim(sort)) {                                                                                                  // 30
			switch (sort) {                                                                                                     // 31
				case 'name':                                                                                                       // 32
					options.sort = {                                                                                                  // 33
						name: 1                                                                                                          // 34
					};                                                                                                                // 33
					break;                                                                                                            // 36
                                                                                                                       //
				case 'msgs':                                                                                                       // 37
					options.sort = {                                                                                                  // 38
						msgs: -1                                                                                                         // 39
					};                                                                                                                // 38
			}                                                                                                                   // 31
		}                                                                                                                    // 42
                                                                                                                       //
		var roomTypes = [];                                                                                                  // 44
                                                                                                                       //
		if (channelType !== 'private') {                                                                                     // 46
			if (RocketChat.authz.hasPermission(Meteor.userId(), 'view-c-room')) {                                               // 47
				roomTypes.push({                                                                                                   // 48
					type: 'c'                                                                                                         // 49
				});                                                                                                                // 48
			} else if (RocketChat.authz.hasPermission(Meteor.userId(), 'view-joined-room')) {                                   // 51
				var roomIds = _.pluck(RocketChat.models.Subscriptions.findByTypeAndUserId('c', Meteor.userId()).fetch(), 'rid');   // 52
                                                                                                                       //
				roomTypes.push({                                                                                                   // 53
					type: 'c',                                                                                                        // 54
					ids: roomIds                                                                                                      // 55
				});                                                                                                                // 53
			}                                                                                                                   // 57
		}                                                                                                                    // 58
                                                                                                                       //
		if (channelType !== 'public' && RocketChat.authz.hasPermission(Meteor.userId(), 'view-p-room')) {                    // 60
			var userPref = Meteor.user() && Meteor.user().settings && Meteor.user().settings.preferences && Meteor.user().settings.preferences.mergeChannels;
			var globalPref = RocketChat.settings.get('UI_Merge_Channels_Groups');                                               // 62
			var mergeChannels = userPref || globalPref;                                                                         // 63
                                                                                                                       //
			if (mergeChannels) {                                                                                                // 65
				roomTypes.push({                                                                                                   // 66
					type: 'p',                                                                                                        // 67
					username: Meteor.user().username                                                                                  // 68
				});                                                                                                                // 66
			}                                                                                                                   // 70
		}                                                                                                                    // 71
                                                                                                                       //
		if (roomTypes.length) {                                                                                              // 73
			if (filter) {                                                                                                       // 74
				return {                                                                                                           // 75
					channels: RocketChat.models.Rooms.findByNameContainingTypesWithUsername(filter, roomTypes, options).fetch()       // 76
				};                                                                                                                 // 75
			}                                                                                                                   // 78
                                                                                                                       //
			return {                                                                                                            // 80
				channels: RocketChat.models.Rooms.findContainingTypesWithUsername(roomTypes, options).fetch()                      // 81
			};                                                                                                                  // 80
		}                                                                                                                    // 83
                                                                                                                       //
		return {                                                                                                             // 85
			channels: []                                                                                                        // 86
		};                                                                                                                   // 85
	}                                                                                                                     // 88
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"createDirectMessage.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/createDirectMessage.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	createDirectMessage: function (username) {                                                                            // 2
		check(username, String);                                                                                             // 3
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 5
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 6
				method: 'createDirectMessage'                                                                                      // 7
			});                                                                                                                 // 6
		}                                                                                                                    // 9
                                                                                                                       //
		var me = Meteor.user();                                                                                              // 11
                                                                                                                       //
		if (!me.username) {                                                                                                  // 13
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 14
				method: 'createDirectMessage'                                                                                      // 15
			});                                                                                                                 // 14
		}                                                                                                                    // 17
                                                                                                                       //
		if (me.username === username) {                                                                                      // 19
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 20
				method: 'createDirectMessage'                                                                                      // 21
			});                                                                                                                 // 20
		}                                                                                                                    // 23
                                                                                                                       //
		if (!RocketChat.authz.hasPermission(Meteor.userId(), 'create-d')) {                                                  // 25
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 26
				method: 'createDirectMessage'                                                                                      // 27
			});                                                                                                                 // 26
		}                                                                                                                    // 29
                                                                                                                       //
		var to = RocketChat.models.Users.findOneByUsername(username);                                                        // 31
                                                                                                                       //
		if (!to) {                                                                                                           // 33
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 34
				method: 'createDirectMessage'                                                                                      // 35
			});                                                                                                                 // 34
		}                                                                                                                    // 37
                                                                                                                       //
		var rid = [me._id, to._id].sort().join('');                                                                          // 39
		var now = new Date(); // Make sure we have a room                                                                    // 41
                                                                                                                       //
		RocketChat.models.Rooms.upsert({                                                                                     // 44
			_id: rid                                                                                                            // 45
		}, {                                                                                                                 // 44
			$set: {                                                                                                             // 47
				usernames: [me.username, to.username]                                                                              // 48
			},                                                                                                                  // 47
			$setOnInsert: {                                                                                                     // 50
				t: 'd',                                                                                                            // 51
				msgs: 0,                                                                                                           // 52
				ts: now                                                                                                            // 53
			}                                                                                                                   // 50
		}); // Make user I have a subcription to this room                                                                   // 46
                                                                                                                       //
		var upsertSubscription = {                                                                                           // 58
			$set: {                                                                                                             // 59
				ts: now,                                                                                                           // 60
				ls: now,                                                                                                           // 61
				open: true                                                                                                         // 62
			},                                                                                                                  // 59
			$setOnInsert: {                                                                                                     // 64
				name: to.username,                                                                                                 // 65
				t: 'd',                                                                                                            // 66
				alert: false,                                                                                                      // 67
				unread: 0,                                                                                                         // 68
				u: {                                                                                                               // 69
					_id: me._id,                                                                                                      // 70
					username: me.username                                                                                             // 71
				}                                                                                                                  // 69
			}                                                                                                                   // 64
		};                                                                                                                   // 58
                                                                                                                       //
		if (to.active === false) {                                                                                           // 76
			upsertSubscription.$set.archived = true;                                                                            // 77
		}                                                                                                                    // 78
                                                                                                                       //
		RocketChat.models.Subscriptions.upsert({                                                                             // 80
			rid: rid,                                                                                                           // 81
			$and: [{                                                                                                            // 82
				'u._id': me._id                                                                                                    // 82
			}] // work around to solve problems with upsert and dot                                                             // 82
                                                                                                                       //
		}, upsertSubscription);                                                                                              // 80
		RocketChat.models.Subscriptions.upsert({                                                                             // 85
			rid: rid,                                                                                                           // 86
			$and: [{                                                                                                            // 87
				'u._id': to._id                                                                                                    // 87
			}] // work around to solve problems with upsert and dot                                                             // 87
                                                                                                                       //
		}, {                                                                                                                 // 85
			$setOnInsert: {                                                                                                     // 89
				name: me.username,                                                                                                 // 90
				t: 'd',                                                                                                            // 91
				open: false,                                                                                                       // 92
				alert: false,                                                                                                      // 93
				unread: 0,                                                                                                         // 94
				u: {                                                                                                               // 95
					_id: to._id,                                                                                                      // 96
					username: to.username                                                                                             // 97
				}                                                                                                                  // 95
			}                                                                                                                   // 89
		});                                                                                                                  // 88
		return {                                                                                                             // 102
			rid: rid                                                                                                            // 103
		};                                                                                                                   // 102
	}                                                                                                                     // 105
});                                                                                                                    // 1
DDPRateLimiter.addRule({                                                                                               // 108
	type: 'method',                                                                                                       // 109
	name: 'createDirectMessage',                                                                                          // 110
	connectionId: function () {                                                                                           // 111
		return true;                                                                                                         // 112
	}                                                                                                                     // 113
}, 10, 60000);                                                                                                         // 108
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"deleteFileMessage.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/deleteFileMessage.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* global FileUpload */Meteor.methods({                                                                                // 1
	deleteFileMessage: function (fileID) {                                                                                // 3
		check(fileID, String);                                                                                               // 4
		var msg = RocketChat.models.Messages.getMessageByFileId(fileID);                                                     // 6
                                                                                                                       //
		if (msg) {                                                                                                           // 8
			return Meteor.call('deleteMessage', msg);                                                                           // 9
		}                                                                                                                    // 10
                                                                                                                       //
		return FileUpload.delete(fileID);                                                                                    // 12
	}                                                                                                                     // 13
});                                                                                                                    // 2
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"deleteUser.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/deleteUser.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	deleteUser: function (userId) {                                                                                       // 2
		check(userId, String);                                                                                               // 3
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 5
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 6
				method: 'deleteUser'                                                                                               // 7
			});                                                                                                                 // 6
		}                                                                                                                    // 9
                                                                                                                       //
		if (RocketChat.authz.hasPermission(Meteor.userId(), 'delete-user') !== true) {                                       // 11
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 12
				method: 'deleteUser'                                                                                               // 13
			});                                                                                                                 // 12
		}                                                                                                                    // 15
                                                                                                                       //
		var user = RocketChat.models.Users.findOneById(userId);                                                              // 17
                                                                                                                       //
		if (!user) {                                                                                                         // 18
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 19
				method: 'deleteUser'                                                                                               // 20
			});                                                                                                                 // 19
		}                                                                                                                    // 22
                                                                                                                       //
		var adminCount = Meteor.users.find({                                                                                 // 24
			roles: 'admin'                                                                                                      // 24
		}).count();                                                                                                          // 24
		var userIsAdmin = user.roles.indexOf('admin') > -1;                                                                  // 26
                                                                                                                       //
		if (adminCount === 1 && userIsAdmin) {                                                                               // 28
			throw new Meteor.Error('error-action-not-allowed', 'Leaving the app without admins is not allowed', {               // 29
				method: 'deleteUser',                                                                                              // 30
				action: 'Remove_last_admin'                                                                                        // 31
			});                                                                                                                 // 29
		}                                                                                                                    // 33
                                                                                                                       //
		RocketChat.deleteUser(userId);                                                                                       // 35
		return true;                                                                                                         // 37
	}                                                                                                                     // 38
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"eraseRoom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/eraseRoom.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	eraseRoom: function (rid) {                                                                                           // 2
		check(rid, String);                                                                                                  // 3
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 5
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 6
				method: 'eraseRoom'                                                                                                // 7
			});                                                                                                                 // 6
		}                                                                                                                    // 9
                                                                                                                       //
		var fromId = Meteor.userId();                                                                                        // 11
		var room = RocketChat.models.Rooms.findOneById(rid);                                                                 // 12
                                                                                                                       //
		if (!room) {                                                                                                         // 14
			throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                      // 15
				method: 'eraseRoom'                                                                                                // 16
			});                                                                                                                 // 15
		}                                                                                                                    // 18
                                                                                                                       //
		if (RocketChat.authz.hasPermission(fromId, "delete-" + room.t, rid)) {                                               // 20
			RocketChat.models.Messages.removeByRoomId(rid);                                                                     // 21
			RocketChat.models.Subscriptions.removeByRoomId(rid);                                                                // 22
			return RocketChat.models.Rooms.removeById(rid);                                                                     // 23
		} else {                                                                                                             // 24
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 25
				method: 'eraseRoom'                                                                                                // 26
			});                                                                                                                 // 25
		}                                                                                                                    // 28
	}                                                                                                                     // 29
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"getAvatarSuggestion.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/getAvatarSuggestion.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* global Gravatar */function getAvatarSuggestionForUser(user) {                                                       // 1
	check(user, Object);                                                                                                  // 4
	var avatars = [];                                                                                                     // 6
                                                                                                                       //
	if (user.services.facebook && user.services.facebook.id && RocketChat.settings.get('Accounts_OAuth_Facebook')) {      // 8
		avatars.push({                                                                                                       // 9
			service: 'facebook',                                                                                                // 10
			url: 'https://graph.facebook.com/' + user.services.facebook.id + '/picture?type=large'                              // 11
		});                                                                                                                  // 9
	}                                                                                                                     // 13
                                                                                                                       //
	if (user.services.google && user.services.google.picture && user.services.google.picture !== 'https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg' && RocketChat.settings.get('Accounts_OAuth_Google')) {
		avatars.push({                                                                                                       // 16
			service: 'google',                                                                                                  // 17
			url: user.services.google.picture                                                                                   // 18
		});                                                                                                                  // 16
	}                                                                                                                     // 20
                                                                                                                       //
	if (user.services.github && user.services.github.username && RocketChat.settings.get('Accounts_OAuth_Github')) {      // 22
		avatars.push({                                                                                                       // 23
			service: 'github',                                                                                                  // 24
			url: 'https://avatars.githubusercontent.com/' + user.services.github.username + '?s=200'                            // 25
		});                                                                                                                  // 23
	}                                                                                                                     // 27
                                                                                                                       //
	if (user.services.linkedin && user.services.linkedin.pictureUrl && RocketChat.settings.get('Accounts_OAuth_Linkedin')) {
		avatars.push({                                                                                                       // 30
			service: 'linkedin',                                                                                                // 31
			url: user.services.linkedin.pictureUrl                                                                              // 32
		});                                                                                                                  // 30
	}                                                                                                                     // 34
                                                                                                                       //
	if (user.services.twitter && user.services.twitter.profile_image_url_https && RocketChat.settings.get('Accounts_OAuth_Twitter')) {
		avatars.push({                                                                                                       // 37
			service: 'twitter',                                                                                                 // 38
			url: user.services.twitter.profile_image_url_https.replace(/_normal|_bigger/, '')                                   // 39
		});                                                                                                                  // 37
	}                                                                                                                     // 41
                                                                                                                       //
	if (user.services.gitlab && user.services.gitlab.avatar_url && RocketChat.settings.get('Accounts_OAuth_Gitlab')) {    // 43
		avatars.push({                                                                                                       // 44
			service: 'gitlab',                                                                                                  // 45
			url: user.services.gitlab.avatar_url                                                                                // 46
		});                                                                                                                  // 44
	}                                                                                                                     // 48
                                                                                                                       //
	if (user.services.sandstorm && user.services.sandstorm.picture && Meteor.settings['public'].sandstorm) {              // 50
		avatars.push({                                                                                                       // 51
			service: 'sandstorm',                                                                                               // 52
			url: user.services.sandstorm.picture                                                                                // 53
		});                                                                                                                  // 51
	}                                                                                                                     // 55
                                                                                                                       //
	if (user.emails && user.emails.length > 0) {                                                                          // 57
		for (var _iterator = user.emails, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 58
                                                                                                                       //
			if (_isArray) {                                                                                                     // 58
				if (_i >= _iterator.length) break;                                                                                 // 58
				_ref = _iterator[_i++];                                                                                            // 58
			} else {                                                                                                            // 58
				_i = _iterator.next();                                                                                             // 58
				if (_i.done) break;                                                                                                // 58
				_ref = _i.value;                                                                                                   // 58
			}                                                                                                                   // 58
                                                                                                                       //
			var email = _ref;                                                                                                   // 58
                                                                                                                       //
			if (email.verified === true) {                                                                                      // 59
				avatars.push({                                                                                                     // 60
					service: 'gravatar',                                                                                              // 61
					url: Gravatar.imageUrl(email.address, {                                                                           // 62
						'default': '404',                                                                                                // 63
						size: 200,                                                                                                       // 64
						secure: true                                                                                                     // 65
					})                                                                                                                // 62
				});                                                                                                                // 60
			}                                                                                                                   // 68
                                                                                                                       //
			if (email.verified !== true) {                                                                                      // 70
				avatars.push({                                                                                                     // 71
					service: 'gravatar',                                                                                              // 72
					url: Gravatar.imageUrl(email.address, {                                                                           // 73
						'default': '404',                                                                                                // 74
						size: 200,                                                                                                       // 75
						secure: true                                                                                                     // 76
					})                                                                                                                // 73
				});                                                                                                                // 71
			}                                                                                                                   // 79
		}                                                                                                                    // 80
	}                                                                                                                     // 81
                                                                                                                       //
	var validAvatars = {};                                                                                                // 83
                                                                                                                       //
	for (var _iterator2 = avatars, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
		var _ref2;                                                                                                           // 84
                                                                                                                       //
		if (_isArray2) {                                                                                                     // 84
			if (_i2 >= _iterator2.length) break;                                                                                // 84
			_ref2 = _iterator2[_i2++];                                                                                          // 84
		} else {                                                                                                             // 84
			_i2 = _iterator2.next();                                                                                            // 84
			if (_i2.done) break;                                                                                                // 84
			_ref2 = _i2.value;                                                                                                  // 84
		}                                                                                                                    // 84
                                                                                                                       //
		var avatar = _ref2;                                                                                                  // 84
                                                                                                                       //
		try {                                                                                                                // 85
			var result = HTTP.get(avatar.url, {                                                                                 // 86
				npmRequestOptions: {                                                                                               // 87
					encoding: 'binary'                                                                                                // 88
				}                                                                                                                  // 87
			});                                                                                                                 // 86
                                                                                                                       //
			if (result.statusCode === 200) {                                                                                    // 92
				var blob = 'data:' + result.headers['content-type'] + ';base64,';                                                  // 93
				blob += Buffer.from(result.content, 'binary').toString('base64');                                                  // 94
				avatar.blob = blob;                                                                                                // 95
				avatar.contentType = result.headers['content-type'];                                                               // 96
				validAvatars[avatar.service] = avatar;                                                                             // 97
			}                                                                                                                   // 98
		} catch (error) {// error;                                                                                           // 99
		}                                                                                                                    // 101
	}                                                                                                                     // 102
                                                                                                                       //
	return validAvatars;                                                                                                  // 103
}                                                                                                                      // 104
                                                                                                                       //
this.getAvatarSuggestionForUser = getAvatarSuggestionForUser;                                                          // 106
Meteor.methods({                                                                                                       // 108
	getAvatarSuggestion: function () {                                                                                    // 109
		if (!Meteor.userId()) {                                                                                              // 110
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 111
				method: 'getAvatarSuggestion'                                                                                      // 112
			});                                                                                                                 // 111
		}                                                                                                                    // 114
                                                                                                                       //
		this.unblock();                                                                                                      // 116
		var user = Meteor.user();                                                                                            // 118
		return getAvatarSuggestionForUser(user);                                                                             // 120
	}                                                                                                                     // 121
});                                                                                                                    // 108
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"getRoomIdByNameOrId.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/getRoomIdByNameOrId.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	getRoomIdByNameOrId: function (rid) {                                                                                 // 2
		check(rid, String);                                                                                                  // 3
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 5
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 6
				method: 'getRoomIdByNameOrId'                                                                                      // 7
			});                                                                                                                 // 6
		}                                                                                                                    // 9
                                                                                                                       //
		var room = RocketChat.models.Rooms.findOneById(rid) || RocketChat.models.Rooms.findOneByName(rid);                   // 11
                                                                                                                       //
		if (room == null) {                                                                                                  // 13
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 14
				method: 'getRoomIdByNameOrId'                                                                                      // 15
			});                                                                                                                 // 14
		}                                                                                                                    // 17
                                                                                                                       //
		var user = Meteor.user();                                                                                            // 19
                                                                                                                       //
		if (user && user.username && room.usernames.indexOf(user.username) !== -1) {                                         // 20
			return room._id;                                                                                                    // 21
		}                                                                                                                    // 22
                                                                                                                       //
		if (room.t !== 'c' || RocketChat.authz.hasPermission(Meteor.userId(), 'view-c-room') !== true) {                     // 24
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 25
				method: 'getRoomIdByNameOrId'                                                                                      // 26
			});                                                                                                                 // 25
		}                                                                                                                    // 28
                                                                                                                       //
		return room._id;                                                                                                     // 30
	}                                                                                                                     // 31
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"getTotalChannels.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/getTotalChannels.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	getTotalChannels: function () {                                                                                       // 2
		if (!Meteor.userId()) {                                                                                              // 3
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 4
				method: 'getTotalChannels'                                                                                         // 5
			});                                                                                                                 // 4
		}                                                                                                                    // 7
                                                                                                                       //
		var query = {                                                                                                        // 9
			t: 'c'                                                                                                              // 10
		};                                                                                                                   // 9
		return RocketChat.models.Rooms.find(query).count();                                                                  // 12
	}                                                                                                                     // 13
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"getUsernameSuggestion.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/getUsernameSuggestion.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* global slugify */function slug(text) {                                                                              // 1
	text = slugify(text, '.');                                                                                            // 4
	return text.replace(/[^0-9a-z-_.]/g, '');                                                                             // 5
}                                                                                                                      // 6
                                                                                                                       //
function usernameIsAvaliable(username) {                                                                               // 8
	if (username.length < 1) {                                                                                            // 9
		return false;                                                                                                        // 10
	}                                                                                                                     // 11
                                                                                                                       //
	if (username === 'all') {                                                                                             // 13
		return false;                                                                                                        // 14
	}                                                                                                                     // 15
                                                                                                                       //
	return !RocketChat.models.Users.findOneByUsername({                                                                   // 17
		$regex: new RegExp("^" + username + "$", 'i')                                                                        // 18
	});                                                                                                                   // 17
}                                                                                                                      // 20
                                                                                                                       //
function generateSuggestion(user) {                                                                                    // 22
	var usernames = [];                                                                                                   // 23
	var username = undefined;                                                                                             // 24
                                                                                                                       //
	if (Meteor.settings['public'].sandstorm) {                                                                            // 26
		usernames.push(user.services.sandstorm.preferredHandle);                                                             // 27
	}                                                                                                                     // 28
                                                                                                                       //
	if (Match.test(user && user.name, String)) {                                                                          // 30
		if (RocketChat.settings.get('UTF8_Names_Slugify')) {                                                                 // 31
			usernames.push(slug(user.name));                                                                                    // 32
		} else {                                                                                                             // 33
			usernames.push(user.name);                                                                                          // 34
		}                                                                                                                    // 35
                                                                                                                       //
		var nameParts = user.name.split(' ');                                                                                // 37
                                                                                                                       //
		if (nameParts.length > 1) {                                                                                          // 39
			var first = nameParts[0];                                                                                           // 40
			var last = nameParts[nameParts.length - 1];                                                                         // 41
                                                                                                                       //
			if (RocketChat.settings.get('UTF8_Names_Slugify')) {                                                                // 43
				usernames.push(slug(first[0] + last));                                                                             // 44
				usernames.push(slug(first + last[0]));                                                                             // 45
			} else {                                                                                                            // 46
				usernames.push(first[0] + last);                                                                                   // 47
				usernames.push(first + last[0]);                                                                                   // 48
			}                                                                                                                   // 49
		}                                                                                                                    // 50
	}                                                                                                                     // 51
                                                                                                                       //
	if (user.profile && user.profile.name) {                                                                              // 53
		if (RocketChat.settings.get('UTF8_Names_Slugify')) {                                                                 // 54
			usernames.push(slug(user.profile.name));                                                                            // 55
		} else {                                                                                                             // 56
			usernames.push(user.profile.name);                                                                                  // 57
		}                                                                                                                    // 58
	}                                                                                                                     // 59
                                                                                                                       //
	if (Array.isArray(user.services)) {                                                                                   // 61
		var services = user.services.map(function (service) {                                                                // 62
			return _.values(_.pick(service, 'name', 'username', 'firstName', 'lastName'));                                      // 63
		});                                                                                                                  // 64
		services = _.uniq(_.flatten(services));                                                                              // 66
                                                                                                                       //
		for (var _iterator = services, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 68
                                                                                                                       //
			if (_isArray) {                                                                                                     // 68
				if (_i >= _iterator.length) break;                                                                                 // 68
				_ref = _iterator[_i++];                                                                                            // 68
			} else {                                                                                                            // 68
				_i = _iterator.next();                                                                                             // 68
				if (_i.done) break;                                                                                                // 68
				_ref = _i.value;                                                                                                   // 68
			}                                                                                                                   // 68
                                                                                                                       //
			var service = _ref;                                                                                                 // 68
                                                                                                                       //
			if (RocketChat.settings.get('UTF8_Names_Slugify')) {                                                                // 69
				usernames.push(slug(service));                                                                                     // 70
			} else {                                                                                                            // 71
				usernames.push(service);                                                                                           // 72
			}                                                                                                                   // 73
		}                                                                                                                    // 74
	}                                                                                                                     // 75
                                                                                                                       //
	if (user.emails && user.emails.length > 0) {                                                                          // 77
		for (var _iterator2 = user.emails, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
			var _ref2;                                                                                                          // 78
                                                                                                                       //
			if (_isArray2) {                                                                                                    // 78
				if (_i2 >= _iterator2.length) break;                                                                               // 78
				_ref2 = _iterator2[_i2++];                                                                                         // 78
			} else {                                                                                                            // 78
				_i2 = _iterator2.next();                                                                                           // 78
				if (_i2.done) break;                                                                                               // 78
				_ref2 = _i2.value;                                                                                                 // 78
			}                                                                                                                   // 78
                                                                                                                       //
			var email = _ref2;                                                                                                  // 78
                                                                                                                       //
			if (email.address && email.verified === true) {                                                                     // 79
				usernames.push(slug(email.address.replace(/@.+$/, '')));                                                           // 80
				usernames.push(slug(email.address.replace(/(.+)@(\w+).+/, '$1.$2')));                                              // 81
			}                                                                                                                   // 82
		}                                                                                                                    // 83
	}                                                                                                                     // 84
                                                                                                                       //
	usernames = _.compact(usernames);                                                                                     // 86
                                                                                                                       //
	for (var _iterator3 = usernames, _isArray3 = Array.isArray(_iterator3), _i3 = 0, _iterator3 = _isArray3 ? _iterator3 : _iterator3[Symbol.iterator]();;) {
		var _ref3;                                                                                                           // 88
                                                                                                                       //
		if (_isArray3) {                                                                                                     // 88
			if (_i3 >= _iterator3.length) break;                                                                                // 88
			_ref3 = _iterator3[_i3++];                                                                                          // 88
		} else {                                                                                                             // 88
			_i3 = _iterator3.next();                                                                                            // 88
			if (_i3.done) break;                                                                                                // 88
			_ref3 = _i3.value;                                                                                                  // 88
		}                                                                                                                    // 88
                                                                                                                       //
		var item = _ref3;                                                                                                    // 88
                                                                                                                       //
		if (usernameIsAvaliable(item)) {                                                                                     // 89
			return item;                                                                                                        // 90
		}                                                                                                                    // 91
	}                                                                                                                     // 92
                                                                                                                       //
	if (usernames.length === 0 || usernames[0].length === 0) {                                                            // 94
		usernames.push('user');                                                                                              // 95
	}                                                                                                                     // 96
                                                                                                                       //
	var index = 0;                                                                                                        // 98
                                                                                                                       //
	while (!username) {                                                                                                   // 99
		index++;                                                                                                             // 100
                                                                                                                       //
		if (usernameIsAvaliable(usernames[0] + "-" + index)) {                                                               // 101
			username = usernames[0] + "-" + index;                                                                              // 102
		}                                                                                                                    // 103
	}                                                                                                                     // 104
                                                                                                                       //
	if (usernameIsAvaliable(username)) {                                                                                  // 106
		return username;                                                                                                     // 107
	}                                                                                                                     // 108
}                                                                                                                      // 109
                                                                                                                       //
RocketChat.generateUsernameSuggestion = generateSuggestion;                                                            // 111
Meteor.methods({                                                                                                       // 113
	getUsernameSuggestion: function () {                                                                                  // 114
		if (!Meteor.userId()) {                                                                                              // 115
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 116
				method: 'getUsernameSuggestion'                                                                                    // 117
			});                                                                                                                 // 116
		}                                                                                                                    // 119
                                                                                                                       //
		var user = Meteor.user();                                                                                            // 121
		return generateSuggestion(user);                                                                                     // 123
	}                                                                                                                     // 124
});                                                                                                                    // 113
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"getUsersOfRoom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/getUsersOfRoom.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	getUsersOfRoom: function (roomId, showAll) {                                                                          // 2
		if (!Meteor.userId()) {                                                                                              // 3
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 4
				method: 'getUsersOfRoom'                                                                                           // 4
			});                                                                                                                 // 4
		}                                                                                                                    // 5
                                                                                                                       //
		var room = Meteor.call('canAccessRoom', roomId, Meteor.userId());                                                    // 7
                                                                                                                       //
		if (!room) {                                                                                                         // 8
			throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                      // 9
				method: 'getUsersOfRoom'                                                                                           // 9
			});                                                                                                                 // 9
		}                                                                                                                    // 10
                                                                                                                       //
		var filter = function (record) {                                                                                     // 12
			if (!record._user) {                                                                                                // 13
				console.log('Subscription without user', record._id);                                                              // 14
				return false;                                                                                                      // 15
			}                                                                                                                   // 16
                                                                                                                       //
			if (showAll === true) {                                                                                             // 18
				return true;                                                                                                       // 19
			}                                                                                                                   // 20
                                                                                                                       //
			return record._user.status !== 'offline';                                                                           // 22
		};                                                                                                                   // 23
                                                                                                                       //
		var map = function (record) {                                                                                        // 25
			return record._user.username;                                                                                       // 26
		};                                                                                                                   // 27
                                                                                                                       //
		var records = RocketChat.models.Subscriptions.findByRoomId(roomId).fetch();                                          // 29
		return {                                                                                                             // 31
			total: records.length,                                                                                              // 32
			records: records.filter(filter).map(map)                                                                            // 33
		};                                                                                                                   // 31
	}                                                                                                                     // 35
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"groupsList.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/groupsList.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	groupsList: function (nameFilter, limit, sort) {                                                                      // 2
		check(nameFilter, Match.Optional(String));                                                                           // 4
		check(limit, Match.Optional(Number));                                                                                // 5
		check(sort, Match.Optional(String));                                                                                 // 6
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 8
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 9
				method: 'groupsList'                                                                                               // 9
			});                                                                                                                 // 9
		}                                                                                                                    // 10
                                                                                                                       //
		var options = {                                                                                                      // 12
			fields: {                                                                                                           // 13
				name: 1                                                                                                            // 13
			},                                                                                                                  // 13
			sort: {                                                                                                             // 14
				name: 1                                                                                                            // 14
			}                                                                                                                   // 14
		}; //Verify the limit param is a number                                                                              // 12
                                                                                                                       //
		if (_.isNumber(limit)) {                                                                                             // 18
			options.limit = limit;                                                                                              // 19
		} //Verify there is a sort option and it's a string                                                                  // 20
                                                                                                                       //
                                                                                                                       //
		if (_.trim(sort)) {                                                                                                  // 23
			switch (sort) {                                                                                                     // 24
				case 'name':                                                                                                       // 25
					options.sort = {                                                                                                  // 26
						name: 1                                                                                                          // 26
					};                                                                                                                // 26
					break;                                                                                                            // 27
                                                                                                                       //
				case 'msgs':                                                                                                       // 28
					options.sort = {                                                                                                  // 29
						msgs: -1                                                                                                         // 29
					};                                                                                                                // 29
					break;                                                                                                            // 30
			}                                                                                                                   // 24
		} //Determine if they are searching or not, base it upon the name field                                              // 32
                                                                                                                       //
                                                                                                                       //
		if (nameFilter) {                                                                                                    // 35
			return {                                                                                                            // 36
				groups: RocketChat.models.Rooms.findByTypeAndNameContainingUsername('p', new RegExp(s.trim(s.escapeRegExp(nameFilter)), 'i'), Meteor.user().username, options).fetch()
			};                                                                                                                  // 36
		} else {                                                                                                             // 37
			var roomIds = _.pluck(RocketChat.models.Subscriptions.findByTypeAndUserId('p', Meteor.userId()).fetch(), 'rid');    // 38
                                                                                                                       //
			return {                                                                                                            // 39
				groups: RocketChat.models.Rooms.findByIds(roomIds, options).fetch()                                                // 39
			};                                                                                                                  // 39
		}                                                                                                                    // 40
	}                                                                                                                     // 41
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"hideRoom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/hideRoom.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	hideRoom: function (rid) {                                                                                            // 2
		check(rid, String);                                                                                                  // 3
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 5
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 6
				method: 'hideRoom'                                                                                                 // 7
			});                                                                                                                 // 6
		}                                                                                                                    // 9
                                                                                                                       //
		return RocketChat.models.Subscriptions.hideByRoomIdAndUserId(rid, Meteor.userId());                                  // 11
	}                                                                                                                     // 12
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loadHistory.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/loadHistory.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var hideMessagesOfType = [];                                                                                           // 1
RocketChat.settings.get(/Message_HideType_.+/, function (key, value) {                                                 // 3
	var type = key.replace('Message_HideType_', '');                                                                      // 4
	var types = type === 'mute_unmute' ? ['user-muted', 'user-unmuted'] : [type];                                         // 5
	return types.forEach(function (type) {                                                                                // 7
		var index = hideMessagesOfType.indexOf(type);                                                                        // 8
                                                                                                                       //
		if (value === true && index === -1) {                                                                                // 10
			return hideMessagesOfType.push(type);                                                                               // 11
		}                                                                                                                    // 12
                                                                                                                       //
		if (index > -1) {                                                                                                    // 14
			return hideMessagesOfType.splice(index, 1);                                                                         // 15
		}                                                                                                                    // 16
	});                                                                                                                   // 17
});                                                                                                                    // 18
Meteor.methods({                                                                                                       // 20
	loadHistory: function (rid, end) {                                                                                    // 21
		var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;                                  // 21
		var ls = arguments[3];                                                                                               // 21
		check(rid, String);                                                                                                  // 22
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 24
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 25
				method: 'loadHistory'                                                                                              // 26
			});                                                                                                                 // 25
		}                                                                                                                    // 28
                                                                                                                       //
		var fromId = Meteor.userId();                                                                                        // 30
		var room = Meteor.call('canAccessRoom', rid, fromId);                                                                // 31
                                                                                                                       //
		if (!room) {                                                                                                         // 33
			return false;                                                                                                       // 34
		}                                                                                                                    // 35
                                                                                                                       //
		if (room.t === 'c' && !RocketChat.authz.hasPermission(fromId, 'preview-c-room') && room.usernames.indexOf(room.username) === -1) {
			return false;                                                                                                       // 38
		}                                                                                                                    // 39
                                                                                                                       //
		var options = {                                                                                                      // 41
			sort: {                                                                                                             // 42
				ts: -1                                                                                                             // 43
			},                                                                                                                  // 42
			limit: limit                                                                                                        // 45
		};                                                                                                                   // 41
                                                                                                                       //
		if (!RocketChat.settings.get('Message_ShowEditedStatus')) {                                                          // 48
			options.fields = {                                                                                                  // 49
				editedAt: 0                                                                                                        // 50
			};                                                                                                                  // 49
		}                                                                                                                    // 52
                                                                                                                       //
		var records = void 0;                                                                                                // 54
                                                                                                                       //
		if (end != null) {                                                                                                   // 55
			records = RocketChat.models.Messages.findVisibleByRoomIdBeforeTimestampNotContainingTypes(rid, end, hideMessagesOfType, options).fetch();
		} else {                                                                                                             // 57
			records = RocketChat.models.Messages.findVisibleByRoomIdNotContainingTypes(rid, hideMessagesOfType, options).fetch();
		}                                                                                                                    // 59
                                                                                                                       //
		var messages = records.map(function (message) {                                                                      // 61
			message.starred = _.findWhere(message.starred, {                                                                    // 62
				_id: fromId                                                                                                        // 63
			});                                                                                                                 // 62
			return message;                                                                                                     // 65
		});                                                                                                                  // 66
		var unreadNotLoaded = 0;                                                                                             // 68
		var firstUnread = void 0;                                                                                            // 69
                                                                                                                       //
		if (ls != null) {                                                                                                    // 71
			var firstMessage = messages[messages.length - 1];                                                                   // 72
                                                                                                                       //
			if ((firstMessage != null ? firstMessage.ts : void 0) > ls) {                                                       // 74
				delete options.limit;                                                                                              // 75
				var unreadMessages = RocketChat.models.Messages.findVisibleByRoomIdBetweenTimestampsNotContainingTypes(rid, ls, firstMessage.ts, hideMessagesOfType, {
					limit: 1,                                                                                                         // 78
					sort: {                                                                                                           // 79
						ts: 1                                                                                                            // 80
					}                                                                                                                 // 79
				});                                                                                                                // 77
				firstUnread = unreadMessages.fetch()[0];                                                                           // 84
				unreadNotLoaded = unreadMessages.count();                                                                          // 85
			}                                                                                                                   // 86
		}                                                                                                                    // 87
                                                                                                                       //
		return {                                                                                                             // 89
			messages: messages,                                                                                                 // 90
			firstUnread: firstUnread,                                                                                           // 91
			unreadNotLoaded: unreadNotLoaded                                                                                    // 92
		};                                                                                                                   // 89
	}                                                                                                                     // 94
});                                                                                                                    // 20
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loadLocale.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/loadLocale.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	loadLocale: function (locale) {                                                                                       // 2
		check(locale, String);                                                                                               // 3
                                                                                                                       //
		try {                                                                                                                // 5
			return Assets.getText("moment-locales/" + locale.toLowerCase() + ".js");                                            // 6
		} catch (error) {                                                                                                    // 7
			return console.log(error);                                                                                          // 8
		}                                                                                                                    // 9
	}                                                                                                                     // 10
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loadMissedMessages.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/loadMissedMessages.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	loadMissedMessages: function (rid, start) {                                                                           // 2
		check(rid, String);                                                                                                  // 3
		check(start, Date);                                                                                                  // 4
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'loadMissedMessages'                                                                                       // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		var fromId = Meteor.userId();                                                                                        // 12
                                                                                                                       //
		if (!Meteor.call('canAccessRoom', rid, fromId)) {                                                                    // 13
			return false;                                                                                                       // 14
		}                                                                                                                    // 15
                                                                                                                       //
		var options = {                                                                                                      // 17
			sort: {                                                                                                             // 18
				ts: -1                                                                                                             // 19
			}                                                                                                                   // 18
		};                                                                                                                   // 17
                                                                                                                       //
		if (!RocketChat.settings.get('Message_ShowEditedStatus')) {                                                          // 23
			options.fields = {                                                                                                  // 24
				'editedAt': 0                                                                                                      // 25
			};                                                                                                                  // 24
		}                                                                                                                    // 27
                                                                                                                       //
		return RocketChat.models.Messages.findVisibleByRoomIdAfterTimestamp(rid, start, options).fetch();                    // 29
	}                                                                                                                     // 30
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loadNextMessages.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/loadNextMessages.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	loadNextMessages: function (rid, end) {                                                                               // 2
		var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 20;                                  // 2
		check(rid, String);                                                                                                  // 3
		check(limit, Number);                                                                                                // 4
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'loadNextMessages'                                                                                         // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		var fromId = Meteor.userId();                                                                                        // 12
                                                                                                                       //
		if (!Meteor.call('canAccessRoom', rid, fromId)) {                                                                    // 14
			return false;                                                                                                       // 15
		}                                                                                                                    // 16
                                                                                                                       //
		var options = {                                                                                                      // 18
			sort: {                                                                                                             // 19
				ts: 1                                                                                                              // 20
			},                                                                                                                  // 19
			limit: limit                                                                                                        // 22
		};                                                                                                                   // 18
                                                                                                                       //
		if (!RocketChat.settings.get('Message_ShowEditedStatus')) {                                                          // 25
			options.fields = {                                                                                                  // 26
				editedAt: 0                                                                                                        // 27
			};                                                                                                                  // 26
		}                                                                                                                    // 29
                                                                                                                       //
		var records = void 0;                                                                                                // 31
                                                                                                                       //
		if (end) {                                                                                                           // 32
			records = RocketChat.models.Messages.findVisibleByRoomIdAfterTimestamp(rid, end, options).fetch();                  // 33
		} else {                                                                                                             // 34
			records = RocketChat.models.Messages.findVisibleByRoomId(rid, options).fetch();                                     // 35
		}                                                                                                                    // 36
                                                                                                                       //
		var messages = records.map(function (message) {                                                                      // 38
			message.starred = _.findWhere(message.starred, {                                                                    // 39
				_id: fromId                                                                                                        // 40
			});                                                                                                                 // 39
			return message;                                                                                                     // 42
		});                                                                                                                  // 43
		return {                                                                                                             // 45
			messages: messages                                                                                                  // 46
		};                                                                                                                   // 45
	}                                                                                                                     // 48
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"loadSurroundingMessages.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/loadSurroundingMessages.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	loadSurroundingMessages: function (message) {                                                                         // 2
		var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;                                  // 2
		check(message, Object);                                                                                              // 3
		check(limit, Number);                                                                                                // 4
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'loadSurroundingMessages'                                                                                  // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		var fromId = Meteor.userId();                                                                                        // 12
                                                                                                                       //
		if (!message._id) {                                                                                                  // 14
			return false;                                                                                                       // 15
		}                                                                                                                    // 16
                                                                                                                       //
		message = RocketChat.models.Messages.findOneById(message._id);                                                       // 18
                                                                                                                       //
		if (!message || !message.rid) {                                                                                      // 20
			return false;                                                                                                       // 21
		}                                                                                                                    // 22
                                                                                                                       //
		if (!Meteor.call('canAccessRoom', message.rid, fromId)) {                                                            // 24
			return false;                                                                                                       // 25
		}                                                                                                                    // 26
                                                                                                                       //
		limit = limit - 1;                                                                                                   // 28
		var options = {                                                                                                      // 30
			sort: {                                                                                                             // 31
				ts: -1                                                                                                             // 32
			},                                                                                                                  // 31
			limit: Math.ceil(limit / 2)                                                                                         // 34
		};                                                                                                                   // 30
                                                                                                                       //
		if (!RocketChat.settings.get('Message_ShowEditedStatus')) {                                                          // 37
			options.fields = {                                                                                                  // 38
				editedAt: 0                                                                                                        // 39
			};                                                                                                                  // 38
		}                                                                                                                    // 41
                                                                                                                       //
		var recordsBefore = RocketChat.models.Messages.findVisibleByRoomIdBeforeTimestamp(message.rid, message.ts, options).fetch();
		var messages = recordsBefore.map(function (message) {                                                                // 45
			message.starred = _.findWhere(message.starred, {                                                                    // 46
				_id: fromId                                                                                                        // 47
			});                                                                                                                 // 46
			return message;                                                                                                     // 49
		});                                                                                                                  // 50
		var moreBefore = messages.length === options.limit;                                                                  // 52
		messages.push(message);                                                                                              // 54
		options.sort = {                                                                                                     // 56
			ts: 1                                                                                                               // 57
		};                                                                                                                   // 56
		options.limit = Math.floor(limit / 2);                                                                               // 60
		var recordsAfter = RocketChat.models.Messages.findVisibleByRoomIdAfterTimestamp(message.rid, message.ts, options).fetch();
		var afterMessages = recordsAfter.map(function (message) {                                                            // 63
			message.starred = _.findWhere(message.starred, {                                                                    // 64
				_id: fromId                                                                                                        // 65
			});                                                                                                                 // 64
			return message;                                                                                                     // 67
		});                                                                                                                  // 68
		var moreAfter = afterMessages.length === options.limit;                                                              // 70
		return {                                                                                                             // 72
			messages: messages.concat(afterMessages),                                                                           // 73
			moreBefore: moreBefore,                                                                                             // 74
			moreAfter: moreAfter                                                                                                // 75
		};                                                                                                                   // 72
	}                                                                                                                     // 77
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"logoutCleanUp.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/logoutCleanUp.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	logoutCleanUp: function (user) {                                                                                      // 2
		check(user, Object);                                                                                                 // 3
		Meteor.defer(function () {                                                                                           // 5
			RocketChat.callbacks.run('afterLogoutCleanUp', user);                                                               // 6
		});                                                                                                                  // 7
	}                                                                                                                     // 8
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"messageSearch.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/messageSearch.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	messageSearch: function (text, rid, limit) {                                                                          // 2
		var from, mention, options, query, r, result, currentUserName, currentUserId, currentUserTimezoneOffset;             // 3
		check(text, String);                                                                                                 // 4
		check(rid, String);                                                                                                  // 5
		check(limit, Match.Optional(Number));                                                                                // 6
		currentUserId = Meteor.userId();                                                                                     // 7
                                                                                                                       //
		if (!currentUserId) {                                                                                                // 8
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 9
				method: 'messageSearch'                                                                                            // 10
			});                                                                                                                 // 9
		}                                                                                                                    // 12
                                                                                                                       //
		currentUserName = Meteor.user().username;                                                                            // 13
		currentUserTimezoneOffset = Meteor.user().utcOffset; // I would place these methods at the bottom of the file for clarity but travis doesn't appreciate that.
		// (no-use-before-define)                                                                                            // 17
                                                                                                                       //
		function filterStarred() {                                                                                           // 19
			query['starred._id'] = currentUserId;                                                                               // 20
			return '';                                                                                                          // 21
		}                                                                                                                    // 22
                                                                                                                       //
		function filterUrl() {                                                                                               // 24
			query['urls.0'] = {                                                                                                 // 25
				$exists: true                                                                                                      // 26
			};                                                                                                                  // 25
			return '';                                                                                                          // 28
		}                                                                                                                    // 29
                                                                                                                       //
		function filterPinned() {                                                                                            // 31
			query.pinned = true;                                                                                                // 32
			return '';                                                                                                          // 33
		}                                                                                                                    // 34
                                                                                                                       //
		function filterLocation() {                                                                                          // 36
			query.location = {                                                                                                  // 37
				$exist: true                                                                                                       // 38
			};                                                                                                                  // 37
			return '';                                                                                                          // 40
		}                                                                                                                    // 41
                                                                                                                       //
		function filterBeforeDate(_, day, month, year) {                                                                     // 43
			month--;                                                                                                            // 44
			var beforeDate = new Date(year, month, day);                                                                        // 45
			beforeDate.setHours(beforeDate.getUTCHours() + beforeDate.getTimezoneOffset() / 60 + currentUserTimezoneOffset);    // 46
			query.ts = {                                                                                                        // 47
				$lte: beforeDate                                                                                                   // 48
			};                                                                                                                  // 47
			return '';                                                                                                          // 50
		}                                                                                                                    // 51
                                                                                                                       //
		function filterAfterDate(_, day, month, year) {                                                                      // 53
			month--;                                                                                                            // 54
			day++;                                                                                                              // 55
			var afterDate = new Date(year, month, day);                                                                         // 56
			afterDate.setUTCHours(afterDate.getUTCHours() + afterDate.getTimezoneOffset() / 60 + currentUserTimezoneOffset);    // 57
                                                                                                                       //
			if (query.ts) {                                                                                                     // 58
				query.ts.$gte = afterDate;                                                                                         // 59
			} else {                                                                                                            // 60
				query.ts = {                                                                                                       // 61
					$gte: afterDate                                                                                                   // 62
				};                                                                                                                 // 61
			}                                                                                                                   // 64
                                                                                                                       //
			return '';                                                                                                          // 65
		}                                                                                                                    // 66
                                                                                                                       //
		function filterOnDate(_, day, month, year) {                                                                         // 68
			month--;                                                                                                            // 69
			var date, dayAfter;                                                                                                 // 70
			date = new Date(year, month, day);                                                                                  // 71
			date.setUTCHours(date.getUTCHours() + date.getTimezoneOffset() / 60 + currentUserTimezoneOffset);                   // 72
			dayAfter = new Date(date);                                                                                          // 73
			dayAfter.setDate(dayAfter.getDate() + 1);                                                                           // 74
			delete query.ts;                                                                                                    // 75
			query.ts = {                                                                                                        // 76
				$gte: date,                                                                                                        // 77
				$lt: dayAfter                                                                                                      // 78
			};                                                                                                                  // 76
			return '';                                                                                                          // 80
		}                                                                                                                    // 81
                                                                                                                       //
		function sortByTimestamp(_, direction) {                                                                             // 83
			if (direction.startsWith('asc')) {                                                                                  // 84
				options.sort.ts = 1;                                                                                               // 85
			} else if (direction.startsWith('desc')) {                                                                          // 86
				options.sort.ts = -1;                                                                                              // 87
			}                                                                                                                   // 88
                                                                                                                       //
			return '';                                                                                                          // 89
		} /*                                                                                                                 // 90
     text = 'from:rodrigo mention:gabriel chat'                                                                        //
     */                                                                                                                //
                                                                                                                       //
		result = {                                                                                                           // 95
			messages: [],                                                                                                       // 96
			users: [],                                                                                                          // 97
			channels: []                                                                                                        // 98
		};                                                                                                                   // 95
		query = {};                                                                                                          // 100
		options = {                                                                                                          // 101
			sort: {                                                                                                             // 102
				ts: -1                                                                                                             // 103
			},                                                                                                                  // 102
			limit: limit || 20                                                                                                  // 105
		}; // Query for senders                                                                                              // 101
                                                                                                                       //
		from = [];                                                                                                           // 109
		text = text.replace(/from:([a-z0-9.-_]+)/ig, function (match, username) {                                            // 110
			if (username === 'me' && !from.includes(currentUserName)) {                                                         // 111
				username = currentUserName;                                                                                        // 112
			}                                                                                                                   // 113
                                                                                                                       //
			from.push(username);                                                                                                // 114
			return '';                                                                                                          // 115
		});                                                                                                                  // 116
                                                                                                                       //
		if (from.length > 0) {                                                                                               // 117
			query['u.username'] = {                                                                                             // 118
				$regex: from.join('|'),                                                                                            // 119
				$options: 'i'                                                                                                      // 120
			};                                                                                                                  // 118
		} // Query for senders                                                                                               // 122
                                                                                                                       //
                                                                                                                       //
		mention = [];                                                                                                        // 124
		text = text.replace(/mention:([a-z0-9.-_]+)/ig, function (match, username) {                                         // 125
			mention.push(username);                                                                                             // 126
			return '';                                                                                                          // 127
		});                                                                                                                  // 128
                                                                                                                       //
		if (mention.length > 0) {                                                                                            // 129
			query['mentions.username'] = {                                                                                      // 130
				$regex: mention.join('|'),                                                                                         // 131
				$options: 'i'                                                                                                      // 132
			};                                                                                                                  // 130
		} // Filter on messages that are starred by the current user.                                                        // 134
                                                                                                                       //
                                                                                                                       //
		text = text.replace(/has:star/g, filterStarred); // Filter on messages that have an url.                             // 136
                                                                                                                       //
		text = text.replace(/has:url|has:link/g, filterUrl); // Filter on pinned messages.                                   // 138
                                                                                                                       //
		text = text.replace(/is:pinned|has:pin/g, filterPinned); // Filter on messages which have a location attached.       // 140
                                                                                                                       //
		text = text.replace(/has:location|has:map/g, filterLocation); // Filtering before/after/on a date                    // 142
		// matches dd-MM-yyyy, dd/MM/yyyy, dd-MM-yyyy, prefixed by before:, after: and on: respectively.                     // 144
		// Example: before:15/09/2016 after: 10-08-2016                                                                      // 145
		// if "on:" is set, "before:" and "after:" are ignored.                                                              // 146
                                                                                                                       //
		text = text.replace(/before:(\d{1,2})[\/\.-](\d{1,2})[\/\.-](\d{4})/g, filterBeforeDate);                            // 147
		text = text.replace(/after:(\d{1,2})[\/\.-](\d{1,2})[\/\.-](\d{4})/g, filterAfterDate);                              // 148
		text = text.replace(/on:(\d{1,2})[\/\.-](\d{1,2})[\/\.-](\d{4})/g, filterOnDate); // Sort order                      // 149
                                                                                                                       //
		text = text.replace(/(?:order|sort):(asc|ascend|ascending|desc|descend|descending)/g, sortByTimestamp); // Query in message text
                                                                                                                       //
		text = text.trim().replace(/\s\s/g, ' ');                                                                            // 154
                                                                                                                       //
		if (text !== '') {                                                                                                   // 155
			if (/^\/.+\/[imxs]*$/.test(text)) {                                                                                 // 156
				r = text.split('/');                                                                                               // 157
				query.msg = {                                                                                                      // 158
					$regex: r[1],                                                                                                     // 159
					$options: r[2]                                                                                                    // 160
				};                                                                                                                 // 158
			} else if (RocketChat.settings.get('Message_AlwaysSearchRegExp')) {                                                 // 162
				query.msg = {                                                                                                      // 163
					$regex: text,                                                                                                     // 164
					$options: 'i'                                                                                                     // 165
				};                                                                                                                 // 163
			} else {                                                                                                            // 167
				query.$text = {                                                                                                    // 168
					$search: text                                                                                                     // 169
				};                                                                                                                 // 168
				options.fields = {                                                                                                 // 171
					score: {                                                                                                          // 172
						$meta: 'textScore'                                                                                               // 173
					}                                                                                                                 // 172
				};                                                                                                                 // 171
			}                                                                                                                   // 176
		}                                                                                                                    // 177
                                                                                                                       //
		if (Object.keys(query).length > 0) {                                                                                 // 178
			query.t = {                                                                                                         // 179
				$ne: 'rm' //hide removed messages (useful when searching for user messages)                                        // 180
                                                                                                                       //
			};                                                                                                                  // 179
			query._hidden = {                                                                                                   // 182
				$ne: true // don't return _hidden messages                                                                         // 183
                                                                                                                       //
			};                                                                                                                  // 182
                                                                                                                       //
			if (rid != null) {                                                                                                  // 185
				query.rid = rid;                                                                                                   // 186
                                                                                                                       //
				if (Meteor.call('canAccessRoom', rid, currentUserId) !== false) {                                                  // 187
					if (!RocketChat.settings.get('Message_ShowEditedStatus')) {                                                       // 188
						options.fields = {                                                                                               // 189
							'editedAt': 0                                                                                                   // 190
						};                                                                                                               // 189
					}                                                                                                                 // 192
                                                                                                                       //
					result.messages = RocketChat.models.Messages.find(query, options).fetch();                                        // 193
				}                                                                                                                  // 194
			}                                                                                                                   // 195
		}                                                                                                                    // 196
                                                                                                                       //
		return result;                                                                                                       // 198
	}                                                                                                                     // 199
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"migrate.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/migrate.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	migrateTo: function (version) {                                                                                       // 2
		check(version, String);                                                                                              // 3
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 5
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 6
				method: 'migrateTo'                                                                                                // 7
			});                                                                                                                 // 6
		}                                                                                                                    // 9
                                                                                                                       //
		var user = Meteor.user();                                                                                            // 11
                                                                                                                       //
		if (!user || RocketChat.authz.hasPermission(user._id, 'run-migration') !== true) {                                   // 13
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 14
				method: 'migrateTo'                                                                                                // 15
			});                                                                                                                 // 14
		}                                                                                                                    // 17
                                                                                                                       //
		this.unblock();                                                                                                      // 19
		RocketChat.Migrations.migrateTo(version);                                                                            // 21
		return version;                                                                                                      // 23
	},                                                                                                                    // 24
	getMigrationVersion: function () {                                                                                    // 26
		if (!Meteor.userId()) {                                                                                              // 27
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 28
				method: 'getMigrationVersion'                                                                                      // 29
			});                                                                                                                 // 28
		}                                                                                                                    // 31
                                                                                                                       //
		return RocketChat.Migrations.getVersion();                                                                           // 33
	}                                                                                                                     // 34
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"muteUserInRoom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/muteUserInRoom.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	muteUserInRoom: function (data) {                                                                                     // 2
		check(data, Match.ObjectIncluding({                                                                                  // 3
			rid: String,                                                                                                        // 4
			username: String                                                                                                    // 5
		}));                                                                                                                 // 3
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 8
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 9
				method: 'muteUserInRoom'                                                                                           // 10
			});                                                                                                                 // 9
		}                                                                                                                    // 12
                                                                                                                       //
		var fromId = Meteor.userId();                                                                                        // 14
                                                                                                                       //
		if (!RocketChat.authz.hasPermission(fromId, 'mute-user', data.rid)) {                                                // 16
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 17
				method: 'muteUserInRoom'                                                                                           // 18
			});                                                                                                                 // 17
		}                                                                                                                    // 20
                                                                                                                       //
		var room = RocketChat.models.Rooms.findOneById(data.rid);                                                            // 22
                                                                                                                       //
		if (!room) {                                                                                                         // 24
			throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                      // 25
				method: 'muteUserInRoom'                                                                                           // 26
			});                                                                                                                 // 25
		}                                                                                                                    // 28
                                                                                                                       //
		if (['c', 'p'].includes(room.t) === false) {                                                                         // 30
			throw new Meteor.Error('error-invalid-room-type', room.t + " is not a valid room type", {                           // 31
				method: 'muteUserInRoom',                                                                                          // 32
				type: room.t                                                                                                       // 33
			});                                                                                                                 // 31
		}                                                                                                                    // 35
                                                                                                                       //
		if (Array.isArray(room.usernames) === false || room.usernames.includes(data.username) === false) {                   // 37
			throw new Meteor.Error('error-user-not-in-room', 'User is not in this room', {                                      // 38
				method: 'muteUserInRoom'                                                                                           // 39
			});                                                                                                                 // 38
		}                                                                                                                    // 41
                                                                                                                       //
		var mutedUser = RocketChat.models.Users.findOneByUsername(data.username);                                            // 43
		RocketChat.models.Rooms.muteUsernameByRoomId(data.rid, mutedUser.username);                                          // 45
		var fromUser = RocketChat.models.Users.findOneById(fromId);                                                          // 47
		RocketChat.models.Messages.createUserMutedWithRoomIdAndUser(data.rid, mutedUser, {                                   // 49
			u: {                                                                                                                // 50
				_id: fromUser._id,                                                                                                 // 51
				username: fromUser.username                                                                                        // 52
			}                                                                                                                   // 50
		});                                                                                                                  // 49
		return true;                                                                                                         // 56
	}                                                                                                                     // 57
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"openRoom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/openRoom.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	openRoom: function (rid) {                                                                                            // 2
		check(rid, String);                                                                                                  // 3
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 5
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 6
				method: 'openRoom'                                                                                                 // 7
			});                                                                                                                 // 6
		}                                                                                                                    // 9
                                                                                                                       //
		return RocketChat.models.Subscriptions.openByRoomIdAndUserId(rid, Meteor.userId());                                  // 11
	}                                                                                                                     // 12
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"readMessages.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/readMessages.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	readMessages: function (rid) {                                                                                        // 2
		check(rid, String);                                                                                                  // 3
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 5
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 6
				method: 'readMessages'                                                                                             // 7
			});                                                                                                                 // 6
		}                                                                                                                    // 9
                                                                                                                       //
		return RocketChat.models.Subscriptions.setAsReadByRoomIdAndUserId(rid, Meteor.userId());                             // 11
	}                                                                                                                     // 12
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"registerUser.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/registerUser.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	registerUser: function (formData) {                                                                                   // 2
		check(formData, Match.ObjectIncluding({                                                                              // 3
			email: String,                                                                                                      // 4
			pass: String,                                                                                                       // 5
			name: String,                                                                                                       // 6
			secretURL: Match.Optional(String)                                                                                   // 7
		}));                                                                                                                 // 3
                                                                                                                       //
		if (RocketChat.settings.get('Accounts_RegistrationForm') === 'Disabled') {                                           // 10
			throw new Meteor.Error('error-user-registration-disabled', 'User registration is disabled', {                       // 11
				method: 'registerUser'                                                                                             // 11
			});                                                                                                                 // 11
		} else if (RocketChat.settings.get('Accounts_RegistrationForm') === 'Secret URL' && (!formData.secretURL || formData.secretURL !== RocketChat.settings.get('Accounts_RegistrationForm_SecretURL'))) {
			throw new Meteor.Error('error-user-registration-secret', 'User registration is only allowed via Secret URL', {      // 13
				method: 'registerUser'                                                                                             // 13
			});                                                                                                                 // 13
		}                                                                                                                    // 14
                                                                                                                       //
		RocketChat.validateEmailDomain(formData.email);                                                                      // 16
		var userData = {                                                                                                     // 18
			email: s.trim(formData.email.toLowerCase()),                                                                        // 19
			password: formData.pass                                                                                             // 20
		}; // Check if user has already been imported and never logged in. If so, set password and let it through            // 18
                                                                                                                       //
		var importedUser = RocketChat.models.Users.findOneByEmailAddress(s.trim(formData.email.toLowerCase()));              // 24
		var userId = void 0;                                                                                                 // 25
                                                                                                                       //
		if (importedUser && importedUser.importIds && importedUser.importIds.length && !importedUser.lastLogin) {            // 26
			Accounts.setPassword(importedUser._id, userData.password);                                                          // 27
			userId = importedUser._id;                                                                                          // 28
		} else {                                                                                                             // 29
			userId = Accounts.createUser(userData);                                                                             // 30
		}                                                                                                                    // 31
                                                                                                                       //
		RocketChat.models.Users.setName(userId, s.trim(formData.name));                                                      // 33
		RocketChat.saveCustomFields(userId, formData);                                                                       // 35
                                                                                                                       //
		try {                                                                                                                // 37
			if (RocketChat.settings.get('Verification_Customized')) {                                                           // 38
				(function () {                                                                                                     // 38
					var subject = RocketChat.placeholders.replace(RocketChat.settings.get('Verification_Email_Subject') || '');       // 39
					var html = RocketChat.placeholders.replace(RocketChat.settings.get('Verification_Email') || '');                  // 40
                                                                                                                       //
					Accounts.emailTemplates.verifyEmail.subject = function () {                                                       // 41
						return subject;                                                                                                  // 41
					};                                                                                                                // 41
                                                                                                                       //
					Accounts.emailTemplates.verifyEmail.html = function (userModel, url) {                                            // 42
						return html.replace(/\[Verification_Url]/g, url);                                                                // 42
					};                                                                                                                // 42
				})();                                                                                                              // 38
			}                                                                                                                   // 43
                                                                                                                       //
			Accounts.sendVerificationEmail(userId, userData.email);                                                             // 45
		} catch (error) {// throw new Meteor.Error 'error-email-send-failed', 'Error trying to send email: ' + error.message, { method: 'registerUser', message: error.message }
		}                                                                                                                    // 48
                                                                                                                       //
		return userId;                                                                                                       // 50
	}                                                                                                                     // 51
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"removeRoomModerator.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/removeRoomModerator.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	removeRoomModerator: function (rid, userId) {                                                                         // 2
		check(rid, String);                                                                                                  // 3
		check(userId, String);                                                                                               // 4
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'removeRoomModerator'                                                                                      // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		if (!RocketChat.authz.hasPermission(Meteor.userId(), 'set-moderator', rid)) {                                        // 12
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 13
				method: 'removeRoomModerator'                                                                                      // 14
			});                                                                                                                 // 13
		}                                                                                                                    // 16
                                                                                                                       //
		var user = RocketChat.models.Users.findOneById(userId);                                                              // 18
                                                                                                                       //
		if (!user || !user.username) {                                                                                       // 20
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 21
				method: 'removeRoomModerator'                                                                                      // 22
			});                                                                                                                 // 21
		}                                                                                                                    // 24
                                                                                                                       //
		var subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, user._id);                          // 26
                                                                                                                       //
		if (!subscription) {                                                                                                 // 28
			throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                      // 29
				method: 'removeRoomModerator'                                                                                      // 30
			});                                                                                                                 // 29
		}                                                                                                                    // 32
                                                                                                                       //
		if (Array.isArray(subscription.roles) === false || subscription.roles.includes('moderator') === false) {             // 34
			throw new Meteor.Error('error-user-not-moderator', 'User is not a moderator', {                                     // 35
				method: 'removeRoomModerator'                                                                                      // 36
			});                                                                                                                 // 35
		}                                                                                                                    // 38
                                                                                                                       //
		RocketChat.models.Subscriptions.removeRoleById(subscription._id, 'moderator');                                       // 40
		var fromUser = RocketChat.models.Users.findOneById(Meteor.userId());                                                 // 42
		RocketChat.models.Messages.createSubscriptionRoleRemovedWithRoomIdAndUser(rid, user, {                               // 44
			u: {                                                                                                                // 45
				_id: fromUser._id,                                                                                                 // 46
				username: fromUser.username                                                                                        // 47
			},                                                                                                                  // 45
			role: 'moderator'                                                                                                   // 49
		});                                                                                                                  // 44
                                                                                                                       //
		if (RocketChat.settings.get('UI_DisplayRoles')) {                                                                    // 52
			RocketChat.Notifications.notifyLogged('roles-change', {                                                             // 53
				type: 'removed',                                                                                                   // 54
				_id: 'moderator',                                                                                                  // 55
				u: {                                                                                                               // 56
					_id: user._id,                                                                                                    // 57
					username: user.username                                                                                           // 58
				},                                                                                                                 // 56
				scope: rid                                                                                                         // 60
			});                                                                                                                 // 53
		}                                                                                                                    // 62
                                                                                                                       //
		return true;                                                                                                         // 64
	}                                                                                                                     // 65
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"removeRoomOwner.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/removeRoomOwner.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	removeRoomOwner: function (rid, userId) {                                                                             // 2
		check(rid, String);                                                                                                  // 3
		check(userId, String);                                                                                               // 4
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'removeRoomOwner'                                                                                          // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		if (!RocketChat.authz.hasPermission(Meteor.userId(), 'set-owner', rid)) {                                            // 12
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 13
				method: 'removeRoomOwner'                                                                                          // 14
			});                                                                                                                 // 13
		}                                                                                                                    // 16
                                                                                                                       //
		var user = RocketChat.models.Users.findOneById(userId);                                                              // 18
                                                                                                                       //
		if (!user || !user.username) {                                                                                       // 19
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 20
				method: 'removeRoomOwner'                                                                                          // 21
			});                                                                                                                 // 20
		}                                                                                                                    // 23
                                                                                                                       //
		var subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, user._id);                          // 25
                                                                                                                       //
		if (!subscription) {                                                                                                 // 27
			throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                      // 28
				method: 'removeRoomOwner'                                                                                          // 29
			});                                                                                                                 // 28
		}                                                                                                                    // 31
                                                                                                                       //
		if (Array.isArray(subscription.roles) === false || subscription.roles.includes('owner') === false) {                 // 33
			throw new Meteor.Error('error-user-not-owner', 'User is not an owner', {                                            // 34
				method: 'removeRoomOwner'                                                                                          // 35
			});                                                                                                                 // 34
		}                                                                                                                    // 37
                                                                                                                       //
		var numOwners = RocketChat.authz.getUsersInRole('owner', rid).count();                                               // 39
                                                                                                                       //
		if (numOwners === 1) {                                                                                               // 41
			throw new Meteor.Error('error-remove-last-owner', 'This is the last owner. Please set a new owner before removing this one.', {
				method: 'removeRoomOwner'                                                                                          // 43
			});                                                                                                                 // 42
		}                                                                                                                    // 45
                                                                                                                       //
		RocketChat.models.Subscriptions.removeRoleById(subscription._id, 'owner');                                           // 47
		var fromUser = RocketChat.models.Users.findOneById(Meteor.userId());                                                 // 49
		RocketChat.models.Messages.createSubscriptionRoleRemovedWithRoomIdAndUser(rid, user, {                               // 51
			u: {                                                                                                                // 52
				_id: fromUser._id,                                                                                                 // 53
				username: fromUser.username                                                                                        // 54
			},                                                                                                                  // 52
			role: 'owner'                                                                                                       // 56
		});                                                                                                                  // 51
                                                                                                                       //
		if (RocketChat.settings.get('UI_DisplayRoles')) {                                                                    // 59
			RocketChat.Notifications.notifyLogged('roles-change', {                                                             // 60
				type: 'removed',                                                                                                   // 61
				_id: 'owner',                                                                                                      // 62
				u: {                                                                                                               // 63
					_id: user._id,                                                                                                    // 64
					username: user.username                                                                                           // 65
				},                                                                                                                 // 63
				scope: rid                                                                                                         // 67
			});                                                                                                                 // 60
		}                                                                                                                    // 69
                                                                                                                       //
		return true;                                                                                                         // 70
	}                                                                                                                     // 71
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"removeUserFromRoom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/removeUserFromRoom.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	removeUserFromRoom: function (data) {                                                                                 // 2
		check(data, Match.ObjectIncluding({                                                                                  // 3
			rid: String,                                                                                                        // 4
			username: String                                                                                                    // 5
		}));                                                                                                                 // 3
		var fromId = Meteor.userId();                                                                                        // 8
                                                                                                                       //
		if (!fromId) {                                                                                                       // 10
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 11
				method: 'removeUserFromRoom'                                                                                       // 12
			});                                                                                                                 // 11
		}                                                                                                                    // 14
                                                                                                                       //
		if (!RocketChat.authz.hasPermission(fromId, 'remove-user', data.rid)) {                                              // 16
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 17
				method: 'removeUserFromRoom'                                                                                       // 18
			});                                                                                                                 // 17
		}                                                                                                                    // 20
                                                                                                                       //
		var room = RocketChat.models.Rooms.findOneById(data.rid);                                                            // 22
                                                                                                                       //
		if (!room || room.t === 'd') {                                                                                       // 24
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 25
				method: 'removeUserFromRoom'                                                                                       // 26
			});                                                                                                                 // 25
		}                                                                                                                    // 28
                                                                                                                       //
		if (Array.isArray(room.usernames) === false || room.usernames.includes(data.username) === false) {                   // 30
			throw new Meteor.Error('error-user-not-in-room', 'User is not in this room', {                                      // 31
				method: 'removeUserFromRoom'                                                                                       // 32
			});                                                                                                                 // 31
		}                                                                                                                    // 34
                                                                                                                       //
		var removedUser = RocketChat.models.Users.findOneByUsername(data.username);                                          // 36
                                                                                                                       //
		if (RocketChat.authz.hasRole(removedUser._id, 'owner', room._id)) {                                                  // 38
			var numOwners = RocketChat.authz.getUsersInRole('owner', room._id).fetch().length;                                  // 39
                                                                                                                       //
			if (numOwners === 1) {                                                                                              // 41
				throw new Meteor.Error('error-you-are-last-owner', 'You are the last owner. Please set new owner before leaving the room.', {
					method: 'removeUserFromRoom'                                                                                      // 43
				});                                                                                                                // 42
			}                                                                                                                   // 45
		}                                                                                                                    // 46
                                                                                                                       //
		RocketChat.models.Rooms.removeUsernameById(data.rid, data.username);                                                 // 48
		RocketChat.models.Subscriptions.removeByRoomIdAndUserId(data.rid, removedUser._id);                                  // 50
                                                                                                                       //
		if (['c', 'p'].includes(room.t) === true) {                                                                          // 52
			RocketChat.authz.removeUserFromRoles(removedUser._id, ['moderator', 'owner'], data.rid);                            // 53
		}                                                                                                                    // 54
                                                                                                                       //
		var fromUser = RocketChat.models.Users.findOneById(fromId);                                                          // 56
		RocketChat.models.Messages.createUserRemovedWithRoomIdAndUser(data.rid, removedUser, {                               // 58
			u: {                                                                                                                // 59
				_id: fromUser._id,                                                                                                 // 60
				username: fromUser.username                                                                                        // 61
			}                                                                                                                   // 59
		});                                                                                                                  // 58
		return true;                                                                                                         // 65
	}                                                                                                                     // 66
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"reportMessage.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/reportMessage.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	reportMessage: function (messageId, description) {                                                                    // 2
		check(messageId, String);                                                                                            // 3
		check(description, String);                                                                                          // 4
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'reportMessage'                                                                                            // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		if (description == null || description.trim() === '') {                                                              // 12
			throw new Meteor.Error('error-invalid-description', 'Invalid description', {                                        // 13
				method: 'reportMessage'                                                                                            // 14
			});                                                                                                                 // 13
		}                                                                                                                    // 16
                                                                                                                       //
		var message = RocketChat.models.Messages.findOneById(messageId);                                                     // 18
                                                                                                                       //
		if (!message) {                                                                                                      // 19
			throw new Meteor.Error('error-invalid-message_id', 'Invalid message id', {                                          // 20
				method: 'reportMessage'                                                                                            // 21
			});                                                                                                                 // 20
		}                                                                                                                    // 23
                                                                                                                       //
		return RocketChat.models.Reports.createWithMessageDescriptionAndUserId(message, description, Meteor.userId());       // 25
	}                                                                                                                     // 26
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"resetAvatar.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/resetAvatar.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	resetAvatar: function () {                                                                                            // 2
		if (!Meteor.userId()) {                                                                                              // 3
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 4
				method: 'resetAvatar'                                                                                              // 5
			});                                                                                                                 // 4
		}                                                                                                                    // 7
                                                                                                                       //
		if (!RocketChat.settings.get('Accounts_AllowUserAvatarChange')) {                                                    // 9
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 10
				method: 'resetAvatar'                                                                                              // 11
			});                                                                                                                 // 10
		}                                                                                                                    // 13
                                                                                                                       //
		var user = Meteor.user();                                                                                            // 15
		RocketChatFileAvatarInstance.deleteFile(user.username + ".jpg");                                                     // 16
		RocketChat.models.Users.unsetAvatarOrigin(user._id);                                                                 // 17
		RocketChat.Notifications.notifyLogged('updateAvatar', {                                                              // 18
			username: user.username                                                                                             // 19
		});                                                                                                                  // 18
	}                                                                                                                     // 21
});                                                                                                                    // 1
DDPRateLimiter.addRule({                                                                                               // 24
	type: 'method',                                                                                                       // 25
	name: 'resetAvatar',                                                                                                  // 26
	userId: function () {                                                                                                 // 27
		return true;                                                                                                         // 28
	}                                                                                                                     // 29
}, 1, 60000);                                                                                                          // 24
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"saveUserPreferences.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/saveUserPreferences.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	saveUserPreferences: function (settings) {                                                                            // 2
		check(settings, Object);                                                                                             // 3
                                                                                                                       //
		if (Meteor.userId()) {                                                                                               // 5
			var preferences = {};                                                                                               // 6
                                                                                                                       //
			if (settings.language != null) {                                                                                    // 8
				RocketChat.models.Users.setLanguage(Meteor.userId(), settings.language);                                           // 9
			}                                                                                                                   // 10
                                                                                                                       //
			if (settings.newRoomNotification) {                                                                                 // 12
				preferences.newRoomNotification = settings.newRoomNotification;                                                    // 13
			}                                                                                                                   // 14
                                                                                                                       //
			if (settings.newMessageNotification) {                                                                              // 16
				preferences.newMessageNotification = settings.newMessageNotification;                                              // 17
			}                                                                                                                   // 18
                                                                                                                       //
			if (settings.useEmojis) {                                                                                           // 20
				preferences.useEmojis = settings.useEmojis === '1' ? true : false;                                                 // 21
			}                                                                                                                   // 22
                                                                                                                       //
			if (settings.convertAsciiEmoji) {                                                                                   // 24
				preferences.convertAsciiEmoji = settings.convertAsciiEmoji === '1' ? true : false;                                 // 25
			}                                                                                                                   // 26
                                                                                                                       //
			if (settings.saveMobileBandwidth) {                                                                                 // 28
				preferences.saveMobileBandwidth = settings.saveMobileBandwidth === '1' ? true : false;                             // 29
			}                                                                                                                   // 30
                                                                                                                       //
			if (settings.collapseMediaByDefault) {                                                                              // 32
				preferences.collapseMediaByDefault = settings.collapseMediaByDefault === '1' ? true : false;                       // 33
			}                                                                                                                   // 34
                                                                                                                       //
			if (settings.unreadRoomsMode) {                                                                                     // 36
				preferences.unreadRoomsMode = settings.unreadRoomsMode === '1' ? true : false;                                     // 37
			}                                                                                                                   // 38
                                                                                                                       //
			if (settings.autoImageLoad) {                                                                                       // 40
				preferences.autoImageLoad = settings.autoImageLoad === '1' ? true : false;                                         // 41
			}                                                                                                                   // 42
                                                                                                                       //
			if (settings.emailNotificationMode) {                                                                               // 44
				preferences.emailNotificationMode = settings.emailNotificationMode;                                                // 45
			}                                                                                                                   // 46
                                                                                                                       //
			if (settings.mergeChannels !== '-1') {                                                                              // 48
				preferences.mergeChannels = settings.mergeChannels === '1';                                                        // 49
			} else {                                                                                                            // 50
				delete preferences.mergeChannels;                                                                                  // 51
			}                                                                                                                   // 52
                                                                                                                       //
			if (settings.unreadAlert) {                                                                                         // 54
				preferences.unreadAlert = settings.unreadAlert === '1' ? true : false;                                             // 55
			}                                                                                                                   // 56
                                                                                                                       //
			preferences.desktopNotificationDuration = settings.desktopNotificationDuration - 0;                                 // 58
			preferences.viewMode = settings.viewMode || 0;                                                                      // 59
			preferences.hideUsernames = settings.hideUsernames === '1';                                                         // 60
			preferences.hideRoles = settings.hideRoles === '1';                                                                 // 61
			preferences.hideAvatars = settings.hideAvatars === '1';                                                             // 62
			preferences.hideFlexTab = settings.hideFlexTab === '1';                                                             // 63
			preferences.highlights = settings.highlights;                                                                       // 64
			preferences.sendOnEnter = settings.sendOnEnter;                                                                     // 65
			RocketChat.models.Users.setPreferences(Meteor.userId(), preferences);                                               // 67
			return true;                                                                                                        // 69
		}                                                                                                                    // 70
	}                                                                                                                     // 71
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"saveUserProfile.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/saveUserProfile.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	saveUserProfile: function (settings, customFields) {                                                                  // 2
		check(settings, Object);                                                                                             // 3
                                                                                                                       //
		if (!RocketChat.settings.get('Accounts_AllowUserProfileChange')) {                                                   // 5
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 6
				method: 'saveUserProfile'                                                                                          // 7
			});                                                                                                                 // 6
		}                                                                                                                    // 9
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 11
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 12
				method: 'saveUserProfile'                                                                                          // 13
			});                                                                                                                 // 12
		}                                                                                                                    // 15
                                                                                                                       //
		var user = RocketChat.models.Users.findOneById(Meteor.userId());                                                     // 17
                                                                                                                       //
		function checkPassword() {                                                                                           // 19
			var user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};                                  // 19
			var currentPassword = arguments[1];                                                                                 // 19
                                                                                                                       //
			if (user.services && user.services.password && user.services.password.bcrypt && user.services.password.bcrypt.trim()) {
				return true;                                                                                                       // 21
			}                                                                                                                   // 22
                                                                                                                       //
			if (!currentPassword) {                                                                                             // 24
				return false;                                                                                                      // 25
			}                                                                                                                   // 26
                                                                                                                       //
			var passCheck = Accounts._checkPassword(user, {                                                                     // 28
				digest: currentPassword,                                                                                           // 29
				algorithm: 'sha-256'                                                                                               // 30
			});                                                                                                                 // 28
                                                                                                                       //
			if (passCheck.error) {                                                                                              // 33
				return false;                                                                                                      // 34
			}                                                                                                                   // 35
                                                                                                                       //
			return true;                                                                                                        // 37
		}                                                                                                                    // 38
                                                                                                                       //
		if (settings.newPassword && RocketChat.settings.get('Accounts_AllowPasswordChange') === true) {                      // 40
			if (!checkPassword(user, settings.currentPassword)) {                                                               // 41
				throw new Meteor.Error('error-invalid-password', 'Invalid password', {                                             // 42
					method: 'saveUserProfile'                                                                                         // 43
				});                                                                                                                // 42
			}                                                                                                                   // 45
                                                                                                                       //
			Accounts.setPassword(Meteor.userId(), settings.newPassword, {                                                       // 47
				logout: false                                                                                                      // 48
			});                                                                                                                 // 47
		}                                                                                                                    // 50
                                                                                                                       //
		if (settings.realname) {                                                                                             // 52
			Meteor.call('setRealName', settings.realname);                                                                      // 53
		}                                                                                                                    // 54
                                                                                                                       //
		if (settings.username) {                                                                                             // 56
			Meteor.call('setUsername', settings.username);                                                                      // 57
		}                                                                                                                    // 58
                                                                                                                       //
		if (settings.email) {                                                                                                // 60
			if (!checkPassword(user, settings.currentPassword)) {                                                               // 61
				throw new Meteor.Error('error-invalid-password', 'Invalid password', {                                             // 62
					method: 'saveUserProfile'                                                                                         // 63
				});                                                                                                                // 62
			}                                                                                                                   // 65
                                                                                                                       //
			Meteor.call('setEmail', settings.email);                                                                            // 67
		}                                                                                                                    // 68
                                                                                                                       //
		RocketChat.models.Users.setProfile(Meteor.userId(), {});                                                             // 70
		RocketChat.saveCustomFields(Meteor.userId(), customFields);                                                          // 72
		return true;                                                                                                         // 74
	}                                                                                                                     // 75
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sendConfirmationEmail.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/sendConfirmationEmail.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	sendConfirmationEmail: function (email) {                                                                             // 2
		check(email, String);                                                                                                // 3
		email = email.trim();                                                                                                // 4
		var user = RocketChat.models.Users.findOneByEmailAddress(email);                                                     // 6
                                                                                                                       //
		if (user) {                                                                                                          // 8
			if (RocketChat.settings.get('Verification_Customized')) {                                                           // 9
				(function () {                                                                                                     // 9
					var subject = RocketChat.placeholders.replace(RocketChat.settings.get('Verification_Email_Subject') || '');       // 10
					var html = RocketChat.placeholders.replace(RocketChat.settings.get('Verification_Email') || '');                  // 11
                                                                                                                       //
					Accounts.emailTemplates.verifyEmail.subject = function () /*userModel*/{                                          // 13
						return subject;                                                                                                  // 14
					};                                                                                                                // 15
                                                                                                                       //
					Accounts.emailTemplates.verifyEmail.html = function (userModel, url) {                                            // 17
						return html.replace(/\[Verification_Url]/g, url);                                                                // 18
					};                                                                                                                // 19
				})();                                                                                                              // 9
			}                                                                                                                   // 20
                                                                                                                       //
			try {                                                                                                               // 22
				Accounts.sendVerificationEmail(user._id, email);                                                                   // 23
			} catch (error) {                                                                                                   // 24
				throw new Meteor.Error('error-email-send-failed', "Error trying to send email: " + error.message, {                // 25
					method: 'registerUser',                                                                                           // 26
					message: error.message                                                                                            // 27
				});                                                                                                                // 25
			}                                                                                                                   // 29
                                                                                                                       //
			return true;                                                                                                        // 31
		}                                                                                                                    // 32
                                                                                                                       //
		return false;                                                                                                        // 34
	}                                                                                                                     // 35
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"sendForgotPasswordEmail.js":["babel-runtime/helpers/typeof",function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/sendForgotPasswordEmail.js                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _typeof2 = require("babel-runtime/helpers/typeof");                                                                //
                                                                                                                       //
var _typeof3 = _interopRequireDefault(_typeof2);                                                                       //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	sendForgotPasswordEmail: function (email) {                                                                           // 2
		check(email, String);                                                                                                // 3
		email = email.trim();                                                                                                // 5
		var user = RocketChat.models.Users.findOneByEmailAddress(email);                                                     // 7
                                                                                                                       //
		if (user) {                                                                                                          // 9
			var _ret = function () {                                                                                            // 9
				var regex = new RegExp("^" + s.escapeRegExp(email) + "$", 'i');                                                    // 10
				email = (user.emails || []).map(function (item) {                                                                  // 11
					return item.address;                                                                                              // 11
				}).find(function (userEmail) {                                                                                     // 11
					return regex.test(userEmail);                                                                                     // 11
				});                                                                                                                // 11
                                                                                                                       //
				if (RocketChat.settings.get('Forgot_Password_Customized')) {                                                       // 13
					(function () {                                                                                                    // 13
						var data = {                                                                                                     // 14
							name: user.name,                                                                                                // 14
							email: email                                                                                                    // 14
						};                                                                                                               // 14
						var subject = RocketChat.placeholders.replace(RocketChat.settings.get('Forgot_Password_Email_Subject') || '', data);
						var html = RocketChat.placeholders.replace(RocketChat.settings.get('Forgot_Password_Email') || '', data);        // 16
                                                                                                                       //
						Accounts.emailTemplates.resetPassword.subject = function () /*userModel*/{                                       // 18
							return subject;                                                                                                 // 19
						};                                                                                                               // 20
                                                                                                                       //
						Accounts.emailTemplates.resetPassword.html = function (userModel, url) {                                         // 22
							url = url.replace('/#/', '/');                                                                                  // 23
							return html.replace(/\[Forgot_Password_Url]/g, url);                                                            // 24
						};                                                                                                               // 25
					})();                                                                                                             // 13
				}                                                                                                                  // 26
                                                                                                                       //
				try {                                                                                                              // 28
					Accounts.sendResetPasswordEmail(user._id, email);                                                                 // 29
				} catch (error) {                                                                                                  // 30
					throw new Meteor.Error('error-email-send-failed', "Error trying to send email: " + error.message, {               // 31
						method: 'registerUser',                                                                                          // 32
						message: error.message                                                                                           // 33
					});                                                                                                               // 31
				}                                                                                                                  // 35
                                                                                                                       //
				return {                                                                                                           // 37
					v: true                                                                                                           // 37
				};                                                                                                                 // 37
			}();                                                                                                                // 9
                                                                                                                       //
			if ((typeof _ret === "undefined" ? "undefined" : (0, _typeof3.default)(_ret)) === "object") return _ret.v;          // 9
		}                                                                                                                    // 38
                                                                                                                       //
		return false;                                                                                                        // 40
	}                                                                                                                     // 41
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"setAvatarFromService.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/setAvatarFromService.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	setAvatarFromService: function (dataURI, contentType, service) {                                                      // 2
		check(dataURI, String);                                                                                              // 3
		check(contentType, Match.Optional(String));                                                                          // 4
		check(service, Match.Optional(String));                                                                              // 5
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 7
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 8
				method: 'setAvatarFromService'                                                                                     // 9
			});                                                                                                                 // 8
		}                                                                                                                    // 11
                                                                                                                       //
		if (!RocketChat.settings.get('Accounts_AllowUserAvatarChange')) {                                                    // 13
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 14
				method: 'setAvatarFromService'                                                                                     // 15
			});                                                                                                                 // 14
		}                                                                                                                    // 17
                                                                                                                       //
		var user = Meteor.user();                                                                                            // 19
		return RocketChat.setUserAvatar(user, dataURI, contentType, service);                                                // 21
	}                                                                                                                     // 22
});                                                                                                                    // 1
DDPRateLimiter.addRule({                                                                                               // 25
	type: 'method',                                                                                                       // 26
	name: 'setAvatarFromService',                                                                                         // 27
	userId: function () {                                                                                                 // 28
		return true;                                                                                                         // 29
	}                                                                                                                     // 30
}, 1, 5000);                                                                                                           // 25
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"setUserActiveStatus.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/setUserActiveStatus.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	setUserActiveStatus: function (userId, active) {                                                                      // 2
		check(userId, String);                                                                                               // 3
		check(active, Boolean);                                                                                              // 4
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'setUserActiveStatus'                                                                                      // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		if (RocketChat.authz.hasPermission(Meteor.userId(), 'edit-other-user-active-status') !== true) {                     // 12
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 13
				method: 'setUserActiveStatus'                                                                                      // 14
			});                                                                                                                 // 13
		}                                                                                                                    // 16
                                                                                                                       //
		var user = RocketChat.models.Users.findOneById(userId);                                                              // 18
                                                                                                                       //
		if (user) {                                                                                                          // 20
			RocketChat.models.Users.setUserActive(userId, active);                                                              // 21
                                                                                                                       //
			if (user.username) {                                                                                                // 23
				RocketChat.models.Subscriptions.setArchivedByUsername(user.username, !active);                                     // 24
			}                                                                                                                   // 25
                                                                                                                       //
			if (active === false) {                                                                                             // 27
				RocketChat.models.Users.unsetLoginTokens(userId);                                                                  // 28
			}                                                                                                                   // 29
                                                                                                                       //
			return true;                                                                                                        // 31
		}                                                                                                                    // 32
                                                                                                                       //
		return false;                                                                                                        // 34
	}                                                                                                                     // 35
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"setUserPassword.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/setUserPassword.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	setUserPassword: function (password) {                                                                                // 2
		check(password, String);                                                                                             // 3
		var userId = Meteor.userId();                                                                                        // 5
                                                                                                                       //
		if (!userId) {                                                                                                       // 7
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 8
				method: 'setUserPassword'                                                                                          // 9
			});                                                                                                                 // 8
		}                                                                                                                    // 11
                                                                                                                       //
		var user = RocketChat.models.Users.findOneById(userId);                                                              // 13
                                                                                                                       //
		if (user && user.requirePasswordChange !== true) {                                                                   // 15
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 16
				method: 'setUserPassword'                                                                                          // 17
			});                                                                                                                 // 16
		}                                                                                                                    // 19
                                                                                                                       //
		Accounts.setPassword(userId, password, {                                                                             // 21
			logout: false                                                                                                       // 22
		});                                                                                                                  // 21
		return RocketChat.models.Users.unsetRequirePasswordChange(userId);                                                   // 25
	}                                                                                                                     // 26
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"toogleFavorite.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/toogleFavorite.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	toggleFavorite: function (rid, f) {                                                                                   // 2
		check(rid, String);                                                                                                  // 3
		check(f, Match.Optional(Boolean));                                                                                   // 5
                                                                                                                       //
		if (!Meteor.userId()) {                                                                                              // 6
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 7
				method: 'toggleFavorite'                                                                                           // 8
			});                                                                                                                 // 7
		}                                                                                                                    // 10
                                                                                                                       //
		return RocketChat.models.Subscriptions.setFavoriteByRoomIdAndUserId(rid, Meteor.userId(), f);                        // 12
	}                                                                                                                     // 13
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"unmuteUserInRoom.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/unmuteUserInRoom.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	unmuteUserInRoom: function (data) {                                                                                   // 2
		var fromId = Meteor.userId();                                                                                        // 3
		check(data, Match.ObjectIncluding({                                                                                  // 5
			rid: String,                                                                                                        // 6
			username: String                                                                                                    // 7
		}));                                                                                                                 // 5
                                                                                                                       //
		if (!RocketChat.authz.hasPermission(fromId, 'mute-user', data.rid)) {                                                // 10
			throw new Meteor.Error('error-not-allowed', 'Not allowed', {                                                        // 11
				method: 'unmuteUserInRoom'                                                                                         // 12
			});                                                                                                                 // 11
		}                                                                                                                    // 14
                                                                                                                       //
		var room = RocketChat.models.Rooms.findOneById(data.rid);                                                            // 16
                                                                                                                       //
		if (!room) {                                                                                                         // 18
			throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                      // 19
				method: 'unmuteUserInRoom'                                                                                         // 20
			});                                                                                                                 // 19
		}                                                                                                                    // 22
                                                                                                                       //
		if (['c', 'p'].includes(room.t) === false) {                                                                         // 24
			throw new Meteor.Error('error-invalid-room-type', room.t + " is not a valid room type", {                           // 25
				method: 'unmuteUserInRoom',                                                                                        // 26
				type: room.t                                                                                                       // 27
			});                                                                                                                 // 25
		}                                                                                                                    // 29
                                                                                                                       //
		if (Array.isArray(room.usernames) === false || room.usernames.includes(data.username) === false) {                   // 31
			throw new Meteor.Error('error-user-not-in-room', 'User is not in this room', {                                      // 32
				method: 'unmuteUserInRoom'                                                                                         // 33
			});                                                                                                                 // 32
		}                                                                                                                    // 35
                                                                                                                       //
		var unmutedUser = RocketChat.models.Users.findOneByUsername(data.username);                                          // 37
		RocketChat.models.Rooms.unmuteUsernameByRoomId(data.rid, unmutedUser.username);                                      // 39
		var fromUser = RocketChat.models.Users.findOneById(fromId);                                                          // 41
		RocketChat.models.Messages.createUserUnmutedWithRoomIdAndUser(data.rid, unmutedUser, {                               // 43
			u: {                                                                                                                // 44
				_id: fromUser._id,                                                                                                 // 45
				username: fromUser.username                                                                                        // 46
			}                                                                                                                   // 44
		});                                                                                                                  // 43
		return true;                                                                                                         // 50
	}                                                                                                                     // 51
});                                                                                                                    // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"userSetUtcOffset.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/userSetUtcOffset.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	userSetUtcOffset: function (utcOffset) {                                                                              // 2
		check(utcOffset, Number);                                                                                            // 3
                                                                                                                       //
		if (this.userId == null) {                                                                                           // 5
			return;                                                                                                             // 6
		}                                                                                                                    // 7
                                                                                                                       //
		this.unblock();                                                                                                      // 9
		return RocketChat.models.Users.setUtcOffset(this.userId, utcOffset);                                                 // 11
	}                                                                                                                     // 12
});                                                                                                                    // 1
DDPRateLimiter.addRule({                                                                                               // 15
	type: 'method',                                                                                                       // 16
	name: 'userSetUtcOffset',                                                                                             // 17
	userId: function () {                                                                                                 // 18
		return true;                                                                                                         // 19
	}                                                                                                                     // 20
}, 1, 60000);                                                                                                          // 15
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"publications":{"activeUsers.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/activeUsers.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('activeUsers', function () {                                                                            // 1
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	return RocketChat.models.Users.findUsersNotOffline({                                                                  // 6
		fields: {                                                                                                            // 7
			username: 1,                                                                                                        // 8
			status: 1,                                                                                                          // 9
			utcOffset: 1                                                                                                        // 10
		}                                                                                                                    // 7
	});                                                                                                                   // 6
});                                                                                                                    // 13
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"channelAndPrivateAutocomplete.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/channelAndPrivateAutocomplete.js                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('channelAndPrivateAutocomplete', function (selector) {                                                  // 1
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	if (RocketChat.authz.hasPermission(this.userId, 'view-other-user-channels') !== true) {                               // 6
		return this.ready();                                                                                                 // 7
	}                                                                                                                     // 8
                                                                                                                       //
	var pub = this;                                                                                                       // 10
	var options = {                                                                                                       // 11
		fields: {                                                                                                            // 12
			_id: 1,                                                                                                             // 13
			name: 1                                                                                                             // 14
		},                                                                                                                   // 12
		limit: 10,                                                                                                           // 16
		sort: {                                                                                                              // 17
			name: 1                                                                                                             // 18
		}                                                                                                                    // 17
	};                                                                                                                    // 11
	var cursorHandle = RocketChat.models.Rooms.findByNameStartingAndTypes(selector.name, ['c', 'p'], options).observeChanges({
		added: function (_id, record) {                                                                                      // 23
			return pub.added('autocompleteRecords', _id, record);                                                               // 24
		},                                                                                                                   // 25
		changed: function (_id, record) {                                                                                    // 26
			return pub.changed('autocompleteRecords', _id, record);                                                             // 27
		},                                                                                                                   // 28
		removed: function (_id, record) {                                                                                    // 29
			return pub.removed('autocompleteRecords', _id, record);                                                             // 30
		}                                                                                                                    // 31
	});                                                                                                                   // 22
	this.ready();                                                                                                         // 34
	this.onStop(function () {                                                                                             // 36
		return cursorHandle.stop();                                                                                          // 37
	});                                                                                                                   // 38
});                                                                                                                    // 39
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"fullUserData.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/fullUserData.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('fullUserData', function (filter, limit) {                                                              // 1
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	var result = RocketChat.getFullUserData({                                                                             // 6
		userId: this.userId,                                                                                                 // 7
		filter: filter,                                                                                                      // 8
		limit: limit                                                                                                         // 9
	});                                                                                                                   // 6
                                                                                                                       //
	if (!result) {                                                                                                        // 12
		return this.ready();                                                                                                 // 13
	}                                                                                                                     // 14
                                                                                                                       //
	return result;                                                                                                        // 16
});                                                                                                                    // 17
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"messages.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/messages.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('messages', function (rid /*, start*/) {                                                                // 1
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	var publication = this;                                                                                               // 6
                                                                                                                       //
	if (typeof rid !== 'string') {                                                                                        // 8
		return this.ready();                                                                                                 // 9
	}                                                                                                                     // 10
                                                                                                                       //
	if (!Meteor.call('canAccessRoom', rid, this.userId)) {                                                                // 12
		return this.ready();                                                                                                 // 13
	}                                                                                                                     // 14
                                                                                                                       //
	var cursor = RocketChat.models.Messages.findVisibleByRoomId(rid, {                                                    // 16
		sort: {                                                                                                              // 17
			ts: -1                                                                                                              // 18
		},                                                                                                                   // 17
		limit: 50                                                                                                            // 20
	});                                                                                                                   // 16
	var cursorHandle = cursor.observeChanges({                                                                            // 23
		added: function (_id, record) {                                                                                      // 24
			record.starred = _.findWhere(record.starred, {                                                                      // 25
				_id: publication.userId                                                                                            // 26
			});                                                                                                                 // 25
			return publication.added('rocketchat_message', _id, record);                                                        // 28
		},                                                                                                                   // 29
		changed: function (_id, record) {                                                                                    // 30
			record.starred = _.findWhere(record.starred, {                                                                      // 31
				_id: publication.userId                                                                                            // 32
			});                                                                                                                 // 31
			return publication.changed('rocketchat_message', _id, record);                                                      // 34
		}                                                                                                                    // 35
	});                                                                                                                   // 23
	var cursorDelete = RocketChat.models.Messages.findInvisibleByRoomId(rid, {                                            // 38
		fields: {                                                                                                            // 39
			_id: 1                                                                                                              // 40
		}                                                                                                                    // 39
	});                                                                                                                   // 38
	var cursorDeleteHandle = cursorDelete.observeChanges({                                                                // 44
		added: function (_id /*, record*/) {                                                                                 // 45
			return publication.added('rocketchat_message', _id, {                                                               // 46
				_hidden: true                                                                                                      // 47
			});                                                                                                                 // 46
		},                                                                                                                   // 49
		changed: function (_id /*, record*/) {                                                                               // 50
			return publication.added('rocketchat_message', _id, {                                                               // 51
				_hidden: true                                                                                                      // 52
			});                                                                                                                 // 51
		}                                                                                                                    // 54
	});                                                                                                                   // 44
	this.ready();                                                                                                         // 57
	return this.onStop(function () {                                                                                      // 59
		cursorHandle.stop();                                                                                                 // 60
		return cursorDeleteHandle.stop();                                                                                    // 61
	});                                                                                                                   // 62
});                                                                                                                    // 63
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"privateHistory.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/privateHistory.js                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('privateHistory', function () {                                                                         // 1
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	return RocketChat.models.Rooms.findByContainingUsername(RocketChat.models.Users.findOneById(this.userId).username, {  // 6
		fields: {                                                                                                            // 7
			t: 1,                                                                                                               // 8
			name: 1,                                                                                                            // 9
			msgs: 1,                                                                                                            // 10
			ts: 1,                                                                                                              // 11
			lm: 1,                                                                                                              // 12
			cl: 1                                                                                                               // 13
		}                                                                                                                    // 7
	});                                                                                                                   // 6
});                                                                                                                    // 16
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"room.js":["babel-runtime/helpers/toConsumableArray",function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/room.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _toConsumableArray2 = require("babel-runtime/helpers/toConsumableArray");                                          //
                                                                                                                       //
var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);                                                 //
                                                                                                                       //
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }                      //
                                                                                                                       //
var options = {                                                                                                        // 1
	fields: {                                                                                                             // 2
		_id: 1,                                                                                                              // 3
		name: 1,                                                                                                             // 4
		t: 1,                                                                                                                // 5
		cl: 1,                                                                                                               // 6
		u: 1,                                                                                                                // 7
		// usernames: 1,                                                                                                     // 8
		topic: 1,                                                                                                            // 9
		muted: 1,                                                                                                            // 10
		archived: 1,                                                                                                         // 11
		jitsiTimeout: 1,                                                                                                     // 12
		description: 1,                                                                                                      // 13
		"default": 1,                                                                                                        // 14
		// @TODO create an API to register this fields based on room type                                                    // 16
		livechatData: 1,                                                                                                     // 17
		tags: 1,                                                                                                             // 18
		sms: 1,                                                                                                              // 19
		code: 1,                                                                                                             // 20
		open: 1,                                                                                                             // 21
		v: 1,                                                                                                                // 22
		label: 1,                                                                                                            // 23
		ro: 1                                                                                                                // 24
	}                                                                                                                     // 2
};                                                                                                                     // 1
                                                                                                                       //
var roomMap = function (record) {                                                                                      // 29
	if (record._room) {                                                                                                   // 30
		var _ref;                                                                                                            // 30
                                                                                                                       //
		return (_ref = _).pick.apply(_ref, [record._room].concat((0, _toConsumableArray3.default)(Object.keys(options.fields))));
	}                                                                                                                     // 32
                                                                                                                       //
	console.log('Empty Room for Subscription', record);                                                                   // 33
	return {};                                                                                                            // 34
};                                                                                                                     // 35
                                                                                                                       //
Meteor.methods({                                                                                                       // 38
	'rooms/get': function (updatedAt) {                                                                                   // 39
		if (!Meteor.userId()) {                                                                                              // 40
			return [];                                                                                                          // 41
		}                                                                                                                    // 42
                                                                                                                       //
		this.unblock();                                                                                                      // 44
                                                                                                                       //
		if (updatedAt instanceof Date) {                                                                                     // 46
			return {                                                                                                            // 47
				update: RocketChat.models.Rooms.findBySubscriptionUserIdUpdatedAfter(Meteor.userId(), updatedAt, options).fetch(),
				remove: RocketChat.models.Rooms.trashFindDeletedAfter(updatedAt, {}, {                                             // 49
					fields: {                                                                                                         // 49
						_id: 1,                                                                                                          // 49
						_deletedAt: 1                                                                                                    // 49
					}                                                                                                                 // 49
				}).fetch()                                                                                                         // 49
			};                                                                                                                  // 47
		}                                                                                                                    // 51
                                                                                                                       //
		return RocketChat.models.Rooms.findBySubscriptionUserId(Meteor.userId(), options).fetch();                           // 53
	},                                                                                                                    // 54
	getRoomByTypeAndName: function (type, name) {                                                                         // 56
		if (!Meteor.userId()) {                                                                                              // 57
			throw new Meteor.Error('error-invalid-user', 'Invalid user', {                                                      // 58
				method: 'getRoomByTypeAndName'                                                                                     // 58
			});                                                                                                                 // 58
		}                                                                                                                    // 59
                                                                                                                       //
		var roomFind = RocketChat.roomTypes.getRoomFind(type);                                                               // 61
		var room = void 0;                                                                                                   // 63
                                                                                                                       //
		if (roomFind) {                                                                                                      // 65
			room = roomFind.call(this, name);                                                                                   // 66
		} else {                                                                                                             // 67
			room = RocketChat.models.Rooms.findByTypeAndName(type, name).fetch();                                               // 68
		}                                                                                                                    // 69
                                                                                                                       //
		if (!room) {                                                                                                         // 71
			throw new Meteor.Error('error-invalid-room', 'Invalid room', {                                                      // 72
				method: 'getRoomByTypeAndName'                                                                                     // 72
			});                                                                                                                 // 72
		}                                                                                                                    // 73
                                                                                                                       //
		if (!Meteor.call('canAccessRoom', room._id, Meteor.userId())) {                                                      // 75
			throw new Meteor.Error('error-no-permission', 'No permission', {                                                    // 76
				method: 'getRoomByTypeAndName'                                                                                     // 76
			});                                                                                                                 // 76
		}                                                                                                                    // 77
                                                                                                                       //
		return roomMap({                                                                                                     // 79
			_room: room                                                                                                         // 79
		});                                                                                                                  // 79
	}                                                                                                                     // 80
});                                                                                                                    // 38
RocketChat.models.Rooms.cache.on('sync', function (type, room /*, diff*/) {                                            // 83
	var records = RocketChat.models.Subscriptions.findByRoomId(room._id).fetch();                                         // 84
                                                                                                                       //
	for (var _iterator = records, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
		var _ref2;                                                                                                           // 85
                                                                                                                       //
		if (_isArray) {                                                                                                      // 85
			if (_i >= _iterator.length) break;                                                                                  // 85
			_ref2 = _iterator[_i++];                                                                                            // 85
		} else {                                                                                                             // 85
			_i = _iterator.next();                                                                                              // 85
			if (_i.done) break;                                                                                                 // 85
			_ref2 = _i.value;                                                                                                   // 85
		}                                                                                                                    // 85
                                                                                                                       //
		var record = _ref2;                                                                                                  // 85
		RocketChat.Notifications.notifyUserInThisInstance(record.u._id, 'rooms-changed', type, roomMap({                     // 86
			_room: room                                                                                                         // 86
		}));                                                                                                                 // 86
	}                                                                                                                     // 87
});                                                                                                                    // 88
RocketChat.models.Subscriptions.on('changed', function (type, subscription /*, diff*/) {                               // 90
	if (type === 'inserted') {                                                                                            // 91
		var room = RocketChat.models.Rooms.findOneById(subscription.rid);                                                    // 92
                                                                                                                       //
		if (room) {                                                                                                          // 93
			RocketChat.Notifications.notifyUserInThisInstance(subscription.u._id, 'rooms-changed', type, roomMap({              // 94
				_room: room                                                                                                        // 94
			}));                                                                                                                // 94
		}                                                                                                                    // 95
	}                                                                                                                     // 96
});                                                                                                                    // 97
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"roomFiles.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/roomFiles.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('roomFiles', function (rid) {                                                                           // 1
	var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;                                   // 1
                                                                                                                       //
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	var pub = this;                                                                                                       // 6
	var cursorFileListHandle = RocketChat.models.Uploads.findNotHiddenFilesOfRoom(rid, limit).observeChanges({            // 8
		added: function (_id, record) {                                                                                      // 9
			return pub.added('room_files', _id, record);                                                                        // 10
		},                                                                                                                   // 11
		changed: function (_id, record) {                                                                                    // 12
			return pub.changed('room_files', _id, record);                                                                      // 13
		},                                                                                                                   // 14
		removed: function (_id, record) {                                                                                    // 15
			return pub.removed('room_files', _id, record);                                                                      // 16
		}                                                                                                                    // 17
	});                                                                                                                   // 8
	this.ready();                                                                                                         // 20
	return this.onStop(function () {                                                                                      // 22
		return cursorFileListHandle.stop();                                                                                  // 23
	});                                                                                                                   // 24
});                                                                                                                    // 25
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"roomSubscriptionsByRole.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/roomSubscriptionsByRole.js                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('roomSubscriptionsByRole', function (rid, role) {                                                       // 1
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	if (RocketChat.authz.hasPermission(this.userId, 'view-other-user-channels') !== true) {                               // 6
		return this.ready();                                                                                                 // 7
	}                                                                                                                     // 8
                                                                                                                       //
	return RocketChat.models.Subscriptions.findByRoomIdAndRoles(rid, role, {                                              // 10
		fields: {                                                                                                            // 11
			rid: 1,                                                                                                             // 12
			name: 1,                                                                                                            // 13
			roles: 1,                                                                                                           // 14
			u: 1                                                                                                                // 15
		},                                                                                                                   // 11
		sort: {                                                                                                              // 17
			name: 1                                                                                                             // 18
		}                                                                                                                    // 17
	});                                                                                                                   // 10
});                                                                                                                    // 21
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"spotlight.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/spotlight.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.methods({                                                                                                       // 1
	spotlight: function (text, usernames) {                                                                               // 2
		var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {                                     // 2
			users: true,                                                                                                        // 2
			rooms: true                                                                                                         // 2
		};                                                                                                                   // 2
		var result = {                                                                                                       // 3
			users: [],                                                                                                          // 4
			rooms: []                                                                                                           // 5
		};                                                                                                                   // 3
                                                                                                                       //
		if (this.userId == null) {                                                                                           // 8
			return result;                                                                                                      // 9
		}                                                                                                                    // 10
                                                                                                                       //
		var regex = new RegExp(s.trim(s.escapeRegExp(text)), 'i');                                                           // 12
                                                                                                                       //
		if (type.users === true && RocketChat.authz.hasPermission(this.userId, 'view-d-room')) {                             // 14
			result.users = RocketChat.models.Users.findByActiveUsersUsernameExcept(text, usernames, {                           // 15
				limit: 5,                                                                                                          // 16
				fields: {                                                                                                          // 17
					username: 1,                                                                                                      // 18
					status: 1                                                                                                         // 19
				},                                                                                                                 // 17
				sort: {                                                                                                            // 21
					username: 1                                                                                                       // 22
				}                                                                                                                  // 21
			}).fetch();                                                                                                         // 15
		}                                                                                                                    // 25
                                                                                                                       //
		if (type.rooms === true && RocketChat.authz.hasPermission(this.userId, 'view-c-room')) {                             // 27
			var username = RocketChat.models.Users.findOneById(this.userId, {                                                   // 28
				username: 1                                                                                                        // 29
			}).username;                                                                                                        // 28
			result.rooms = RocketChat.models.Rooms.findByNameAndTypeNotContainingUsername(regex, 'c', username, {               // 32
				limit: 5,                                                                                                          // 33
				fields: {                                                                                                          // 34
					t: 1,                                                                                                             // 35
					name: 1                                                                                                           // 36
				},                                                                                                                 // 34
				sort: {                                                                                                            // 38
					name: 1                                                                                                           // 39
				}                                                                                                                  // 38
			}).fetch();                                                                                                         // 32
		}                                                                                                                    // 42
                                                                                                                       //
		return result;                                                                                                       // 43
	}                                                                                                                     // 44
});                                                                                                                    // 1
DDPRateLimiter.addRule({                                                                                               // 47
	type: 'method',                                                                                                       // 48
	name: 'spotlight',                                                                                                    // 49
	userId: function () /*userId*/{                                                                                       // 50
		return true;                                                                                                         // 51
	}                                                                                                                     // 52
}, 100, 100000);                                                                                                       // 47
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"subscription.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/subscription.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var fields = {                                                                                                         // 1
	t: 1,                                                                                                                 // 2
	ts: 1,                                                                                                                // 3
	ls: 1,                                                                                                                // 4
	name: 1,                                                                                                              // 5
	rid: 1,                                                                                                               // 6
	code: 1,                                                                                                              // 7
	f: 1,                                                                                                                 // 8
	u: 1,                                                                                                                 // 9
	open: 1,                                                                                                              // 10
	alert: 1,                                                                                                             // 11
	roles: 1,                                                                                                             // 12
	unread: 1,                                                                                                            // 13
	archived: 1,                                                                                                          // 14
	audioNotification: 1,                                                                                                 // 15
	desktopNotifications: 1,                                                                                              // 16
	desktopNotificationDuration: 1,                                                                                       // 17
	mobilePushNotifications: 1,                                                                                           // 18
	emailNotifications: 1,                                                                                                // 19
	unreadAlert: 1,                                                                                                       // 20
	_updatedAt: 1,                                                                                                        // 21
	blocked: 1,                                                                                                           // 22
	blocker: 1                                                                                                            // 23
};                                                                                                                     // 1
Meteor.methods({                                                                                                       // 26
	'subscriptions/get': function (updatedAt) {                                                                           // 27
		if (!Meteor.userId()) {                                                                                              // 28
			return [];                                                                                                          // 29
		}                                                                                                                    // 30
                                                                                                                       //
		this.unblock();                                                                                                      // 32
		var options = {                                                                                                      // 34
			fields: fields                                                                                                      // 35
		};                                                                                                                   // 34
		var records = RocketChat.models.Subscriptions.findByUserId(Meteor.userId(), options).fetch();                        // 38
                                                                                                                       //
		if (updatedAt instanceof Date) {                                                                                     // 40
			return {                                                                                                            // 41
				update: records.filter(function (record) {                                                                         // 42
					return record._updatedAt > updatedAt;                                                                             // 43
				}),                                                                                                                // 44
				remove: RocketChat.models.Subscriptions.trashFindDeletedAfter(updatedAt, {                                         // 45
					'u._id': Meteor.userId()                                                                                          // 46
				}, {                                                                                                               // 45
					fields: {                                                                                                         // 48
						_id: 1,                                                                                                          // 49
						_deletedAt: 1                                                                                                    // 50
					}                                                                                                                 // 48
				}).fetch()                                                                                                         // 47
			};                                                                                                                  // 41
		}                                                                                                                    // 54
                                                                                                                       //
		return records;                                                                                                      // 55
	}                                                                                                                     // 56
});                                                                                                                    // 26
RocketChat.models.Subscriptions.on('changed', function (type, subscription) {                                          // 59
	return RocketChat.Notifications.notifyUserInThisInstance(subscription.u._id, 'subscriptions-changed', type, RocketChat.models.Subscriptions.processQueryOptionsOnResult(subscription, {
		fields: fields                                                                                                       // 61
	}));                                                                                                                  // 60
});                                                                                                                    // 63
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"userAutocomplete.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/userAutocomplete.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('userAutocomplete', function (selector) {                                                               // 1
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	if (!_.isObject(selector)) {                                                                                          // 6
		return this.ready();                                                                                                 // 7
	}                                                                                                                     // 8
                                                                                                                       //
	var options = {                                                                                                       // 10
		fields: {                                                                                                            // 11
			name: 1,                                                                                                            // 12
			username: 1,                                                                                                        // 13
			status: 1                                                                                                           // 14
		},                                                                                                                   // 11
		sort: {                                                                                                              // 16
			username: 1                                                                                                         // 17
		},                                                                                                                   // 16
		limit: 10                                                                                                            // 19
	};                                                                                                                    // 10
	var pub = this;                                                                                                       // 22
	var exceptions = selector.exceptions || [];                                                                           // 23
	var cursorHandle = RocketChat.models.Users.findActiveByUsernameOrNameRegexWithExceptions(selector.term, exceptions, options).observeChanges({
		added: function (_id, record) {                                                                                      // 26
			return pub.added('autocompleteRecords', _id, record);                                                               // 27
		},                                                                                                                   // 28
		changed: function (_id, record) {                                                                                    // 29
			return pub.changed('autocompleteRecords', _id, record);                                                             // 30
		},                                                                                                                   // 31
		removed: function (_id, record) {                                                                                    // 32
			return pub.removed('autocompleteRecords', _id, record);                                                             // 33
		}                                                                                                                    // 34
	});                                                                                                                   // 25
	this.ready();                                                                                                         // 37
	this.onStop(function () {                                                                                             // 39
		return cursorHandle.stop();                                                                                          // 40
	});                                                                                                                   // 41
});                                                                                                                    // 42
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"userChannels.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/userChannels.js                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('userChannels', function (userId) {                                                                     // 1
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	if (RocketChat.authz.hasPermission(this.userId, 'view-other-user-channels') !== true) {                               // 6
		return this.ready();                                                                                                 // 7
	}                                                                                                                     // 8
                                                                                                                       //
	return RocketChat.models.Subscriptions.findByUserId(userId, {                                                         // 10
		fields: {                                                                                                            // 11
			rid: 1,                                                                                                             // 12
			name: 1,                                                                                                            // 13
			t: 1,                                                                                                               // 14
			u: 1                                                                                                                // 15
		},                                                                                                                   // 11
		sort: {                                                                                                              // 17
			t: 1,                                                                                                               // 18
			name: 1                                                                                                             // 19
		}                                                                                                                    // 17
	});                                                                                                                   // 10
});                                                                                                                    // 22
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"userData.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications/userData.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Meteor.publish('userData', function () {                                                                               // 1
	if (!this.userId) {                                                                                                   // 2
		return this.ready();                                                                                                 // 3
	}                                                                                                                     // 4
                                                                                                                       //
	return RocketChat.models.Users.find(this.userId, {                                                                    // 6
		fields: {                                                                                                            // 7
			name: 1,                                                                                                            // 8
			username: 1,                                                                                                        // 9
			status: 1,                                                                                                          // 10
			statusDefault: 1,                                                                                                   // 11
			statusConnection: 1,                                                                                                // 12
			avatarOrigin: 1,                                                                                                    // 13
			utcOffset: 1,                                                                                                       // 14
			language: 1,                                                                                                        // 15
			settings: 1,                                                                                                        // 16
			roles: 1,                                                                                                           // 17
			active: 1,                                                                                                          // 18
			defaultRoom: 1,                                                                                                     // 19
			customFields: 1,                                                                                                    // 20
			'services.github': 1,                                                                                               // 21
			'services.gitlab': 1,                                                                                               // 22
			requirePasswordChange: 1,                                                                                           // 23
			requirePasswordChangeReason: 1,                                                                                     // 24
			'services.password.bcrypt': 1,                                                                                      // 25
			statusLivechat: 1                                                                                                   // 26
		}                                                                                                                    // 7
	});                                                                                                                   // 6
});                                                                                                                    // 29
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"stream":{"messages.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/stream/messages.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var msgStream = new Meteor.Streamer('room-messages');                                                                  // 1
this.msgStream = msgStream;                                                                                            // 2
msgStream.allowWrite('none');                                                                                          // 4
msgStream.allowRead(function (eventName) {                                                                             // 6
	try {                                                                                                                 // 7
		var room = Meteor.call('canAccessRoom', eventName, this.userId);                                                     // 8
                                                                                                                       //
		if (!room) {                                                                                                         // 10
			return false;                                                                                                       // 11
		}                                                                                                                    // 12
                                                                                                                       //
		if (room.t === 'c' && !RocketChat.authz.hasPermission(this.userId, 'preview-c-room') && room.usernames.indexOf(room.username) === -1) {
			return false;                                                                                                       // 15
		}                                                                                                                    // 16
                                                                                                                       //
		return true;                                                                                                         // 18
	} catch (error) {                                                                                                     // 19
		/*error*/return false;                                                                                               // 20
	}                                                                                                                     // 22
});                                                                                                                    // 23
msgStream.allowRead('__my_messages__', 'all');                                                                         // 25
msgStream.allowEmit('__my_messages__', function (eventName, msg, options) {                                            // 27
	try {                                                                                                                 // 28
		var room = Meteor.call('canAccessRoom', msg.rid, this.userId);                                                       // 29
                                                                                                                       //
		if (!room) {                                                                                                         // 31
			return false;                                                                                                       // 32
		}                                                                                                                    // 33
                                                                                                                       //
		options.roomParticipant = room.usernames.indexOf(room.username) > -1;                                                // 35
		options.roomType = room.t;                                                                                           // 36
		return true;                                                                                                         // 38
	} catch (error) {                                                                                                     // 39
		/*error*/return false;                                                                                               // 40
	}                                                                                                                     // 42
});                                                                                                                    // 43
Meteor.startup(function () {                                                                                           // 45
	function publishMessage(type, record) {                                                                               // 46
		if (record._hidden !== true && record.imported == null) {                                                            // 47
			msgStream.emitWithoutBroadcast('__my_messages__', record, {});                                                      // 48
			return msgStream.emitWithoutBroadcast(record.rid, record);                                                          // 49
		}                                                                                                                    // 50
	}                                                                                                                     // 51
                                                                                                                       //
	return RocketChat.models.Messages._db.on('change', function (_ref) {                                                  // 53
		var action = _ref.action,                                                                                            // 53
		    id = _ref.id,                                                                                                    // 53
		    data = _ref.data;                                                                                                // 53
                                                                                                                       //
		switch (action) {                                                                                                    // 54
			case 'insert':                                                                                                      // 55
				data._id = id;                                                                                                     // 56
				publishMessage('inserted', data);                                                                                  // 57
				break;                                                                                                             // 58
                                                                                                                       //
			case 'update:record':                                                                                               // 59
				publishMessage('updated', data);                                                                                   // 60
				break;                                                                                                             // 61
                                                                                                                       //
			case 'update:diff':                                                                                                 // 62
				publishMessage('updated', RocketChat.models.Messages.findOne({                                                     // 63
					_id: id                                                                                                           // 64
				}));                                                                                                               // 63
				break;                                                                                                             // 66
		}                                                                                                                    // 54
	});                                                                                                                   // 68
});                                                                                                                    // 69
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"streamBroadcast.js":["meteor/ddp-common",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/stream/streamBroadcast.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var DDPCommon = void 0;                                                                                                // 1
module.import('meteor/ddp-common', {                                                                                   // 1
	"DDPCommon": function (v) {                                                                                           // 1
		DDPCommon = v;                                                                                                       // 1
	}                                                                                                                     // 1
}, 0);                                                                                                                 // 1
var connections = {};                                                                                                  // 5
this.connections = connections;                                                                                        // 6
var logger = new Logger('StreamBroadcast', {                                                                           // 8
	sections: {                                                                                                           // 9
		connection: 'Connection',                                                                                            // 10
		auth: 'Auth',                                                                                                        // 11
		stream: 'Stream'                                                                                                     // 12
	}                                                                                                                     // 9
});                                                                                                                    // 8
                                                                                                                       //
function _authorizeConnection(instance) {                                                                              // 16
	logger.auth.info("Authorizing with " + instance);                                                                     // 17
	return connections[instance].call('broadcastAuth', InstanceStatus.id(), connections[instance].instanceId, function (err, ok) {
		if (err != null) {                                                                                                   // 20
			return logger.auth.error("broadcastAuth error " + instance + " " + InstanceStatus.id() + " " + connections[instance].instanceId, err);
		}                                                                                                                    // 22
                                                                                                                       //
		connections[instance].broadcastAuth = ok;                                                                            // 24
		return logger.auth.info("broadcastAuth with " + instance, ok);                                                       // 25
	});                                                                                                                   // 26
}                                                                                                                      // 27
                                                                                                                       //
function authorizeConnection(instance) {                                                                               // 29
	var query = {                                                                                                         // 30
		_id: InstanceStatus.id()                                                                                             // 31
	};                                                                                                                    // 30
                                                                                                                       //
	if (!InstanceStatus.getCollection().findOne(query)) {                                                                 // 34
		return Meteor.setTimeout(function () {                                                                               // 35
			return authorizeConnection(instance);                                                                               // 36
		}, 500);                                                                                                             // 37
	}                                                                                                                     // 38
                                                                                                                       //
	return _authorizeConnection(instance);                                                                                // 40
}                                                                                                                      // 41
                                                                                                                       //
function startMatrixBroadcast() {                                                                                      // 43
	var query = {                                                                                                         // 44
		'extraInformation.port': {                                                                                           // 45
			$exists: true                                                                                                       // 46
		}                                                                                                                    // 45
	};                                                                                                                    // 44
	var options = {                                                                                                       // 50
		sort: {                                                                                                              // 51
			_createdAt: -1                                                                                                      // 52
		}                                                                                                                    // 51
	};                                                                                                                    // 50
	return InstanceStatus.getCollection().find(query, options).observe({                                                  // 56
		added: function (record) {                                                                                           // 57
			var instance = record.extraInformation.host + ":" + record.extraInformation.port;                                   // 58
                                                                                                                       //
			if (record.extraInformation.port === process.env.PORT && record.extraInformation.host === process.env.INSTANCE_IP) {
				logger.auth.info('prevent self connect', instance);                                                                // 61
				return;                                                                                                            // 62
			}                                                                                                                   // 63
                                                                                                                       //
			if (record.extraInformation.host === process.env.INSTANCE_IP && RocketChat.isDocker() === false) {                  // 65
				instance = "localhost:" + record.extraInformation.port;                                                            // 66
			}                                                                                                                   // 67
                                                                                                                       //
			if (connections[instance] && connections[instance].instanceRecord) {                                                // 69
				if (connections[instance].instanceRecord._createdAt < record._createdAt) {                                         // 70
					connections[instance].disconnect();                                                                               // 71
					delete connections[instance];                                                                                     // 72
				} else {                                                                                                           // 73
					return;                                                                                                           // 74
				}                                                                                                                  // 75
			}                                                                                                                   // 76
                                                                                                                       //
			logger.connection.info('connecting in', instance);                                                                  // 78
			connections[instance] = DDP.connect(instance, {                                                                     // 80
				_dontPrintErrors: LoggerManager.logLevel < 2                                                                       // 81
			});                                                                                                                 // 80
			connections[instance].instanceRecord = record;                                                                      // 84
			connections[instance].instanceId = record._id;                                                                      // 85
			return connections[instance].onReconnect = function () {                                                            // 87
				return authorizeConnection(instance);                                                                              // 88
			};                                                                                                                  // 89
		},                                                                                                                   // 90
		removed: function (record) {                                                                                         // 92
			var instance = record.extraInformation.host + ":" + record.extraInformation.port;                                   // 93
                                                                                                                       //
			if (record.extraInformation.host === process.env.INSTANCE_IP && RocketChat.isDocker() === false) {                  // 95
				instance = 'localhost:' + record.extraInformation.port;                                                            // 96
			}                                                                                                                   // 97
                                                                                                                       //
			var query = {                                                                                                       // 99
				'extraInformation.host': record.extraInformation.host,                                                             // 100
				'extraInformation.port': record.extraInformation.port                                                              // 101
			};                                                                                                                  // 99
                                                                                                                       //
			if (connections[instance] && !InstanceStatus.getCollection().findOne(query)) {                                      // 104
				logger.connection.info('disconnecting from', instance);                                                            // 105
				connections[instance].disconnect();                                                                                // 106
				return delete connections[instance];                                                                               // 107
			}                                                                                                                   // 108
		}                                                                                                                    // 109
	});                                                                                                                   // 56
}                                                                                                                      // 111
                                                                                                                       //
Meteor.methods({                                                                                                       // 113
	broadcastAuth: function (remoteId, selfId) {                                                                          // 114
		check(selfId, String);                                                                                               // 115
		check(remoteId, String);                                                                                             // 116
		this.unblock();                                                                                                      // 118
		var query = {                                                                                                        // 120
			_id: remoteId                                                                                                       // 121
		};                                                                                                                   // 120
                                                                                                                       //
		if (selfId === InstanceStatus.id() && remoteId !== InstanceStatus.id() && InstanceStatus.getCollection().findOne(query)) {
			this.connection.broadcastAuth = true;                                                                               // 125
		}                                                                                                                    // 126
                                                                                                                       //
		return this.connection.broadcastAuth === true;                                                                       // 128
	},                                                                                                                    // 129
	stream: function (streamName, eventName, args) {                                                                      // 131
		if (!this.connection) {                                                                                              // 132
			return 'self-not-authorized';                                                                                       // 133
		}                                                                                                                    // 134
                                                                                                                       //
		if (this.connection.broadcastAuth !== true) {                                                                        // 136
			return 'not-authorized';                                                                                            // 137
		}                                                                                                                    // 138
                                                                                                                       //
		if (!Meteor.StreamerCentral.instances[streamName]) {                                                                 // 140
			return 'stream-not-exists';                                                                                         // 141
		}                                                                                                                    // 142
                                                                                                                       //
		Meteor.StreamerCentral.instances[streamName]._emit(eventName, args);                                                 // 144
	}                                                                                                                     // 145
});                                                                                                                    // 113
                                                                                                                       //
function startStreamCastBroadcast(value) {                                                                             // 148
	var instance = 'StreamCast';                                                                                          // 149
	logger.connection.info('connecting in', instance, value);                                                             // 151
	var connection = DDP.connect(value, {                                                                                 // 153
		_dontPrintErrors: LoggerManager.logLevel < 2                                                                         // 154
	});                                                                                                                   // 153
	connections[instance] = connection;                                                                                   // 157
	connection.instanceId = instance;                                                                                     // 158
                                                                                                                       //
	connection.onReconnect = function () {                                                                                // 159
		return authorizeConnection(instance);                                                                                // 160
	};                                                                                                                    // 161
                                                                                                                       //
	connection._stream.on('message', function (raw_msg) {                                                                 // 163
		var msg = DDPCommon.parseDDP(raw_msg);                                                                               // 164
                                                                                                                       //
		if (!msg || msg.msg !== 'changed' || !msg.collection || !msg.fields) {                                               // 165
			return;                                                                                                             // 166
		}                                                                                                                    // 167
                                                                                                                       //
		var _msg$fields = msg.fields,                                                                                        // 163
		    streamName = _msg$fields.streamName,                                                                             // 163
		    eventName = _msg$fields.eventName,                                                                               // 163
		    args = _msg$fields.args;                                                                                         // 163
                                                                                                                       //
		if (!streamName || !eventName || !args) {                                                                            // 171
			return;                                                                                                             // 172
		}                                                                                                                    // 173
                                                                                                                       //
		if (connection.broadcastAuth !== true) {                                                                             // 175
			return 'not-authorized';                                                                                            // 176
		}                                                                                                                    // 177
                                                                                                                       //
		if (!Meteor.StreamerCentral.instances[streamName]) {                                                                 // 179
			return 'stream-not-exists';                                                                                         // 180
		}                                                                                                                    // 181
                                                                                                                       //
		return Meteor.StreamerCentral.instances[streamName]._emit(eventName, args);                                          // 183
	});                                                                                                                   // 184
                                                                                                                       //
	return connection.subscribe('stream');                                                                                // 186
}                                                                                                                      // 187
                                                                                                                       //
function startStreamBroadcast() {                                                                                      // 189
	if (!process.env.INSTANCE_IP) {                                                                                       // 190
		process.env.INSTANCE_IP = 'localhost';                                                                               // 191
	}                                                                                                                     // 192
                                                                                                                       //
	logger.info('startStreamBroadcast');                                                                                  // 194
	RocketChat.settings.get('Stream_Cast_Address', function (key, value) {                                                // 196
		// var connection, fn, instance;                                                                                     // 197
		var fn = function (instance, connection) {                                                                           // 198
			connection.disconnect();                                                                                            // 199
			return delete connections[instance];                                                                                // 200
		};                                                                                                                   // 201
                                                                                                                       //
		for (var _iterator = Object.keys(connections), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {
			var _ref;                                                                                                           // 203
                                                                                                                       //
			if (_isArray) {                                                                                                     // 203
				if (_i >= _iterator.length) break;                                                                                 // 203
				_ref = _iterator[_i++];                                                                                            // 203
			} else {                                                                                                            // 203
				_i = _iterator.next();                                                                                             // 203
				if (_i.done) break;                                                                                                // 203
				_ref = _i.value;                                                                                                   // 203
			}                                                                                                                   // 203
                                                                                                                       //
			var instance = _ref;                                                                                                // 203
			var connection = connections[instance];                                                                             // 204
			fn(instance, connection);                                                                                           // 205
		}                                                                                                                    // 206
                                                                                                                       //
		if (value && value.trim() !== '') {                                                                                  // 208
			return startStreamCastBroadcast(value);                                                                             // 209
		} else {                                                                                                             // 210
			return startMatrixBroadcast();                                                                                      // 211
		}                                                                                                                    // 212
	});                                                                                                                   // 213
                                                                                                                       //
	function broadcast(streamName, eventName, args /*, userId*/) {                                                        // 215
		var fromInstance = process.env.INSTANCE_IP + ":" + process.env.PORT;                                                 // 216
		var results = [];                                                                                                    // 217
                                                                                                                       //
		var _loop = function (instance) {                                                                                    // 215
			var connection = connections[instance];                                                                             // 220
                                                                                                                       //
			if (connection.status().connected === true) {                                                                       // 222
				connection.call('stream', streamName, eventName, args, function (error, response) {                                // 223
					if (error) {                                                                                                      // 224
						logger.error('Stream broadcast error', error);                                                                   // 225
					}                                                                                                                 // 226
                                                                                                                       //
					switch (response) {                                                                                               // 228
						case 'self-not-authorized':                                                                                      // 229
							logger.stream.error(("Stream broadcast from '" + fromInstance + "' to '" + connection._stream.endpoint + "' with name " + streamName + " to self is not authorized").red);
							logger.stream.debug('    -> connection authorized'.red, connection.broadcastAuth);                              // 231
							logger.stream.debug('    -> connection status'.red, connection.status());                                       // 232
							return logger.stream.debug('    -> arguments'.red, eventName, args);                                            // 233
                                                                                                                       //
						case 'not-authorized':                                                                                           // 234
							logger.stream.error(("Stream broadcast from '" + fromInstance + "' to '" + connection._stream.endpoint + "' with name " + streamName + " not authorized").red);
							logger.stream.debug('    -> connection authorized'.red, connection.broadcastAuth);                              // 236
							logger.stream.debug('    -> connection status'.red, connection.status());                                       // 237
							logger.stream.debug('    -> arguments'.red, eventName, args);                                                   // 238
							return authorizeConnection(instance);                                                                           // 239
                                                                                                                       //
						case 'stream-not-exists':                                                                                        // 240
							logger.stream.error(("Stream broadcast from '" + fromInstance + "' to '" + connection._stream.endpoint + "' with name " + streamName + " does not exist").red);
							logger.stream.debug('    -> connection authorized'.red, connection.broadcastAuth);                              // 242
							logger.stream.debug('    -> connection status'.red, connection.status());                                       // 243
							return logger.stream.debug('    -> arguments'.red, eventName, args);                                            // 244
					}                                                                                                                 // 228
				});                                                                                                                // 246
			}                                                                                                                   // 247
		};                                                                                                                   // 215
                                                                                                                       //
		for (var _iterator2 = Object.keys(connections), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[Symbol.iterator]();;) {
			var _ref2;                                                                                                          // 219
                                                                                                                       //
			if (_isArray2) {                                                                                                    // 219
				if (_i2 >= _iterator2.length) break;                                                                               // 219
				_ref2 = _iterator2[_i2++];                                                                                         // 219
			} else {                                                                                                            // 219
				_i2 = _iterator2.next();                                                                                           // 219
				if (_i2.done) break;                                                                                               // 219
				_ref2 = _i2.value;                                                                                                 // 219
			}                                                                                                                   // 219
                                                                                                                       //
			var instance = _ref2;                                                                                               // 219
                                                                                                                       //
			_loop(instance);                                                                                                    // 219
		}                                                                                                                    // 248
                                                                                                                       //
		return results;                                                                                                      // 249
	}                                                                                                                     // 250
                                                                                                                       //
	return Meteor.StreamerCentral.on('broadcast', function (streamName, eventName, args) {                                // 252
		return broadcast(streamName, eventName, args);                                                                       // 253
	});                                                                                                                   // 254
}                                                                                                                      // 255
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 257
	return startStreamBroadcast();                                                                                        // 258
});                                                                                                                    // 259
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]}},"lib":{"RegExp.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/RegExp.js                                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
RegExp.escape = function (s) {                                                                                         // 1
	return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');                                                                   // 2
};                                                                                                                     // 3
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"fileUpload.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/fileUpload.js                                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* globals UploadFS, Cookies, FileUpload */if (UploadFS) {                                                             // 1
	(function () {                                                                                                        // 3
		var initFileStore = function () {                                                                                    // 4
			var cookie = new Cookies();                                                                                         // 5
                                                                                                                       //
			if (Meteor.isClient) {                                                                                              // 6
				document.cookie = 'rc_uid=' + escape(Meteor.userId()) + '; path=/';                                                // 7
				document.cookie = 'rc_token=' + escape(Accounts._storedLoginToken()) + '; path=/';                                 // 8
			}                                                                                                                   // 9
                                                                                                                       //
			Meteor.fileStore = new UploadFS.store.GridFS({                                                                      // 11
				collection: RocketChat.models.Uploads.model,                                                                       // 12
				name: 'rocketchat_uploads',                                                                                        // 13
				collectionName: 'rocketchat_uploads',                                                                              // 14
				filter: new UploadFS.Filter({                                                                                      // 15
					onCheck: FileUpload.validateFileUpload                                                                            // 16
				}),                                                                                                                // 15
				transformWrite: function (readStream, writeStream, fileId, file) {                                                 // 18
					if (RocketChatFile.enabled === false || !/^image\/.+/.test(file.type)) {                                          // 19
						return readStream.pipe(writeStream);                                                                             // 20
					}                                                                                                                 // 21
                                                                                                                       //
					var stream = undefined;                                                                                           // 23
                                                                                                                       //
					var identify = function (err, data) {                                                                             // 25
						if (err) {                                                                                                       // 26
							return stream.pipe(writeStream);                                                                                // 27
						}                                                                                                                // 28
                                                                                                                       //
						file.identify = {                                                                                                // 30
							format: data.format,                                                                                            // 31
							size: data.size                                                                                                 // 32
						};                                                                                                               // 30
                                                                                                                       //
						if (data.Orientation && !['', 'Unknown', 'Undefined'].includes(data.Orientation)) {                              // 35
							RocketChatFile.gm(stream).autoOrient().stream().pipe(writeStream);                                              // 36
						} else {                                                                                                         // 37
							stream.pipe(writeStream);                                                                                       // 38
						}                                                                                                                // 39
					};                                                                                                                // 40
                                                                                                                       //
					stream = RocketChatFile.gm(readStream).identify(identify).stream();                                               // 42
				},                                                                                                                 // 43
				onRead: function (fileId, file, req, res) {                                                                        // 45
					if (RocketChat.settings.get('FileUpload_ProtectFiles')) {                                                         // 46
						var uid = void 0,                                                                                                // 47
						    token = void 0;                                                                                              // 47
                                                                                                                       //
						if (req && req.headers && req.headers.cookie) {                                                                  // 49
							var rawCookies = req.headers.cookie;                                                                            // 50
                                                                                                                       //
							if (rawCookies) {                                                                                               // 52
								uid = cookie.get('rc_uid', rawCookies);                                                                        // 53
								token = cookie.get('rc_token', rawCookies);                                                                    // 54
							}                                                                                                               // 55
						}                                                                                                                // 56
                                                                                                                       //
						if (!uid) {                                                                                                      // 58
							uid = req.query.rc_uid;                                                                                         // 59
							token = req.query.rc_token;                                                                                     // 60
						}                                                                                                                // 61
                                                                                                                       //
						if (!uid || !token || !RocketChat.models.Users.findOneByIdAndLoginToken(uid, token)) {                           // 63
							res.writeHead(403);                                                                                             // 64
							return false;                                                                                                   // 65
						}                                                                                                                // 66
					}                                                                                                                 // 67
                                                                                                                       //
					res.setHeader('content-disposition', "attachment; filename=\"" + encodeURIComponent(file.name) + "\"");           // 69
					return true;                                                                                                      // 70
				}                                                                                                                  // 71
			});                                                                                                                 // 11
		};                                                                                                                   // 73
                                                                                                                       //
		Meteor.startup(function () {                                                                                         // 75
			if (Meteor.isServer) {                                                                                              // 76
				initFileStore();                                                                                                   // 77
			} else {                                                                                                            // 78
				Tracker.autorun(function (c) {                                                                                     // 79
					if (Meteor.userId() && RocketChat.settings.cachedCollection.ready.get()) {                                        // 80
						initFileStore();                                                                                                 // 81
						c.stop();                                                                                                        // 82
					}                                                                                                                 // 83
				});                                                                                                                // 84
			}                                                                                                                   // 85
		});                                                                                                                  // 86
	})();                                                                                                                 // 3
}                                                                                                                      // 87
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"francocatena_fix.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/francocatena_fix.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
this.i18n_status_func = function (key, options) {                                                                      // 1
	return TAPi18n.__(key, options);                                                                                      // 2
};                                                                                                                     // 3
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"underscore.string.js":function(require,exports){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/underscore.string.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/* globals mixin */ // This will add underscore.string methods to Underscore.js                                        // 1
// except for include, contains, reverse and join that are                                                             // 4
// dropped because they collide with the functions already                                                             // 5
// defined by Underscore.js.                                                                                           // 6
mixin = function (obj) {                                                                                               // 8
	_.each(_.functions(obj), function (name) {                                                                            // 9
		if (!_[name] && !_.prototype[name]) {                                                                                // 10
			_[name] = obj[name];                                                                                                // 11
		}                                                                                                                    // 12
	});                                                                                                                   // 13
};                                                                                                                     // 14
                                                                                                                       //
mixin(s.exports());                                                                                                    // 16
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},{"extensions":[".js",".json",".coffee",".info"]});
require("./server/lib/cordova/facebook-login.js");
require("./server/lib/accounts.js");
require("./server/lib/cordova.js");
require("./lib/RegExp.js");
require("./lib/fileUpload.js");
require("./lib/francocatena_fix.js");
require("./lib/underscore.string.js");
require("./server/startup/migrations/v001.js");
require("./server/startup/migrations/v002.js");
require("./server/startup/migrations/v003.js");
require("./server/startup/migrations/v004.js");
require("./server/startup/migrations/v005.js");
require("./server/startup/migrations/v006.js");
require("./server/startup/migrations/v007.js");
require("./server/startup/migrations/v008.js");
require("./server/startup/migrations/v009.js");
require("./server/startup/migrations/v010.js");
require("./server/startup/migrations/v011.js");
require("./server/startup/migrations/v012.js");
require("./server/startup/migrations/v013.js");
require("./server/startup/migrations/v014.js");
require("./server/startup/migrations/v015.js");
require("./server/startup/migrations/v016.js");
require("./server/startup/migrations/v017.js");
require("./server/startup/migrations/v018.js");
require("./server/startup/migrations/v019.js");
require("./server/startup/migrations/v020.js");
require("./server/startup/migrations/v021.js");
require("./server/startup/migrations/v022.js");
require("./server/startup/migrations/v023.js");
require("./server/startup/migrations/v024.js");
require("./server/startup/migrations/v025.js");
require("./server/startup/migrations/v026.js");
require("./server/startup/migrations/v027.js");
require("./server/startup/migrations/v028.js");
require("./server/startup/migrations/v029.js");
require("./server/startup/migrations/v030.js");
require("./server/startup/migrations/v031.js");
require("./server/startup/migrations/v032.js");
require("./server/startup/migrations/v033.js");
require("./server/startup/migrations/v034.js");
require("./server/startup/migrations/v035.js");
require("./server/startup/migrations/v036.js");
require("./server/startup/migrations/v037.js");
require("./server/startup/migrations/v038.js");
require("./server/startup/migrations/v039.js");
require("./server/startup/migrations/v040.js");
require("./server/startup/migrations/v041.js");
require("./server/startup/migrations/v042.js");
require("./server/startup/migrations/v043.js");
require("./server/startup/migrations/v044.js");
require("./server/startup/migrations/v045.js");
require("./server/startup/migrations/v046.js");
require("./server/startup/migrations/v047.js");
require("./server/startup/migrations/v048.js");
require("./server/startup/migrations/v049.js");
require("./server/startup/migrations/v050.js");
require("./server/startup/migrations/v051.js");
require("./server/startup/migrations/v052.js");
require("./server/startup/migrations/v053.js");
require("./server/startup/migrations/v054.js");
require("./server/startup/migrations/v055.js");
require("./server/startup/migrations/v056.js");
require("./server/startup/migrations/v057.js");
require("./server/startup/migrations/v058.js");
require("./server/startup/migrations/v059.js");
require("./server/startup/migrations/v060.js");
require("./server/startup/migrations/v061.js");
require("./server/startup/migrations/v062.js");
require("./server/startup/migrations/v063.js");
require("./server/startup/migrations/v064.js");
require("./server/startup/migrations/v065.js");
require("./server/startup/migrations/v066.js");
require("./server/startup/migrations/v067.js");
require("./server/startup/migrations/v068.js");
require("./server/startup/migrations/v069.js");
require("./server/startup/migrations/v070.js");
require("./server/startup/migrations/v071.js");
require("./server/startup/migrations/v072.js");
require("./server/startup/migrations/v073.js");
require("./server/startup/migrations/v074.js");
require("./server/startup/migrations/v075.js");
require("./server/startup/migrations/v076.js");
require("./server/startup/migrations/v077.js");
require("./server/startup/migrations/v078.js");
require("./server/startup/migrations/v079.js");
require("./server/startup/migrations/v080.js");
require("./server/startup/migrations/v081.js");
require("./server/startup/migrations/v082.js");
require("./server/startup/migrations/v083.js");
require("./server/startup/migrations/v084.js");
require("./server/startup/migrations/v085.js");
require("./server/startup/migrations/v086.js");
require("./server/startup/migrations/v087.js");
require("./server/startup/migrations/v088.js");
require("./server/startup/migrations/v089.js");
require("./server/startup/migrations/xrun.js");
require("./server/configuration/accounts_meld.js");
require("./server/methods/OEmbedCacheCleanup.js");
require("./server/methods/addAllUserToRoom.js");
require("./server/methods/addRoomModerator.js");
require("./server/methods/addRoomOwner.js");
require("./server/methods/canAccessRoom.js");
require("./server/methods/channelsList.js");
require("./server/methods/createDirectMessage.js");
require("./server/methods/deleteFileMessage.js");
require("./server/methods/deleteUser.js");
require("./server/methods/eraseRoom.js");
require("./server/methods/getAvatarSuggestion.js");
require("./server/methods/getRoomIdByNameOrId.js");
require("./server/methods/getTotalChannels.js");
require("./server/methods/getUsernameSuggestion.js");
require("./server/methods/getUsersOfRoom.js");
require("./server/methods/groupsList.js");
require("./server/methods/hideRoom.js");
require("./server/methods/loadHistory.js");
require("./server/methods/loadLocale.js");
require("./server/methods/loadMissedMessages.js");
require("./server/methods/loadNextMessages.js");
require("./server/methods/loadSurroundingMessages.js");
require("./server/methods/logoutCleanUp.js");
require("./server/methods/messageSearch.js");
require("./server/methods/migrate.js");
require("./server/methods/muteUserInRoom.js");
require("./server/methods/openRoom.js");
require("./server/methods/readMessages.js");
require("./server/methods/registerUser.js");
require("./server/methods/removeRoomModerator.js");
require("./server/methods/removeRoomOwner.js");
require("./server/methods/removeUserFromRoom.js");
require("./server/methods/reportMessage.js");
require("./server/methods/resetAvatar.js");
require("./server/methods/saveUserPreferences.js");
require("./server/methods/saveUserProfile.js");
require("./server/methods/sendConfirmationEmail.js");
require("./server/methods/sendForgotPasswordEmail.js");
require("./server/methods/setAvatarFromService.js");
require("./server/methods/setUserActiveStatus.js");
require("./server/methods/setUserPassword.js");
require("./server/methods/toogleFavorite.js");
require("./server/methods/unmuteUserInRoom.js");
require("./server/methods/userSetUtcOffset.js");
require("./server/publications/activeUsers.js");
require("./server/publications/channelAndPrivateAutocomplete.js");
require("./server/publications/fullUserData.js");
require("./server/publications/messages.js");
require("./server/publications/privateHistory.js");
require("./server/publications/room.js");
require("./server/publications/roomFiles.js");
require("./server/publications/roomSubscriptionsByRole.js");
require("./server/publications/spotlight.js");
require("./server/publications/subscription.js");
require("./server/publications/userAutocomplete.js");
require("./server/publications/userChannels.js");
require("./server/publications/userData.js");
require("./server/startup/appcache.js");
require("./server/startup/avatar.js");
require("./server/startup/cron.js");
require("./server/startup/i18n-validation.js");
require("./server/startup/initialData.js");
require("./server/startup/presence.js");
require("./server/startup/roomPublishes.js");
require("./server/startup/serverRunning.js");
require("./server/stream/messages.js");
require("./server/stream/streamBroadcast.js");
//# sourceMappingURL=app.js.map

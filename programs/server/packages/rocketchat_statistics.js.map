{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:statistics/server/functions/get.js"],"names":["RocketChat","statistics","get","_getStatistics","uniqueId","settings","models","Settings","findOne","installedAt","createdAt","Info","version","tag","branch","totalUsers","Meteor","users","find","count","activeUsers","active","nonActiveUsers","onlineUsers","statusConnection","awayUsers","offlineUsers","totalRooms","Rooms","totalChannels","findByType","totalPrivateGroups","totalDirect","totlalLivechat","totalMessages","Messages","totalChannelMessages","_","reduce","fields","fetch","_countChannelMessages","num","room","msgs","totalPrivateGroupMessages","_countPrivateGroupMessages","totalDirectMessages","_countDirectMessages","totalLivechatMessages","_countLivechatMessages","lastLogin","Users","getLastLogin","lastMessageSentAt","getLastTimestamp","lastSeenSubscription","Subscriptions","getLastSeen","os","Npm","require","type","platform","arch","release","uptime","loadavg","totalmem","freemem","cpus","process","nodeVersion","pid","migration","Migrations","_getControl","instanceCount","InstanceStatus","getCollection","_updatedAt","$gt","Date","now","MongoInternals","defaultRemoteCollectionDriver","mongo","_oplogHandle","onOplogEntry","oplogEnabled"],"mappings":"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","file":"/packages/rocketchat_statistics.js","sourcesContent":["/* global InstanceStatus, MongoInternals */\nRocketChat.statistics.get = function _getStatistics() {\n\tconst statistics = {};\n\n\t// Version\n\tstatistics.uniqueId = RocketChat.settings.get('uniqueID');\n\tif (RocketChat.models.Settings.findOne('uniqueID')) {\n\t\tstatistics.installedAt = RocketChat.models.Settings.findOne('uniqueID').createdAt;\n\t}\n\n\tif (RocketChat.Info) {\n\t\tstatistics.version = RocketChat.Info.version;\n\t\tstatistics.tag = RocketChat.Info.tag;\n\t\tstatistics.branch = RocketChat.Info.branch;\n\t}\n\n\t// User statistics\n\tstatistics.totalUsers = Meteor.users.find().count();\n\tstatistics.activeUsers = Meteor.users.find({ active: true }).count();\n\tstatistics.nonActiveUsers = statistics.totalUsers - statistics.activeUsers;\n\tstatistics.onlineUsers = Meteor.users.find({ statusConnection: 'online' }).count();\n\tstatistics.awayUsers = Meteor.users.find({ statusConnection: 'away' }).count();\n\tstatistics.offlineUsers = statistics.totalUsers - statistics.onlineUsers - statistics.awayUsers;\n\n\t// Room statistics\n\tstatistics.totalRooms = RocketChat.models.Rooms.find().count();\n\tstatistics.totalChannels = RocketChat.models.Rooms.findByType('c').count();\n\tstatistics.totalPrivateGroups = RocketChat.models.Rooms.findByType('p').count();\n\tstatistics.totalDirect = RocketChat.models.Rooms.findByType('d').count();\n\tstatistics.totlalLivechat = RocketChat.models.Rooms.findByType('l').count();\n\n\t// Message statistics\n\tstatistics.totalMessages = RocketChat.models.Messages.find().count();\n\tstatistics.totalChannelMessages = _.reduce(RocketChat.models.Rooms.findByType('c', { fields: { 'msgs': 1 }}).fetch(), function _countChannelMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalPrivateGroupMessages = _.reduce(RocketChat.models.Rooms.findByType('p', { fields: { 'msgs': 1 }}).fetch(), function _countPrivateGroupMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalDirectMessages = _.reduce(RocketChat.models.Rooms.findByType('d', { fields: { 'msgs': 1 }}).fetch(), function _countDirectMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalLivechatMessages = _.reduce(RocketChat.models.Rooms.findByType('l', { fields: { 'msgs': 1 }}).fetch(), function _countLivechatMessages(num, room) { return num + room.msgs; }, 0);\n\n\tstatistics.lastLogin = RocketChat.models.Users.getLastLogin();\n\tstatistics.lastMessageSentAt = RocketChat.models.Messages.getLastTimestamp();\n\tstatistics.lastSeenSubscription = RocketChat.models.Subscriptions.getLastSeen();\n\n\tconst os = Npm.require('os');\n\tstatistics.os = {\n\t\ttype: os.type(),\n\t\tplatform: os.platform(),\n\t\tarch: os.arch(),\n\t\trelease: os.release(),\n\t\tuptime: os.uptime(),\n\t\tloadavg: os.loadavg(),\n\t\ttotalmem: os.totalmem(),\n\t\tfreemem: os.freemem(),\n\t\tcpus: os.cpus()\n\t};\n\n\tstatistics.process = {\n\t\tnodeVersion: process.version,\n\t\tpid: process.pid,\n\t\tuptime: process.uptime()\n\t};\n\n\tstatistics.migration = RocketChat.Migrations._getControl();\n\tstatistics.instanceCount = InstanceStatus.getCollection().find({ _updatedAt: { $gt: new Date(Date.now() - process.uptime() * 1000 - 2000) }}).count();\n\n\tif (MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle && MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle.onOplogEntry && RocketChat.settings.get('Force_Disable_OpLog_For_Cache') !== true) {\n\t\tstatistics.oplogEnabled = true;\n\t}\n\n\treturn statistics;\n};\n"]}
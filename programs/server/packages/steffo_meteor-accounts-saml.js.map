{"version":3,"sources":["meteor://ðŸ’»app/packages/steffo:meteor-accounts-saml/saml_server.js","meteor://ðŸ’»app/packages/steffo:meteor-accounts-saml/saml_utils.js"],"names":["Accounts","saml","settings","debug","generateUsername","providers","fiber","Npm","require","connect","RoutePolicy","declare","getSamlProviderConfig","provider","Meteor","Error","method","samlProvider","element","filter","methods","samlLogout","userId","providerConfig","console","log","JSON","stringify","user","users","findOne","_id","nameID","services","sessionIndex","idpSession","_saml","SAML","request","generateLogoutRequest","update","$set","id","_syncRequestToUrl","wrapAsync","requestToUrl","result","registerLoginHandler","loginRequest","credentialToken","undefined","loginResult","retrieveCredential","type","error","LoginCancelledError","numericError","profile","email","newUser","name","cn","username","active","globalRoles","emails","address","verified","RocketChat","generateUsernameSuggestion","insertUserDoc","stampedToken","_generateStampedLoginToken","$push","samlLogin","RelayState","idp","issuer","token","_loginResultForCredentialToken","hasCredential","_","has","closePopup","res","err","writeHead","content","end","samlUrlToObject","url","splitUrl","split","splitPath","actionName","serviceName","middleware","req","next","samlObject","service","find","samlSetting","callbackUrl","absoluteUrl","write","generateServiceProviderMetadata","validateLogoutResponse","query","SAMLResponse","logOutUser","inResponseTo","loggedOutUser","fetch","length","$unset","run","idpLogout","redirect","getAuthorizeUrl","body","validateResponse","inResponseToId","InResponseTo","saml_idp_credentialToken","Random","WebApp","connectHandlers","use","bodyParser","zlib","xml2js","xmlCrypto","crypto","xmldom","querystring","xmlbuilder","options","initialize","prototype","protocol","path","identifierFormat","authnContext","generateUniqueID","chars","uniqueID","i","substr","Math","floor","random","generateInstant","Date","toISOString","signRequest","xml","signer","createSign","sign","privateKey","generateAuthorizeRequest","instant","headers","host","entryPoint","idpSLORedirectURL","operation","callback","self","deflateRaw","buffer","base64","toString","target","indexOf","relayState","samlRequest","SAMLRequest","privateCert","SigAlg","Signature","getLogoutUrl","certToPEM","cert","match","join","validateSignature","doc","DOMParser","parseFromString","signature","xpath","sig","SignedXml","keyInfoProvider","getKeyInfo","getKey","loadSignature","checkSignature","getElement","parentElement","elementName","samlResponse","compressedSAMLResponse","Buffer","inflateRaw","decoded","parser","Parser","explicitRoot","parseString","response","$","status","statusCode","Value","assertion","subject","Format","nameIDFormat","authnStatement","SessionIndex","attributeStatement","attributes","forEach","attribute","value","Name","mail","logoutResponse","decryptionCert","keyDescriptor","replace","metadata","create","pretty","indent","newline"],"mappings":"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","file":"/packages/steffo_meteor-accounts-saml.js","sourcesContent":["/* globals RoutePolicy, SAML */\n/* jshint newcap: false */\n\nif (!Accounts.saml) {\n\tAccounts.saml = {\n\t\tsettings: {\n\t\t\tdebug: true,\n\t\t\tgenerateUsername: false,\n\t\t\tproviders: []\n\t\t}\n\t};\n}\n\nvar fiber = Npm.require('fibers');\nvar connect = Npm.require('connect');\nRoutePolicy.declare('/_saml/', 'network');\n\n/**\n * Fetch SAML provider configs for given 'provider'.\n */\nfunction getSamlProviderConfig(provider) {\n\tif (! provider) {\n\t\tthrow new Meteor.Error('no-saml-provider',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t'SAML internal error',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ method: 'getSamlProviderConfig' });\n\t}\n\tvar samlProvider = function(element) {\n\t\treturn (element.provider === provider);\n\t};\n\treturn Accounts.saml.settings.providers.filter(samlProvider)[0];\n}\n\nMeteor.methods({\n\tsamlLogout: function(provider) {\n\t\t// Make sure the user is logged in before initiate SAML SLO\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'samlLogout' });\n\t\t}\n\t\tvar providerConfig = getSamlProviderConfig(provider);\n\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log('Logout request from ' + JSON.stringify(providerConfig));\n\t\t}\n\t\t// This query should respect upcoming array of SAML logins\n\t\tvar user = Meteor.users.findOne({\n\t\t\t_id: Meteor.userId(),\n\t\t\t'services.saml.provider': provider\n\t\t}, {\n\t\t\t'services.saml': 1\n\t\t});\n\t\tvar nameID = user.services.saml.nameID;\n\t\tvar sessionIndex = user.services.saml.idpSession;\n\t\tnameID = sessionIndex;\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log('NameID for user ' + Meteor.userId() + ' found: ' + JSON.stringify(nameID));\n\t\t}\n\n\t\tvar _saml = new SAML(providerConfig);\n\n\t\tvar request = _saml.generateLogoutRequest({\n\t\t\tnameID: nameID,\n\t\t\tsessionIndex: sessionIndex\n\t\t});\n\n\t\t// request.request: actual XML SAML Request\n\t\t// request.id: comminucation id which will be mentioned in the ResponseTo field of SAMLResponse\n\n\t\tMeteor.users.update({\n\t\t\t_id: Meteor.userId()\n\t\t}, {\n\t\t\t$set: {\n\t\t\t\t'services.saml.inResponseTo': request.id\n\t\t\t}\n\t\t});\n\n\t\tvar _syncRequestToUrl = Meteor.wrapAsync(_saml.requestToUrl, _saml);\n\t\tvar result = _syncRequestToUrl(request.request, 'logout');\n\t\tif (Accounts.saml.settings.debug) {\n\t\t\tconsole.log('SAML Logout Request ' + result);\n\t\t}\n\n\n\t\treturn result;\n\t}\n});\n\nAccounts.registerLoginHandler(function(loginRequest) {\n\tif (!loginRequest.saml || !loginRequest.credentialToken) {\n\t\treturn undefined;\n\t}\n\n\tvar loginResult = Accounts.saml.retrieveCredential(loginRequest.credentialToken);\n\tif (Accounts.saml.settings.debug) {\n\t\tconsole.log('RESULT :' + JSON.stringify(loginResult));\n\t}\n\n\tif (loginResult === undefined) {\n\t\treturn {\n\t\t\ttype: 'saml',\n\t\t\terror: new Meteor.Error(Accounts.LoginCancelledError.numericError, 'No matching login attempt found')\n\t\t};\n\t}\n\n\tif (loginResult && loginResult.profile && loginResult.profile.email) {\n\t\tvar user = Meteor.users.findOne({\n\t\t\t'emails.address': loginResult.profile.email\n\t\t});\n\n\t\tif (!user) {\n\t\t\tvar newUser = {\n\t\t\t\tname: loginResult.profile.cn || loginResult.profile.username,\n\t\t\t\tactive: true,\n\t\t\t\tglobalRoles: ['user'],\n\t\t\t\temails: [{\n\t\t\t\t\taddress: loginResult.profile.email,\n\t\t\t\t\tverified: true\n\t\t\t\t}]\n\t\t\t};\n\n\t\t\tif (Accounts.saml.settings.generateUsername === true) {\n\t\t\t\tvar username = RocketChat.generateUsernameSuggestion(newUser);\n\t\t\t\tif (username) {\n\t\t\t\t\tnewUser.username = username;\n\t\t\t\t}\n\t\t\t} else if (loginResult.profile.username) {\n\t\t\t\tnewUser.username = loginResult.profile.username;\n\t\t\t}\n\n\t\t\tvar userId = Accounts.insertUserDoc({}, newUser);\n\t\t\tuser = Meteor.users.findOne(userId);\n\t\t}\n\n\t\t//creating the token and adding to the user\n\t\tvar stampedToken = Accounts._generateStampedLoginToken();\n\t\tMeteor.users.update(user, {\n\t\t\t$push: {\n\t\t\t\t'services.resume.loginTokens': stampedToken\n\t\t\t}\n\t\t});\n\n\t\tvar samlLogin = {\n\t\t\tprovider: Accounts.saml.RelayState,\n\t\t\tidp: loginResult.profile.issuer,\n\t\t\tidpSession: loginResult.profile.sessionIndex,\n\t\t\tnameID: loginResult.profile.nameID\n\t\t};\n\n\t\tMeteor.users.update({\n\t\t\t_id: user._id\n\t\t}, {\n\t\t\t$set: {\n\t\t\t\t// TBD this should be pushed, otherwise we're only able to SSO into a single IDP at a time\n\t\t\t\t'services.saml': samlLogin\n\t\t\t}\n\t\t});\n\n\t\t//sending token along with the userId\n\t\tvar result = {\n\t\t\tuserId: user._id,\n\t\t\ttoken: stampedToken.token\n\t\t};\n\n\t\treturn result;\n\n\t} else {\n\t\tthrow new Error('SAML Profile did not contain an email address');\n\t}\n});\n\nAccounts.saml._loginResultForCredentialToken = {};\n\nAccounts.saml.hasCredential = function(credentialToken) {\n\treturn _.has(Accounts.saml._loginResultForCredentialToken, credentialToken);\n};\n\nAccounts.saml.retrieveCredential = function(credentialToken) {\n\t// The credentialToken in all these functions corresponds to SAMLs inResponseTo field and is mandatory to check.\n\tvar result = Accounts.saml._loginResultForCredentialToken[credentialToken];\n\tdelete Accounts.saml._loginResultForCredentialToken[credentialToken];\n\treturn result;\n};\n\nvar closePopup = function(res, err) {\n\tres.writeHead(200, {\n\t\t'Content-Type': 'text/html'\n\t});\n\tvar content = '<html><head><script>window.close()</script></head><body><H1>Verified</H1></body></html>';\n\tif (err) {\n\t\tcontent = '<html><body><h2>Sorry, an annoying error occured</h2><div>' + err + '</div><a onclick=\"window.close();\">Close Window</a></body></html>';\n\t}\n\tres.end(content, 'utf-8');\n};\n\nvar samlUrlToObject = function(url) {\n\t// req.url will be '/_saml/<action>/<service name>/<credentialToken>'\n\tif (!url) {\n\t\treturn null;\n\t}\n\n\tvar splitUrl = url.split('?');\n\tvar splitPath = splitUrl[0].split('/');\n\n\t// Any non-saml request will continue down the default\n\t// middlewares.\n\tif (splitPath[1] !== '_saml') {\n\t\treturn null;\n\t}\n\n\tvar result = {\n\t\tactionName: splitPath[2],\n\t\tserviceName: splitPath[3],\n\t\tcredentialToken: splitPath[4]\n\t};\n\tif (Accounts.saml.settings.debug) {\n\t\tconsole.log(result);\n\t}\n\treturn result;\n};\n\nvar middleware = function(req, res, next) {\n\t// Make sure to catch any exceptions because otherwise we'd crash\n\t// the runner\n\ttry {\n\t\tvar samlObject = samlUrlToObject(req.url);\n\t\tif (!samlObject || !samlObject.serviceName) {\n\t\t\tnext();\n\t\t\treturn;\n\t\t}\n\n\t\tif (!samlObject.actionName) {\n\t\t\tthrow new Error('Missing SAML action');\n\t\t}\n\n\t\tconsole.log(Accounts.saml.settings.providers);\n\t\tconsole.log(samlObject.serviceName);\n\t\tvar service = _.find(Accounts.saml.settings.providers, function(samlSetting) {\n\t\t\treturn samlSetting.provider === samlObject.serviceName;\n\t\t});\n\n\t\t// Skip everything if there's no service set by the saml middleware\n\t\tif (!service) {\n\t\t\tthrow new Error('Unexpected SAML service ' + samlObject.serviceName);\n\t\t}\n\t\tvar _saml;\n\t\tswitch (samlObject.actionName) {\n\t\t\tcase 'metadata':\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\tservice.callbackUrl = Meteor.absoluteUrl('_saml/validate/' + service.provider);\n\t\t\t\tres.writeHead(200);\n\t\t\t\tres.write(_saml.generateServiceProviderMetadata(service.callbackUrl));\n\t\t\t\tres.end();\n\t\t\t\t//closePopup(res);\n\t\t\t\tbreak;\n\t\t\tcase 'logout':\n\t\t\t\t// This is where we receive SAML LogoutResponse\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\t_saml.validateLogoutResponse(req.query.SAMLResponse, function(err, result) {\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tvar logOutUser = function(inResponseTo) {\n\t\t\t\t\t\t\tif (Accounts.saml.settings.debug) {\n\t\t\t\t\t\t\t\tconsole.log('Logging Out user via inResponseTo ' + inResponseTo);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar loggedOutUser = Meteor.users.find({\n\t\t\t\t\t\t\t\t'services.saml.inResponseTo': inResponseTo\n\t\t\t\t\t\t\t}).fetch();\n\t\t\t\t\t\t\tif (loggedOutUser.length === 1) {\n\t\t\t\t\t\t\t\tif (Accounts.saml.settings.debug) {\n\t\t\t\t\t\t\t\t\tconsole.log('Found user ' + loggedOutUser[0]._id);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tMeteor.users.update({\n\t\t\t\t\t\t\t\t\t_id: loggedOutUser[0]._id\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t$set: {\n\t\t\t\t\t\t\t\t\t\t'services.resume.loginTokens': []\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tMeteor.users.update({\n\t\t\t\t\t\t\t\t\t_id: loggedOutUser[0]._id\n\t\t\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\t\t\t$unset: {\n\t\t\t\t\t\t\t\t\t\t'services.saml': ''\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow new Meteor.Error('Found multiple users matching SAML inResponseTo fields');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfiber(function() {\n\t\t\t\t\t\t\tlogOutUser(result);\n\t\t\t\t\t\t}).run();\n\n\n\t\t\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t\t\t'Location': req.query.RelayState\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.end();\n\t\t\t\t\t}\n\t\t\t\t\t//  else {\n\t\t\t\t\t// \t// TBD thinking of sth meaning full.\n\t\t\t\t\t// }\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'sloRedirect':\n\t\t\t\tvar idpLogout = req.query.redirect;\n\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t// credentialToken here is the SAML LogOut Request that we'll send back to IDP\n\t\t\t\t\t'Location': idpLogout\n\t\t\t\t});\n\t\t\t\tres.end();\n\t\t\t\tbreak;\n\t\t\tcase 'authorize':\n\t\t\t\tservice.callbackUrl = Meteor.absoluteUrl('_saml/validate/' + service.provider);\n\t\t\t\tservice.id = samlObject.credentialToken;\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\t_saml.getAuthorizeUrl(req, function(err, url) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error('Unable to generate authorize url');\n\t\t\t\t\t}\n\t\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t\t'Location': url\n\t\t\t\t\t});\n\t\t\t\t\tres.end();\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tcase 'validate':\n\t\t\t\t_saml = new SAML(service);\n\t\t\t\tAccounts.saml.RelayState = req.body.RelayState;\n\t\t\t\t_saml.validateResponse(req.body.SAMLResponse, req.body.RelayState, function(err, profile/*, loggedOut*/) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tthrow new Error('Unable to validate response url: ' + err);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar credentialToken = profile.inResponseToId || profile.InResponseTo || samlObject.credentialToken;\n\t\t\t\t\tif (!credentialToken) {\n\t\t\t\t\t\t// No credentialToken in IdP-initiated SSO\n\t\t\t\t\t\tvar saml_idp_credentialToken = Random.id();\n\t\t\t\t\t\tAccounts.saml._loginResultForCredentialToken[saml_idp_credentialToken] = {\n\t\t\t\t\t\t\tprofile: profile\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvar url = Meteor.absoluteUrl('home') + '?saml_idp_credentialToken='+saml_idp_credentialToken;\n\t\t\t\t\t\tres.writeHead(302, {\n\t\t\t\t\t\t\t'Location': url\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.end();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tAccounts.saml._loginResultForCredentialToken[credentialToken] = {\n\t\t\t\t\t\t\tprofile: profile\n\t\t\t\t\t\t};\n\t\t\t\t\t\tclosePopup(res);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('Unexpected SAML action ' + samlObject.actionName);\n\n\t\t}\n\t} catch (err) {\n\t\tclosePopup(res, err);\n\t}\n};\n\n// Listen to incoming SAML http requests\nWebApp.connectHandlers.use(connect.bodyParser()).use(function(req, res, next) {\n\t// Need to create a fiber since we're using synchronous http calls and nothing\n\t// else is wrapping this in a fiber automatically\n\tfiber(function() {\n\t\tmiddleware(req, res, next);\n\t}).run();\n});\n","/* globals SAML:true */\n\nvar zlib = Npm.require('zlib');\nvar xml2js = Npm.require('xml2js');\nvar xmlCrypto = Npm.require('xml-crypto');\nvar crypto = Npm.require('crypto');\nvar xmldom = Npm.require('xmldom');\nvar querystring = Npm.require('querystring');\nvar xmlbuilder = Npm.require('xmlbuilder');\n\n// var prefixMatch = new RegExp(/(?!xmlns)^.*:/);\n\n\nSAML = function(options) {\n\tthis.options = this.initialize(options);\n};\n\n// var stripPrefix = function(str) {\n// \treturn str.replace(prefixMatch, '');\n// };\n\nSAML.prototype.initialize = function(options) {\n\tif (!options) {\n\t\toptions = {};\n\t}\n\n\tif (!options.protocol) {\n\t\toptions.protocol = 'https://';\n\t}\n\n\tif (!options.path) {\n\t\toptions.path = '/saml/consume';\n\t}\n\n\tif (!options.issuer) {\n\t\toptions.issuer = 'onelogin_saml';\n\t}\n\n\tif (options.identifierFormat === undefined) {\n\t\toptions.identifierFormat = 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress';\n\t}\n\n\tif (options.authnContext === undefined) {\n\t\toptions.authnContext = 'urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport';\n\t}\n\n\treturn options;\n};\n\nSAML.prototype.generateUniqueID = function() {\n\tvar chars = 'abcdef0123456789';\n\tvar uniqueID = '';\n\tfor (var i = 0; i < 20; i++) {\n\t\tuniqueID += chars.substr(Math.floor((Math.random() * 15)), 1);\n\t}\n\treturn uniqueID;\n};\n\nSAML.prototype.generateInstant = function() {\n\treturn new Date().toISOString();\n};\n\nSAML.prototype.signRequest = function(xml) {\n\tvar signer = crypto.createSign('RSA-SHA1');\n\tsigner.update(xml);\n\treturn signer.sign(this.options.privateKey, 'base64');\n};\n\nSAML.prototype.generateAuthorizeRequest = function(req) {\n\tvar id = '_' + this.generateUniqueID();\n\tvar instant = this.generateInstant();\n\n\t// Post-auth destination\n\tvar callbackUrl;\n\tif (this.options.callbackUrl) {\n\t\tcallbackUrl = this.options.callbackUrl;\n\t} else {\n\t\tcallbackUrl = this.options.protocol + req.headers.host + this.options.path;\n\t}\n\n\tif (this.options.id) {\n\t\tid = this.options.id;\n\t}\n\n\tvar request =\n\t\t'<samlp:AuthnRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" ID=\"' + id + '\" Version=\"2.0\" IssueInstant=\"' + instant +\n\t\t'\" ProtocolBinding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" AssertionConsumerServiceURL=\"' + callbackUrl + '\" Destination=\"' +\n\t\tthis.options.entryPoint + '\">' +\n\t\t'<saml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">' + this.options.issuer + '</saml:Issuer>\\n';\n\n\tif (this.options.identifierFormat) {\n\t\trequest += '<samlp:NameIDPolicy xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" Format=\"' + this.options.identifierFormat +\n\t\t\t'\" AllowCreate=\"true\"></samlp:NameIDPolicy>\\n';\n\t}\n\n\trequest +=\n\t\t'<samlp:RequestedAuthnContext xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" Comparison=\"exact\">' +\n\t\t'<saml:AuthnContextClassRef xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</saml:AuthnContextClassRef></samlp:RequestedAuthnContext>\\n' +\n\t\t'</samlp:AuthnRequest>';\n\n\treturn request;\n};\n\nSAML.prototype.generateLogoutRequest = function(options) {\n\t// options should be of the form\n\t// nameId: <nameId as submitted during SAML SSO>\n\t// sessionIndex: sessionIndex\n\t// --- NO SAMLsettings: <Meteor.setting.saml  entry for the provider you want to SLO from\n\n\tvar id = '_' + this.generateUniqueID();\n\tvar instant = this.generateInstant();\n\n\tvar request = '<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\" ' +\n\t\t'xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ID=\"' + id + '\" Version=\"2.0\" IssueInstant=\"' + instant +\n\t\t'\" Destination=\"' + this.options.idpSLORedirectURL + '\">' +\n\t\t'<saml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">' + this.options.issuer + '</saml:Issuer>' +\n\t\t'<saml:NameID Format=\"' + this.options.identifierFormat + '\">' + options.nameID + '</saml:NameID>' +\n\t\t'</samlp:LogoutRequest>';\n\n\trequest = '<samlp:LogoutRequest xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\"  ' +\n\t\t'ID=\"' + id + '\" ' +\n\t\t'Version=\"2.0\" ' +\n\t\t'IssueInstant=\"' + instant + '\" ' +\n\t\t'Destination=\"' + this.options.idpSLORedirectURL + '\" ' +\n\t\t'>' +\n\t\t'<saml:Issuer xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\">' + this.options.issuer + '</saml:Issuer>' +\n\t\t'<saml:NameID xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" ' +\n\t\t'NameQualifier=\"http://id.init8.net:8080/openam\" ' +\n\t\t'SPNameQualifier=\"' + this.options.issuer + '\" ' +\n\t\t'Format=\"' + this.options.identifierFormat + '\">' +\n\t\toptions.nameID + '</saml:NameID>' +\n\t\t'<samlp:SessionIndex xmlns:samlp=\"urn:oasis:names:tc:SAML:2.0:protocol\">' + options.sessionIndex + '</samlp:SessionIndex>' +\n\t\t'</samlp:LogoutRequest>';\n\tif (Meteor.settings.debug) {\n\t\tconsole.log('------- SAML Logout request -----------');\n\t\tconsole.log(request);\n\t}\n\treturn {\n\t\trequest: request,\n\t\tid: id\n\t};\n};\n\nSAML.prototype.requestToUrl = function(request, operation, callback) {\n\tvar self = this;\n\tzlib.deflateRaw(request, function(err, buffer) {\n\t\tif (err) {\n\t\t\treturn callback(err);\n\t\t}\n\n\t\tvar base64 = buffer.toString('base64');\n\t\tvar target = self.options.entryPoint;\n\n\t\tif (operation === 'logout') {\n\t\t\tif (self.options.idpSLORedirectURL) {\n\t\t\t\ttarget = self.options.idpSLORedirectURL;\n\t\t\t}\n\t\t}\n\n\t\tif (target.indexOf('?') > 0) {\n\t\t\ttarget += '&';\n\t\t} else {\n\t\t\ttarget += '?';\n\t\t}\n\n\t\t// TBD. We should really include a proper RelayState here\n\t\tvar relayState;\n\t\tif (operation === 'logout') {\n\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\trelayState = Meteor.absoluteUrl();\n\t\t} else {\n\t\t\trelayState = self.options.provider;\n\t\t}\n\n\t\tvar samlRequest = {\n\t\t\tSAMLRequest: base64,\n\t\t\tRelayState: relayState\n\t\t};\n\n\t\tif (self.options.privateCert) {\n\t\t\tsamlRequest.SigAlg = 'http://www.w3.org/2000/09/xmldsig#rsa-sha1';\n\t\t\tsamlRequest.Signature = self.signRequest(querystring.stringify(samlRequest));\n\t\t}\n\n\t\ttarget += querystring.stringify(samlRequest);\n\n\t\tif (Meteor.settings.debug) {\n\t\t\tconsole.log('requestToUrl: ' + target);\n\t\t}\n\t\tif (operation === 'logout') {\n\t\t\t// in case of logout we want to be redirected back to the Meteor app.\n\t\t\treturn callback(null, target);\n\n\t\t} else {\n\t\t\tcallback(null, target);\n\t\t}\n\t});\n};\n\nSAML.prototype.getAuthorizeUrl = function(req, callback) {\n\tvar request = this.generateAuthorizeRequest(req);\n\n\tthis.requestToUrl(request, 'authorize', callback);\n};\n\nSAML.prototype.getLogoutUrl = function(req, callback) {\n\tvar request = this.generateLogoutRequest(req);\n\n\tthis.requestToUrl(request, 'logout', callback);\n};\n\nSAML.prototype.certToPEM = function(cert) {\n\tcert = cert.match(/.{1,64}/g).join('\\n');\n\tcert = '-----BEGIN CERTIFICATE-----\\n' + cert;\n\tcert = cert + '\\n-----END CERTIFICATE-----\\n';\n\treturn cert;\n};\n\n// functionfindChilds(node, localName, namespace) {\n// \tvar res = [];\n// \tfor (var i = 0; i < node.childNodes.length; i++) {\n// \t\tvar child = node.childNodes[i];\n// \t\tif (child.localName === localName && (child.namespaceURI === namespace || !namespace)) {\n// \t\t\tres.push(child);\n// \t\t}\n// \t}\n// \treturn res;\n// }\n\nSAML.prototype.validateSignature = function(xml, cert) {\n\tvar self = this;\n\n\tvar doc = new xmldom.DOMParser().parseFromString(xml);\n\tvar signature = xmlCrypto.xpath(doc, '//*[local-name(.)=\\'Signature\\' and namespace-uri(.)=\\'http://www.w3.org/2000/09/xmldsig#\\']')[0];\n\n\tvar sig = new xmlCrypto.SignedXml();\n\n\tsig.keyInfoProvider = {\n\t\tgetKeyInfo: function(/*key*/) {\n\t\t\treturn '<X509Data></X509Data>';\n\t\t},\n\t\tgetKey: function(/*keyInfo*/) {\n\t\t\treturn self.certToPEM(cert);\n\t\t}\n\t};\n\n\tsig.loadSignature(signature);\n\n\treturn sig.checkSignature(xml);\n};\n\nSAML.prototype.getElement = function(parentElement, elementName) {\n\tif (parentElement['saml:' + elementName]) {\n\t\treturn parentElement['saml:' + elementName];\n\t} else if (parentElement['samlp:' + elementName]) {\n\t\treturn parentElement['samlp:' + elementName];\n\t} else if (parentElement['saml2p:' + elementName]) {\n\t\treturn parentElement['saml2p:' + elementName];\n\t} else if (parentElement['saml2:' + elementName]) {\n\t\treturn parentElement['saml2:' + elementName];\n\t}\n\treturn parentElement[elementName];\n};\n\nSAML.prototype.validateLogoutResponse = function(samlResponse, callback) {\n\tvar self = this;\n\n\tvar compressedSAMLResponse = new Buffer(samlResponse, 'base64');\n\tzlib.inflateRaw(compressedSAMLResponse, function(err, decoded) {\n\n\t\tif (err) {\n\t\t\tif (Meteor.settings.debug) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t} else {\n\t\t\tvar parser = new xml2js.Parser({\n\t\t\t\texplicitRoot: true\n\t\t\t});\n\t\t\tparser.parseString(decoded, function(err, doc) {\n\t\t\t\tvar response = self.getElement(doc, 'LogoutResponse');\n\n\t\t\t\tif (response) {\n\t\t\t\t\t// TBD. Check if this msg corresponds to one we sent\n\t\t\t\t\tvar inResponseTo = response.$.InResponseTo;\n\t\t\t\t\tif (Meteor.settings.debug) {\n\t\t\t\t\t\tconsole.log('In Response to: ' + inResponseTo);\n\t\t\t\t\t}\n\t\t\t\t\tvar status = self.getElement(response, 'Status');\n\t\t\t\t\tvar statusCode = self.getElement(status[0], 'StatusCode')[0].$.Value;\n\t\t\t\t\tif (Meteor.settings.debug) {\n\t\t\t\t\t\tconsole.log('StatusCode: ' + JSON.stringify(statusCode));\n\t\t\t\t\t}\n\t\t\t\t\tif (statusCode === 'urn:oasis:names:tc:SAML:2.0:status:Success') {\n\t\t\t\t\t\t// In case of a successful logout at IDP we return inResponseTo value.\n\t\t\t\t\t\t// This is the only way how we can identify the Meteor user (as we don't use Session Cookies)\n\t\t\t\t\t\tcallback(null, inResponseTo);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback('Error. Logout not confirmed by IDP', null);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcallback('No Response Found', null);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t});\n};\n\nSAML.prototype.validateResponse = function(samlResponse, relayState, callback) {\n\tvar self = this;\n\tvar xml = new Buffer(samlResponse, 'base64').toString('utf8');\n\t// We currently use RelayState to save SAML provider\n\tif (Meteor.settings.debug) {\n\t\tconsole.log('Validating response with relay state: ' + xml);\n\t}\n\tvar parser = new xml2js.Parser({\n\t\texplicitRoot: true\n\t});\n\n\tparser.parseString(xml, function(err, doc) {\n\t\t// Verify signature\n\t\tif (Meteor.settings.debug) {\n\t\t\tconsole.log('Verify signature');\n\t\t}\n\t\tif (self.options.cert && !self.validateSignature(xml, self.options.cert)) {\n\t\t\tif (Meteor.settings.debug) {\n\t\t\t\tconsole.log('Signature WRONG');\n\t\t\t}\n\t\t\treturn callback(new Error('Invalid signature'), null, false);\n\t\t}\n\t\tif (Meteor.settings.debug) {\n\t\t\tconsole.log('Signature OK');\n\t\t}\n\t\tvar response = self.getElement(doc, 'Response');\n\t\tif (Meteor.settings.debug) {\n\t\t\tconsole.log('Got response');\n\t\t}\n\t\tif (response) {\n\t\t\tvar assertion = self.getElement(response, 'Assertion');\n\t\t\tif (!assertion) {\n\t\t\t\treturn callback(new Error('Missing SAML assertion'), null, false);\n\t\t\t}\n\n\t\t\tvar profile = {};\n\n\t\t\tif (response.$ && response.$.InResponseTo) {\n\t\t\t\tprofile.inResponseToId = response.$.InResponseTo;\n\t\t\t}\n\n\t\t\tvar issuer = self.getElement(assertion[0], 'Issuer');\n\t\t\tif (issuer) {\n\t\t\t\tprofile.issuer = issuer[0]._;\n\t\t\t}\n\n\t\t\tvar subject = self.getElement(assertion[0], 'Subject');\n\n\t\t\tif (subject) {\n\t\t\t\tvar nameID = self.getElement(subject[0], 'NameID');\n\t\t\t\tif (nameID) {\n\t\t\t\t\tprofile.nameID = nameID[0]._;\n\n\t\t\t\t\tif (nameID[0].$.Format) {\n\t\t\t\t\t\tprofile.nameIDFormat = nameID[0].$.Format;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar authnStatement = self.getElement(assertion[0], 'AuthnStatement');\n\n\t\t\tif (authnStatement) {\n\t\t\t\tif (authnStatement[0].$.SessionIndex) {\n\n\t\t\t\t\tprofile.sessionIndex = authnStatement[0].$.SessionIndex;\n\t\t\t\t\tif (Meteor.settings.debug) {\n\t\t\t\t\t\tconsole.log('Session Index: ' + profile.sessionIndex);\n\t\t\t\t\t}\n\t\t\t\t} else if (Meteor.settings.debug) {\n\t\t\t\t\tconsole.log('No Session Index Found');\n\t\t\t\t}\n\n\n\t\t\t} else if (Meteor.settings.debug) {\n\t\t\t\tconsole.log('No AuthN Statement found');\n\t\t\t}\n\n\t\t\tvar attributeStatement = self.getElement(assertion[0], 'AttributeStatement');\n\t\t\tif (attributeStatement) {\n\t\t\t\tvar attributes = self.getElement(attributeStatement[0], 'Attribute');\n\n\t\t\t\tif (attributes) {\n\t\t\t\t\tattributes.forEach(function(attribute) {\n\t\t\t\t\t\tvar value = self.getElement(attribute, 'AttributeValue');\n\t\t\t\t\t\tif (typeof value[0] === 'string') {\n\t\t\t\t\t\t\tprofile[attribute.$.Name] = value[0];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprofile[attribute.$.Name] = value[0]._;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif (!profile.mail && profile['urn:oid:0.9.2342.19200300.100.1.3']) {\n\t\t\t\t\t// See http://www.incommonfederation.org/attributesummary.html for definition of attribute OIDs\n\t\t\t\t\tprofile.mail = profile['urn:oid:0.9.2342.19200300.100.1.3'];\n\t\t\t\t}\n\n\t\t\t\tif (!profile.email && profile.mail) {\n\t\t\t\t\tprofile.email = profile.mail;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!profile.email && profile.nameID && profile.nameIDFormat && profile.nameIDFormat.indexOf('emailAddress') >= 0) {\n\t\t\t\tprofile.email = profile.nameID;\n\t\t\t}\n\t\t\tif (Meteor.settings.debug) {\n\t\t\t\tconsole.log('NameID: ' + JSON.stringify(profile));\n\t\t\t}\n\n\t\t\tcallback(null, profile, false);\n\t\t} else {\n\t\t\tvar logoutResponse = self.getElement(doc, 'LogoutResponse');\n\n\t\t\tif (logoutResponse) {\n\t\t\t\tcallback(null, null, true);\n\t\t\t} else {\n\t\t\t\treturn callback(new Error('Unknown SAML response message'), null, false);\n\t\t\t}\n\n\t\t}\n\t});\n};\n\nvar decryptionCert;\nSAML.prototype.generateServiceProviderMetadata = function(callbackUrl) {\n\n\tvar keyDescriptor = null;\n\n\tif (!decryptionCert) {\n\t\tdecryptionCert = this.options.privateCert;\n\t}\n\n\tif (this.options.privateKey) {\n\t\tif (!decryptionCert) {\n\t\t\tthrow new Error(\n\t\t\t\t'Missing decryptionCert while generating metadata for decrypting service provider');\n\t\t}\n\n\t\tdecryptionCert = decryptionCert.replace(/-+BEGIN CERTIFICATE-+\\r?\\n?/, '');\n\t\tdecryptionCert = decryptionCert.replace(/-+END CERTIFICATE-+\\r?\\n?/, '');\n\t\tdecryptionCert = decryptionCert.replace(/\\r\\n/g, '\\n');\n\n\t\tkeyDescriptor = {\n\t\t\t'ds:KeyInfo': {\n\t\t\t\t'ds:X509Data': {\n\t\t\t\t\t'ds:X509Certificate': {\n\t\t\t\t\t\t'#text': decryptionCert\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t'#list': [\n\t\t\t\t// this should be the set that the xmlenc library supports\n\t\t\t\t{\n\t\t\t\t\t'EncryptionMethod': {\n\t\t\t\t\t\t'@Algorithm': 'http://www.w3.org/2001/04/xmlenc#aes256-cbc'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'EncryptionMethod': {\n\t\t\t\t\t\t'@Algorithm': 'http://www.w3.org/2001/04/xmlenc#aes128-cbc'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'EncryptionMethod': {\n\t\t\t\t\t\t'@Algorithm': 'http://www.w3.org/2001/04/xmlenc#tripledes-cbc'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\tif (!this.options.callbackUrl && !callbackUrl) {\n\t\tthrow new Error(\n\t\t\t'Unable to generate service provider metadata when callbackUrl option is not set');\n\t}\n\n\tvar metadata = {\n\t\t'EntityDescriptor': {\n\t\t\t'@xmlns': 'urn:oasis:names:tc:SAML:2.0:metadata',\n\t\t\t'@xmlns:ds': 'http://www.w3.org/2000/09/xmldsig#',\n\t\t\t'@entityID': this.options.issuer,\n\t\t\t'SPSSODescriptor': {\n\t\t\t\t'@protocolSupportEnumeration': 'urn:oasis:names:tc:SAML:2.0:protocol',\n\t\t\t\t'KeyDescriptor': keyDescriptor,\n\t\t\t\t'SingleLogoutService': {\n\t\t\t\t\t'@Binding': 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect',\n\t\t\t\t\t'@Location': Meteor.absoluteUrl() + '_saml/logout/' + this.options.provider + '/',\n\t\t\t\t\t'@ResponseLocation': Meteor.absoluteUrl() + '_saml/logout/' + this.options.provider + '/'\n\t\t\t\t},\n\t\t\t\t'NameIDFormat': this.options.identifierFormat,\n\t\t\t\t'AssertionConsumerService': {\n\t\t\t\t\t'@index': '1',\n\t\t\t\t\t'@isDefault': 'true',\n\t\t\t\t\t'@Binding': 'urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST',\n\t\t\t\t\t'@Location': callbackUrl\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn xmlbuilder.create(metadata).end({\n\t\tpretty: true,\n\t\tindent: '  ',\n\t\tnewline: '\\n'\n\t});\n};\n"]}
{"version":3,"sources":["meteor://ðŸ’»app/packages/jalik:ufs/ufs.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-config.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-filter.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-methods.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-mime.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-server.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-store-permissions.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-store.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-template-helpers.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-tokens.js","meteor://ðŸ’»app/packages/jalik:ufs/ufs-uploader.js"],"names":["module","export","UploadFS","_","import","v","Meteor","Mongo","MIME","Random","Tokens","Config","Filter","Store","StorePermissions","Uploader","stores","store","tokens","addETagAttributeToFiles","where","each","getStores","files","getCollection","find","etag","fields","_id","forEach","file","direct","update","$set","generateEtag","addMimeType","extension","mime","toLowerCase","addPathAttributeToFiles","path","getFileRelativeURL","id","getMimeType","getMimeTypes","getStore","name","getTempFilePath","fileId","config","tmpDir","importFromURL","url","callback","call","readAsArrayBuffer","event","console","error","selectFile","input","document","createElement","type","multiple","onchange","ev","target","style","body","appendChild","click","selectFiles","i","length","isClient","require","isServer","global","window","options","extend","defaultStorePermissions","https","simulateReadDelay","simulateUploadSpeed","simulateWriteDelay","storesPath","tmpDirPermissions","TypeError","parseInt","contentTypes","extensions","minSize","maxSize","onCheck","Array","getContentTypes","getExtensions","getMaxSize","getMinSize","check","Error","size","contains","isContentTypeInList","list","wildCardGlob","wildcards","filter","item","indexOf","replace","isValid","result","err","fs","Npm","http","Future","methods","ufsComplete","storeName","token","String","checkToken","fut","tmpFile","removeTempFile","unlink","message","findOne","validate","rs","createReadStream","flags","encoding","autoClose","on","bindEnvironment","remove","throw","write","return","wait","ufsCreate","Object","complete","uploading","substr","lastIndexOf","progress","userId","getFilter","create","createToken","uploadUrl","getURL","ufsDelete","count","ufsImportURL","split","pop","originalUrl","warn","proto","test","unblock","get","res","ufsStop","WebApp","domain","mkdirp","stream","URL","zlib","startup","mode","stat","log","chmod","d","connectHandlers","use","req","next","parsedUrl","parse","pathname","allowCORS","setHeader","method","regExp","RegExp","match","exec","writeHead","end","query","ws","createWriteStream","parseFloat","isNaN","Math","min","chunk","onRead","undefined","index","_sleepForMs","run","status","headers","modifiedAt","Date","toUTCString","uploadedAt","modifiedSince","range","positions","start","total","getReadStream","PassThrough","onReadError","emit","transformRead","accept","pipe","createGzip","createDeflate","insert","actions","action","modifiers","checkInsert","checkRemove","checkUpdate","self","collection","onCopyError","onFinishUpload","onValidate","onWriteError","permissions","transformWrite","Collection","copyTo","getName","setPermissions","value","copy","omit","originalStore","originalId","copyId","generateToken","createdAt","pattern","c","r","random","s","toString","round","toUpperCase","readStream","writeStream","request","getWriteStream","errorHandler","data","getFileURL","after","before","delete","response","getRelativeURL","rootUrl","absoluteUrl","rootPath","trim","encodeURI","Template","isMIME","registerHelper","adaptive","capacity","chunkSize","maxChunkSize","maxTries","onAbort","onComplete","onCreate","onError","onProgress","onStart","onStop","retryDelay","transferDelay","RangeError","Blob","File","capacityMargin","offset","loaded","tries","postUrl","timeA","timeB","elapsedTime","startTime","finish","uploadedFile","abort","getAverageSpeed","seconds","getElapsedTime","getLoaded","isUploading","now","getFile","getProgress","getRemainingTime","averageSpeed","remainingBytes","max","getSpeed","getTotal","isComplete","readChunk","slice","setTimeout","sendChunk","duration","abs","xhr","XMLHttpRequest","onreadystatechange","readyState","open","send","stop"],"mappings":"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","file":"/packages/jalik_ufs.js","sourcesContent":["/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {Mongo} from 'meteor/mongo';\r\nimport {MIME} from './ufs-mime';\r\nimport {Random} from 'meteor/random';\r\nimport {Tokens} from './ufs-tokens';\r\n\r\n\r\nlet stores = {};\r\n\r\nexport const UploadFS = {\r\n\r\n    /**\r\n     * Contains all stores\r\n     */\r\n    store: {},\r\n\r\n    /**\r\n     * Collection of tokens\r\n     */\r\n    tokens: Tokens,\r\n\r\n    /**\r\n     * Adds the \"etag\" attribute to files\r\n     * @param where\r\n     */\r\n    addETagAttributeToFiles(where) {\r\n        _.each(this.getStores(), (store) => {\r\n            const files = store.getCollection();\r\n\r\n            // By default update only files with no path set\r\n            files.find(where || {etag: null}, {fields: {_id: 1}}).forEach((file) => {\r\n                files.direct.update(file._id, {$set: {etag: this.generateEtag()}});\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Adds the MIME type for an extension\r\n     * @param extension\r\n     * @param mime\r\n     */\r\n    addMimeType(extension, mime) {\r\n        MIME[extension.toLowerCase()] = mime;\r\n    },\r\n\r\n    /**\r\n     * Adds the \"path\" attribute to files\r\n     * @param where\r\n     */\r\n    addPathAttributeToFiles(where) {\r\n        _.each(this.getStores(), (store) => {\r\n            const files = store.getCollection();\r\n\r\n            // By default update only files with no path set\r\n            files.find(where || {path: null}, {fields: {_id: 1}}).forEach((file) => {\r\n                files.direct.update(file._id, {$set: {path: store.getFileRelativeURL(file._id)}});\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Generates a unique ETag\r\n     * @return {string}\r\n     */\r\n    generateEtag() {\r\n        return Random.id();\r\n    },\r\n\r\n    /**\r\n     * Returns the MIME type of the extension\r\n     * @param extension\r\n     * @returns {*}\r\n     */\r\n    getMimeType(extension) {\r\n        extension = extension.toLowerCase();\r\n        return MIME[extension];\r\n    },\r\n\r\n    /**\r\n     * Returns all MIME types\r\n     */\r\n    getMimeTypes() {\r\n        return MIME;\r\n    },\r\n\r\n    /**\r\n     * Returns the store by its name\r\n     * @param name\r\n     * @return {UploadFS.Store}\r\n     */\r\n    getStore(name) {\r\n        return stores[name];\r\n    },\r\n\r\n    /**\r\n     * Returns all stores\r\n     * @return {object}\r\n     */\r\n    getStores() {\r\n        return stores;\r\n    },\r\n\r\n    /**\r\n     * Returns the temporary file path\r\n     * @param fileId\r\n     * @return {string}\r\n     */\r\n    getTempFilePath(fileId) {\r\n        return `${this.config.tmpDir}/${fileId}`;\r\n    },\r\n\r\n    /**\r\n     * Imports a file from a URL\r\n     * @param url\r\n     * @param file\r\n     * @param store\r\n     * @param callback\r\n     */\r\n    importFromURL(url, file, store, callback) {\r\n        if (typeof store === 'string') {\r\n            Meteor.call('ufsImportURL', url, file, store, callback);\r\n        }\r\n        else if (typeof store === 'object') {\r\n            store.importFromURL(url, file, callback);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Returns file and data as ArrayBuffer for each files in the event\r\n     * @deprecated\r\n     * @param event\r\n     * @param callback\r\n     */\r\n    readAsArrayBuffer (event, callback) {\r\n        console.error('UploadFS.readAsArrayBuffer is deprecated, see https://github.com/jalik/jalik-ufs#uploading-from-a-file');\r\n    },\r\n\r\n    /**\r\n     * Opens a dialog to select a single file\r\n     * @param callback\r\n     */\r\n    selectFile(callback) {\r\n        let input = document.createElement('input');\r\n        input.type = 'file';\r\n        input.multiple = false;\r\n        input.onchange = (ev) => {\r\n            let files = ev.target.files;\r\n            callback.call(UploadFS, files[0]);\r\n        };\r\n        // Fix for iOS\r\n        input.style = 'display:none';\r\n        document.body.appendChild(input);\r\n        input.click();\r\n    },\r\n\r\n    /**\r\n     * Opens a dialog to select multiple files\r\n     * @param callback\r\n     */\r\n    selectFiles(callback) {\r\n        let input = document.createElement('input');\r\n        input.type = 'file';\r\n        input.multiple = true;\r\n        input.onchange = (ev) => {\r\n            let files = ev.target.files;\r\n\r\n            for (let i = 0; i < files.length; i += 1) {\r\n                callback.call(UploadFS, files[i]);\r\n            }\r\n        };\r\n        // Fix for iOS\r\n        input.style = 'display:none';\r\n        document.body.appendChild(input);\r\n        input.click();\r\n    }\r\n};\r\n\r\n\r\nimport {Config} from './ufs-config';\r\nimport {Filter} from './ufs-filter';\r\nimport {Store} from './ufs-store';\r\nimport {StorePermissions} from './ufs-store-permissions';\r\nimport {Uploader} from './ufs-uploader';\r\n\r\nif (Meteor.isClient) {\r\n    require('./ufs-template-helpers');\r\n}\r\nif (Meteor.isServer) {\r\n    require('./ufs-methods');\r\n    require('./ufs-server');\r\n}\r\n\r\n/**\r\n * UploadFS Configuration\r\n * @type {Config}\r\n */\r\nUploadFS.config = new Config();\r\n\r\n// Add classes to global namespace\r\nUploadFS.Config = Config;\r\nUploadFS.Filter = Filter;\r\nUploadFS.Store = Store;\r\nUploadFS.StorePermissions = StorePermissions;\r\nUploadFS.Uploader = Uploader;\r\n\r\nif (Meteor.isServer) {\r\n    // Expose the module globally\r\n    if (typeof global !== 'undefined') {\r\n        global['UploadFS'] = UploadFS;\r\n    }\r\n}\r\nelse if (Meteor.isClient) {\r\n    // Expose the module globally\r\n    if (typeof window !== 'undefined') {\r\n        window.UploadFS = UploadFS;\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {StorePermissions} from './ufs-store-permissions';\r\n\r\n\r\n/**\r\n * UploadFS configuration\r\n */\r\nexport class Config {\r\n\r\n    constructor(options) {\r\n        // Default options\r\n        options = _.extend({\r\n            defaultStorePermissions: null,\r\n            https: false,\r\n            simulateReadDelay: 0,\r\n            simulateUploadSpeed: 0,\r\n            simulateWriteDelay: 0,\r\n            storesPath: 'ufs',\r\n            tmpDir: '/tmp/ufs',\r\n            tmpDirPermissions: '0700'\r\n        }, options);\r\n\r\n        // Check options\r\n        if (options.defaultStorePermissions && !(options.defaultStorePermissions instanceof StorePermissions)) {\r\n            throw new TypeError('Config: defaultStorePermissions is not an instance of StorePermissions');\r\n        }\r\n        if (typeof options.https !== 'boolean') {\r\n            throw new TypeError('Config: https is not a function');\r\n        }\r\n        if (typeof options.simulateReadDelay !== 'number') {\r\n            throw new TypeError('Config: simulateReadDelay is not a number');\r\n        }\r\n        if (typeof options.simulateUploadSpeed !== 'number') {\r\n            throw new TypeError('Config: simulateUploadSpeed is not a number');\r\n        }\r\n        if (typeof options.simulateWriteDelay !== 'number') {\r\n            throw new TypeError('Config: simulateWriteDelay is not a number');\r\n        }\r\n        if (typeof options.storesPath !== 'string') {\r\n            throw new TypeError('Config: storesPath is not a string');\r\n        }\r\n        if (typeof options.tmpDir !== 'string') {\r\n            throw new TypeError('Config: tmpDir is not a string');\r\n        }\r\n        if (typeof options.tmpDirPermissions !== 'string') {\r\n            throw new TypeError('Config: tmpDirPermissions is not a string');\r\n        }\r\n\r\n        /**\r\n         * Default store permissions\r\n         * @type {UploadFS.StorePermissions}\r\n         */\r\n        this.defaultStorePermissions = options.defaultStorePermissions;\r\n        /**\r\n         * Use or not secured protocol in URLS\r\n         * @type {boolean}\r\n         */\r\n        this.https = options.https;\r\n        /**\r\n         * The simulation read delay\r\n         * @type {Number}\r\n         */\r\n        this.simulateReadDelay = parseInt(options.simulateReadDelay);\r\n        /**\r\n         * The simulation upload speed\r\n         * @type {Number}\r\n         */\r\n        this.simulateUploadSpeed = parseInt(options.simulateUploadSpeed);\r\n        /**\r\n         * The simulation write delay\r\n         * @type {Number}\r\n         */\r\n        this.simulateWriteDelay = parseInt(options.simulateWriteDelay);\r\n        /**\r\n         * The URL root path of stores\r\n         * @type {string}\r\n         */\r\n        this.storesPath = options.storesPath;\r\n        /**\r\n         * The temporary directory of uploading files\r\n         * @type {string}\r\n         */\r\n        this.tmpDir = options.tmpDir;\r\n        /**\r\n         * The permissions of the temporary directory\r\n         * @type {string}\r\n         */\r\n        this.tmpDirPermissions = options.tmpDirPermissions;\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {Meteor} from 'meteor/meteor';\r\n\r\n\r\n/**\r\n * File filter\r\n */\r\nexport class Filter {\r\n\r\n    constructor(options) {\r\n        // Default options\r\n        options = _.extend({\r\n            contentTypes: null,\r\n            extensions: null,\r\n            minSize: 1,\r\n            maxSize: 0,\r\n            onCheck: null\r\n        }, options);\r\n\r\n        // Check options\r\n        if (options.contentTypes && !(options.contentTypes instanceof Array)) {\r\n            throw new TypeError(\"Filter: contentTypes is not an Array\");\r\n        }\r\n        if (options.extensions && !(options.extensions instanceof Array)) {\r\n            throw new TypeError(\"Filter: extensions is not an Array\");\r\n        }\r\n        if (typeof options.minSize !== \"number\") {\r\n            throw new TypeError(\"Filter: minSize is not a number\");\r\n        }\r\n        if (typeof options.maxSize !== \"number\") {\r\n            throw new TypeError(\"Filter: maxSize is not a number\");\r\n        }\r\n        if (options.onCheck && typeof options.onCheck !== \"function\") {\r\n            throw new TypeError(\"Filter: onCheck is not a function\");\r\n        }\r\n\r\n        // Private attributes\r\n        let contentTypes = options.contentTypes;\r\n        let extensions = options.extensions;\r\n        let maxSize = parseInt(options.maxSize);\r\n        let minSize = parseInt(options.minSize);\r\n\r\n        this.onCheck = options.onCheck;\r\n\r\n        /**\r\n         * Returns the allowed content types\r\n         * @return {Array}\r\n         */\r\n        this.getContentTypes = () => {\r\n            return contentTypes;\r\n        };\r\n\r\n        /**\r\n         * Returns the allowed extensions\r\n         * @return {Array}\r\n         */\r\n        this.getExtensions = () => {\r\n            return extensions;\r\n        };\r\n\r\n        /**\r\n         * Returns the maximum file size\r\n         * @return {Number}\r\n         */\r\n        this.getMaxSize = () => {\r\n            return maxSize;\r\n        };\r\n\r\n        /**\r\n         * Returns the minimum file size\r\n         * @return {Number}\r\n         */\r\n        this.getMinSize = () => {\r\n            return minSize;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Checks the file\r\n     * @param file\r\n     */\r\n    check(file) {\r\n        if (typeof file !== \"object\" || !file) {\r\n            throw new Meteor.Error('invalid-file', \"File is not valid\");\r\n        }\r\n        // Check size\r\n        if (file.size <= 0 || file.size < this.getMinSize()) {\r\n            throw new Meteor.Error('file-too-small', `File size is too small (min = ${this.getMinSize()})`);\r\n        }\r\n        if (this.getMaxSize() > 0 && file.size > this.getMaxSize()) {\r\n            throw new Meteor.Error('file-too-large', `File size is too large (max = ${this.getMaxSize()})`);\r\n        }\r\n        // Check extension\r\n        if (this.getExtensions() && !_.contains(this.getExtensions(), file.extension)) {\r\n            throw new Meteor.Error('invalid-file-extension', `File extension \"${file.extension}\" is not accepted`);\r\n        }\r\n        // Check content type\r\n        if (this.getContentTypes() && !this.isContentTypeInList(file.type, this.getContentTypes())) {\r\n            throw new Meteor.Error('invalid-file-type', `File type \"${file.type}\" is not accepted`);\r\n        }\r\n        // Apply custom check\r\n        if (typeof this.onCheck === 'function' && !this.onCheck(file)) {\r\n            throw new Meteor.Error('invalid-file', \"File does not match filter\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if content type is in the given list\r\n     * @param type\r\n     * @param list\r\n     * @return {boolean}\r\n     */\r\n    isContentTypeInList(type, list) {\r\n        if (typeof type === 'string' && list instanceof Array) {\r\n            if (_.contains(list, type)) {\r\n                return true;\r\n            } else {\r\n                let wildCardGlob = '/*';\r\n                let wildcards = _.filter(list, (item) => {\r\n                    return item.indexOf(wildCardGlob) > 0;\r\n                });\r\n\r\n                if (_.contains(wildcards, type.replace(/(\\/.*)$/, wildCardGlob))) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Checks if the file matches filter\r\n     * @param file\r\n     * @return {boolean}\r\n     */\r\n    isValid(file) {\r\n        let result = true;\r\n        try {\r\n            this.check(file);\r\n        } catch (err) {\r\n            result = false;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Executes custom checks\r\n     * @param file\r\n     * @return {boolean}\r\n     */\r\n    onCheck(file) {\r\n        return true;\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {check} from 'meteor/check';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {UploadFS} from './ufs';\r\nimport {Filter} from './ufs-filter';\r\nimport {Tokens} from './ufs-tokens';\r\n\r\nconst fs = Npm.require('fs');\r\nconst http = Npm.require('http');\r\nconst https = Npm.require('https');\r\nconst Future = Npm.require('fibers/future');\r\n\r\n\r\nif (Meteor.isServer) {\r\n    Meteor.methods({\r\n\r\n        /**\r\n         * Completes the file transfer\r\n         * @param fileId\r\n         * @param storeName\r\n         * @param token\r\n         */\r\n        ufsComplete(fileId, storeName, token) {\r\n            check(fileId, String);\r\n            check(storeName, String);\r\n            check(token, String);\r\n\r\n            // Get store\r\n            let store = UploadFS.getStore(storeName);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', \"Store not found\");\r\n            }\r\n            // Check token\r\n            if (!store.checkToken(token, fileId)) {\r\n                throw new Meteor.Error('invalid-token', \"Token is not valid\");\r\n            }\r\n\r\n            let fut = new Future();\r\n            let tmpFile = UploadFS.getTempFilePath(fileId);\r\n\r\n            const removeTempFile = function () {\r\n                fs.unlink(tmpFile, function (err) {\r\n                    err && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\r\n                });\r\n            };\r\n\r\n            try {\r\n                // todo check if temp file exists\r\n\r\n                // Get file\r\n                let file = store.getCollection().findOne({_id: fileId});\r\n\r\n                // Validate file before moving to the store\r\n                store.validate(file);\r\n\r\n                // Get the temp file\r\n                let rs = fs.createReadStream(tmpFile, {\r\n                    flags: 'r',\r\n                    encoding: null,\r\n                    autoClose: true\r\n                });\r\n\r\n                // Clean upload if error occurs\r\n                rs.on('error', Meteor.bindEnvironment(function (err) {\r\n                    console.error(err);\r\n                    store.getCollection().remove({_id: fileId});\r\n                    fut.throw(err);\r\n                }));\r\n\r\n                // Save file in the store\r\n                store.write(rs, fileId, Meteor.bindEnvironment(function (err, file) {\r\n                    removeTempFile();\r\n\r\n                    if (err) {\r\n                        fut.throw(err);\r\n                    } else {\r\n                        // File has been fully uploaded\r\n                        // so we don't need to keep the token anymore.\r\n                        // Also this ensure that the file cannot be modified with extra chunks later.\r\n                        Tokens.remove({fileId: fileId});\r\n                        fut.return(file);\r\n                    }\r\n                }));\r\n            }\r\n            catch (err) {\r\n                // If write failed, remove the file\r\n                store.getCollection().remove({_id: fileId});\r\n                // removeTempFile();\r\n                fut.throw(err);\r\n            }\r\n            return fut.wait();\r\n        },\r\n\r\n        /**\r\n         * Creates the file and returns the file upload token\r\n         * @param file\r\n         * @return {{fileId: string, token: *, url: *}}\r\n         */\r\n        ufsCreate(file) {\r\n            check(file, Object);\r\n\r\n            if (typeof file.name !== 'string' || !file.name.length) {\r\n                throw new Meteor.Error('invalid-file-name', \"file name is not valid\");\r\n            }\r\n            if (typeof file.store !== 'string' || !file.store.length) {\r\n                throw new Meteor.Error('invalid-store', \"store is not valid\");\r\n            }\r\n            // Get store\r\n            let store = UploadFS.getStore(file.store);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', \"Store not found\");\r\n            }\r\n\r\n            // Set default info\r\n            file.complete = false;\r\n            file.uploading = false;\r\n            file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\r\n            // Assign file MIME type based on the extension\r\n            if (file.extension && !file.type) {\r\n                file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\r\n            }\r\n            file.progress = 0;\r\n            file.size = parseInt(file.size) || 0;\r\n            file.userId = file.userId || this.userId;\r\n\r\n            // Check if the file matches store filter\r\n            let filter = store.getFilter();\r\n            if (filter instanceof Filter) {\r\n                filter.check(file);\r\n            }\r\n\r\n            // Create the file\r\n            let fileId = store.create(file);\r\n            let token = store.createToken(fileId);\r\n            let uploadUrl = store.getURL(`${fileId}?token=${token}`);\r\n\r\n            return {\r\n                fileId: fileId,\r\n                token: token,\r\n                url: uploadUrl\r\n            };\r\n        },\r\n\r\n        /**\r\n         * Deletes a file\r\n         * @param fileId\r\n         * @param storeName\r\n         * @param token\r\n         * @returns {*}\r\n         */\r\n        ufsDelete(fileId, storeName, token) {\r\n            check(fileId, String);\r\n            check(storeName, String);\r\n            check(token, String);\r\n\r\n            // Check store\r\n            let store = UploadFS.getStore(storeName);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', \"Store not found\");\r\n            }\r\n            // Ignore files that does not exist\r\n            if (store.getCollection().find({_id: fileId}).count() === 0) {\r\n                return 1;\r\n            }\r\n            // Check token\r\n            if (!store.checkToken(token, fileId)) {\r\n                throw new Meteor.Error('invalid-token', \"Token is not valid\");\r\n            }\r\n            return store.getCollection().remove({_id: fileId});\r\n        },\r\n\r\n        /**\r\n         * Imports a file from the URL\r\n         * @param url\r\n         * @param file\r\n         * @param storeName\r\n         * @return {*}\r\n         */\r\n        ufsImportURL(url, file, storeName) {\r\n            check(url, String);\r\n            check(file, Object);\r\n            check(storeName, String);\r\n\r\n            // Check URL\r\n            if (typeof url !== 'string' || url.length <= 0) {\r\n                throw new Meteor.Error('invalid-url', \"The url is not valid\");\r\n            }\r\n            // Check file\r\n            if (typeof file !== 'object' || file === null) {\r\n                throw new Meteor.Error('invalid-file', \"The file is not valid\");\r\n            }\r\n            // Check store\r\n            const store = UploadFS.getStore(storeName);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', 'The store does not exist');\r\n            }\r\n\r\n            // Extract file info\r\n            if (!file.name) {\r\n                file.name = url.replace(/\\?.*$/, '').split('/').pop();\r\n            }\r\n            if (file.name && !file.extension) {\r\n                file.extension = file.name && file.name.substr((~-file.name.lastIndexOf('.') >>> 0) + 2).toLowerCase();\r\n            }\r\n            if (file.extension && !file.type) {\r\n                // Assign file MIME type based on the extension\r\n                file.type = UploadFS.getMimeType(file.extension) || 'application/octet-stream';\r\n            }\r\n            // Check if file is valid\r\n            if (store.getFilter() instanceof Filter) {\r\n                store.getFilter().check(file);\r\n            }\r\n\r\n            if (file.originalUrl) {\r\n                console.warn(`ufs: The \"originalUrl\" attribute is automatically set when importing a file from a URL`);\r\n            }\r\n\r\n            // Add original URL\r\n            file.originalUrl = url;\r\n\r\n            // Create the file\r\n            file.complete = false;\r\n            file.uploading = true;\r\n            file.progress = 0;\r\n            file._id = store.create(file);\r\n\r\n            let fut = new Future();\r\n            let proto;\r\n\r\n            // Detect protocol to use\r\n            if (/http:\\/\\//i.test(url)) {\r\n                proto = http;\r\n            } else if (/https:\\/\\//i.test(url)) {\r\n                proto = https;\r\n            }\r\n\r\n            this.unblock();\r\n\r\n            // Download file\r\n            proto.get(url, Meteor.bindEnvironment(function (res) {\r\n                // Save the file in the store\r\n                store.write(res, file._id, function (err, file) {\r\n                    if (err) {\r\n                        fut.throw(err);\r\n                    } else {\r\n                        fut.return(file);\r\n                    }\r\n                });\r\n            })).on('error', function (err) {\r\n                fut.throw(err);\r\n            });\r\n            return fut.wait();\r\n        },\r\n\r\n        /**\r\n         * Marks the file uploading as stopped\r\n         * @param fileId\r\n         * @param storeName\r\n         * @param token\r\n         * @returns {*}\r\n         */\r\n        ufsStop(fileId, storeName, token) {\r\n            check(fileId, String);\r\n            check(storeName, String);\r\n            check(token, String);\r\n\r\n            // Check store\r\n            const store = UploadFS.getStore(storeName);\r\n            if (!store) {\r\n                throw new Meteor.Error('invalid-store', \"Store not found\");\r\n            }\r\n            // Check file\r\n            const file = store.getCollection().find({_id: fileId}, {fields: {userId: 1}});\r\n            if (!file) {\r\n                throw new Meteor.Error('invalid-file', \"File not found\");\r\n            }\r\n            // Check token\r\n            if (!store.checkToken(token, fileId)) {\r\n                throw new Meteor.Error('invalid-token', \"Token is not valid\");\r\n            }\r\n\r\n            return store.getCollection().update({_id: fileId}, {\r\n                $set: {uploading: false}\r\n            });\r\n        }\r\n    });\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\n/**\r\n * MIME types and extensions\r\n */\r\nexport const MIME = {\r\n\r\n    // application\r\n    '7z': 'application/x-7z-compressed',\r\n    'arc': 'application/octet-stream',\r\n    'ai': 'application/postscript',\r\n    'bin': 'application/octet-stream',\r\n    'bz': 'application/x-bzip',\r\n    'bz2': 'application/x-bzip2',\r\n    'eps': 'application/postscript',\r\n    'exe': 'application/octet-stream',\r\n    'gz': 'application/x-gzip',\r\n    'gzip': 'application/x-gzip',\r\n    'js': 'application/javascript',\r\n    'json': 'application/json',\r\n    'ogx': 'application/ogg',\r\n    'pdf': 'application/pdf',\r\n    'ps': 'application/postscript',\r\n    'psd': 'application/octet-stream',\r\n    'rar': 'application/x-rar-compressed',\r\n    'rev': 'application/x-rar-compressed',\r\n    'swf': 'application/x-shockwave-flash',\r\n    'tar': 'application/x-tar',\r\n    'xhtml': 'application/xhtml+xml',\r\n    'xml': 'application/xml',\r\n    'zip': 'application/zip',\r\n\r\n    // audio\r\n    'aif': 'audio/aiff',\r\n    'aifc': 'audio/aiff',\r\n    'aiff': 'audio/aiff',\r\n    'au': 'audio/basic',\r\n    'flac': 'audio/flac',\r\n    'midi': 'audio/midi',\r\n    'mp2': 'audio/mpeg',\r\n    'mp3': 'audio/mpeg',\r\n    'mpa': 'audio/mpeg',\r\n    'oga': 'audio/ogg',\r\n    'ogg': 'audio/ogg',\r\n    'opus': 'audio/ogg',\r\n    'ra': 'audio/vnd.rn-realaudio',\r\n    'spx': 'audio/ogg',\r\n    'wav': 'audio/x-wav',\r\n    'weba': 'audio/webm',\r\n    'wma': 'audio/x-ms-wma',\r\n\r\n    // image\r\n    'avs': 'image/avs-video',\r\n    'bmp': 'image/x-windows-bmp',\r\n    'gif': 'image/gif',\r\n    'ico': 'image/vnd.microsoft.icon',\r\n    'jpeg': 'image/jpeg',\r\n    'jpg': 'image/jpg',\r\n    'mjpg': 'image/x-motion-jpeg',\r\n    'pic': 'image/pic',\r\n    'png': 'image/png',\r\n    'svg': 'image/svg+xml',\r\n    'tif': 'image/tiff',\r\n    'tiff': 'image/tiff',\r\n\r\n    // text\r\n    'css': 'text/css',\r\n    'csv': 'text/csv',\r\n    'html': 'text/html',\r\n    'txt': 'text/plain',\r\n\r\n    // video\r\n    'avi': 'video/avi',\r\n    'dv': 'video/x-dv',\r\n    'flv': 'video/x-flv',\r\n    'mov': 'video/quicktime',\r\n    'mp4': 'video/mp4',\r\n    'mpeg': 'video/mpeg',\r\n    'mpg': 'video/mpg',\r\n    'ogv': 'video/ogg',\r\n    'vdo': 'video/vdo',\r\n    'webm': 'video/webm',\r\n    'wmv': 'video/x-ms-wmv',\r\n\r\n    // specific to vendors\r\n    'doc': 'application/msword',\r\n    'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'odb': 'application/vnd.oasis.opendocument.database',\r\n    'odc': 'application/vnd.oasis.opendocument.chart',\r\n    'odf': 'application/vnd.oasis.opendocument.formula',\r\n    'odg': 'application/vnd.oasis.opendocument.graphics',\r\n    'odi': 'application/vnd.oasis.opendocument.image',\r\n    'odm': 'application/vnd.oasis.opendocument.text-master',\r\n    'odp': 'application/vnd.oasis.opendocument.presentation',\r\n    'ods': 'application/vnd.oasis.opendocument.spreadsheet',\r\n    'odt': 'application/vnd.oasis.opendocument.text',\r\n    'otg': 'application/vnd.oasis.opendocument.graphics-template',\r\n    'otp': 'application/vnd.oasis.opendocument.presentation-template',\r\n    'ots': 'application/vnd.oasis.opendocument.spreadsheet-template',\r\n    'ott': 'application/vnd.oasis.opendocument.text-template',\r\n    'ppt': 'application/vnd.ms-powerpoint',\r\n    'pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n    'xls': 'application/vnd.ms-excel',\r\n    'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n};\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {WebApp} from 'meteor/webapp';\r\nimport {UploadFS} from './ufs';\r\n\r\n\r\nif (Meteor.isServer) {\r\n\r\n    const domain = Npm.require('domain');\r\n    const fs = Npm.require('fs');\r\n    const http = Npm.require('http');\r\n    const https = Npm.require('https');\r\n    const mkdirp = Npm.require('mkdirp');\r\n    const stream = Npm.require('stream');\r\n    const URL = Npm.require('url');\r\n    const zlib = Npm.require('zlib');\r\n\r\n\r\n    Meteor.startup(() => {\r\n        let path = UploadFS.config.tmpDir;\r\n        let mode = UploadFS.config.tmpDirPermissions;\r\n\r\n        fs.stat(path, (err) => {\r\n            if (err) {\r\n                // Create the temp directory\r\n                mkdirp(path, {mode: mode}, (err) => {\r\n                    if (err) {\r\n                        console.error(`ufs: cannot create temp directory at \"${path}\" (${err.message})`);\r\n                    } else {\r\n                        console.log(`ufs: temp directory created at \"${path}\"`);\r\n                    }\r\n                });\r\n            } else {\r\n                // Set directory permissions\r\n                fs.chmod(path, mode, (err) => {\r\n                    err && console.error(`ufs: cannot set temp directory permissions ${mode} (${err.message})`);\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    // Create domain to handle errors\r\n    // and possibly avoid server crashes.\r\n    let d = domain.create();\r\n\r\n    d.on('error', (err) => {\r\n        console.error('ufs: ' + err.message);\r\n    });\r\n\r\n    // Listen HTTP requests to serve files\r\n    WebApp.connectHandlers.use((req, res, next) => {\r\n        // Quick check to see if request should be catch\r\n        if (req.url.indexOf(UploadFS.config.storesPath) === -1) {\r\n            next();\r\n            return;\r\n        }\r\n\r\n        // Remove store path\r\n        let parsedUrl = URL.parse(req.url);\r\n        let path = parsedUrl.pathname.substr(UploadFS.config.storesPath.length + 1);\r\n\r\n        let allowCORS = () => {\r\n            // res.setHeader('Access-Control-Allow-Origin', req.headers.origin);\r\n            res.setHeader(\"Access-Control-Allow-Methods\", \"POST\");\r\n            res.setHeader(\"Access-Control-Allow-Origin\", \"*\");\r\n            res.setHeader(\"Access-Control-Allow-Headers\", \"Content-Type\");\r\n        };\r\n\r\n        if (req.method === \"OPTIONS\") {\r\n            let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)$');\r\n            let match = regExp.exec(path);\r\n\r\n            // Request is not valid\r\n            if (match === null) {\r\n                res.writeHead(400);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Get store\r\n            let store = UploadFS.getStore(match[1]);\r\n            if (!store) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // If a store is found, go ahead and allow the origin\r\n            allowCORS();\r\n\r\n            next();\r\n        }\r\n        else if (req.method === 'POST') {\r\n            // Get store\r\n            let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)$');\r\n            let match = regExp.exec(path);\r\n\r\n            // Request is not valid\r\n            if (match === null) {\r\n                res.writeHead(400);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Get store\r\n            let store = UploadFS.getStore(match[1]);\r\n            if (!store) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // If a store is found, go ahead and allow the origin\r\n            allowCORS();\r\n\r\n            // Get file\r\n            let fileId = match[2];\r\n            if (store.getCollection().find({_id: fileId}).count() === 0) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Check upload token\r\n            if (!store.checkToken(req.query.token, fileId)) {\r\n                res.writeHead(403);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            let tmpFile = UploadFS.getTempFilePath(fileId);\r\n            let ws = fs.createWriteStream(tmpFile, {flags: 'a'});\r\n            let fields = {uploading: true};\r\n            let progress = parseFloat(req.query.progress);\r\n            if (!isNaN(progress) && progress > 0) {\r\n                fields.progress = Math.min(progress, 1);\r\n            }\r\n\r\n            req.on('data', (chunk) => {\r\n                ws.write(chunk);\r\n            });\r\n            req.on('error', (err) => {\r\n                res.writeHead(500);\r\n                res.end();\r\n            });\r\n            req.on('end', Meteor.bindEnvironment(() => {\r\n                // Update completed state without triggering hooks\r\n                store.getCollection().direct.update({_id: fileId}, {$set: fields});\r\n                ws.end();\r\n            }));\r\n            ws.on('error', (err) => {\r\n                console.error(`ufs: cannot write chunk of file \"${fileId}\" (${err.message})`);\r\n                fs.unlink(tmpFile, (err) => {\r\n                    err && console.error(`ufs: cannot delete temp file \"${tmpFile}\" (${err.message})`);\r\n                });\r\n                res.writeHead(500);\r\n                res.end();\r\n            });\r\n            ws.on('finish', () => {\r\n                res.writeHead(204, {\"Content-Type\": 'text/plain'});\r\n                res.end();\r\n            });\r\n        }\r\n        else if (req.method == 'GET') {\r\n            // Get store, file Id and file name\r\n            let regExp = new RegExp('^\\/([^\\/\\?]+)\\/([^\\/\\?]+)(?:\\/([^\\/\\?]+))?$');\r\n            let match = regExp.exec(path);\r\n\r\n            // Avoid 504 Gateway timeout error\r\n            // if file is not handled by UploadFS.\r\n            if (match === null) {\r\n                next();\r\n                return;\r\n            }\r\n\r\n            // Get store\r\n            const storeName = match[1];\r\n            const store = UploadFS.getStore(storeName);\r\n\r\n            if (!store) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            if (store.onRead !== null && store.onRead !== undefined && typeof store.onRead !== 'function') {\r\n                console.error(`ufs: store \"${storeName}\" onRead is not a function`);\r\n                res.writeHead(500);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Remove file extension from file Id\r\n            let index = match[2].indexOf('.');\r\n            let fileId = index !== -1 ? match[2].substr(0, index) : match[2];\r\n\r\n            // Get file from database\r\n            const file = store.getCollection().findOne({_id: fileId});\r\n            if (!file) {\r\n                res.writeHead(404);\r\n                res.end();\r\n                return;\r\n            }\r\n\r\n            // Simulate read speed\r\n            if (UploadFS.config.simulateReadDelay) {\r\n                Meteor._sleepForMs(UploadFS.config.simulateReadDelay);\r\n            }\r\n\r\n            d.run(() => {\r\n                // Check if the file can be accessed\r\n                if (store.onRead.call(store, fileId, file, req, res) !== false) {\r\n                    let options = {};\r\n                    let status = 200;\r\n\r\n                    // Prepare response headers\r\n                    let headers = {\r\n                        'Content-Type': file.type,\r\n                        'Content-Length': file.size\r\n                    };\r\n\r\n                    // Add ETag header\r\n                    if (typeof file.etag === 'string') {\r\n                        headers['ETag'] = file.etag;\r\n                    }\r\n\r\n                    // Add Last-Modified header\r\n                    if (file.modifiedAt instanceof Date) {\r\n                        headers['Last-Modified'] = file.modifiedAt.toUTCString();\r\n                    }\r\n                    else if (file.uploadedAt instanceof Date) {\r\n                        headers['Last-Modified'] = file.uploadedAt.toUTCString();\r\n                    }\r\n\r\n                    // Parse request headers\r\n                    if (typeof req.headers === 'object') {\r\n\r\n                        // Compare ETag\r\n                        if (req.headers['if-none-match']) {\r\n                            if (file.etag === req.headers['if-none-match']) {\r\n                                res.writeHead(304); // Not Modified\r\n                                res.end();\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        // Compare file modification date\r\n                        if (req.headers['if-modified-since']) {\r\n                            const modifiedSince = new Date(req.headers['if-modified-since']);\r\n\r\n                            if ((file.modifiedAt instanceof Date && file.modifiedAt > modifiedSince)\r\n                                || file.uploadedAt instanceof Date && file.uploadedAt > modifiedSince) {\r\n                                res.writeHead(304); // Not Modified\r\n                                res.end();\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        // Send data in range\r\n                        if (typeof req.headers.range === 'string') {\r\n                            let range = req.headers.range;\r\n\r\n                            // Range is not valid\r\n                            if (!range) {\r\n                                res.writeHead(416);\r\n                                res.end();\r\n                                return;\r\n                            }\r\n\r\n                            let positions = range.replace(/bytes=/, '').split('-');\r\n                            let start = parseInt(positions[0], 10);\r\n                            let total = file.size;\r\n                            let end = positions[1] ? parseInt(positions[1], 10) : total - 1;\r\n\r\n                            // Update headers\r\n                            headers['Content-Range'] = `bytes ${start}-${end}/${total}`;\r\n                            headers['Accept-Ranges'] = `bytes`;\r\n                            headers['Content-Length'] = (end - start) + 1;\r\n\r\n                            status = 206; // partial content\r\n                            options.start = start;\r\n                            options.end = end;\r\n                        }\r\n                    }\r\n\r\n                    // Open the file stream\r\n                    let rs = store.getReadStream(fileId, file, options);\r\n                    let ws = new stream.PassThrough();\r\n\r\n                    rs.on('error', Meteor.bindEnvironment((err) => {\r\n                        store.onReadError.call(store, err, fileId, file);\r\n                        res.end();\r\n                    }));\r\n                    ws.on('error', Meteor.bindEnvironment((err) => {\r\n                        store.onReadError.call(store, err, fileId, file);\r\n                        res.end();\r\n                    }));\r\n                    ws.on('close', () => {\r\n                        // Close output stream at the end\r\n                        ws.emit('end');\r\n                    });\r\n\r\n                    // Transform stream\r\n                    store.transformRead(rs, ws, fileId, file, req, headers);\r\n\r\n                    // Parse request headers\r\n                    if (typeof req.headers === 'object') {\r\n                        // Compress data using if needed (ignore audio/video as they are already compressed)\r\n                        if (typeof req.headers['accept-encoding'] === 'string' && !/^(audio|video)/.test(file.type)) {\r\n                            let accept = req.headers['accept-encoding'];\r\n\r\n                            // Compress with gzip\r\n                            if (accept.match(/\\bgzip\\b/)) {\r\n                                headers['Content-Encoding'] = 'gzip';\r\n                                delete headers['Content-Length'];\r\n                                res.writeHead(status, headers);\r\n                                ws.pipe(zlib.createGzip()).pipe(res);\r\n                                return;\r\n                            }\r\n                            // Compress with deflate\r\n                            else if (accept.match(/\\bdeflate\\b/)) {\r\n                                headers['Content-Encoding'] = 'deflate';\r\n                                delete headers['Content-Length'];\r\n                                res.writeHead(status, headers);\r\n                                ws.pipe(zlib.createDeflate()).pipe(res);\r\n                                return;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Send raw data\r\n                    if (!headers['Content-Encoding']) {\r\n                        res.writeHead(status, headers);\r\n                        ws.pipe(res);\r\n                    }\r\n\r\n                } else {\r\n                    res.end();\r\n                }\r\n            });\r\n        } else {\r\n            next();\r\n        }\r\n    });\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\n\r\n\r\n/**\r\n * Store permissions\r\n */\r\nexport class StorePermissions {\r\n\r\n    constructor(options) {\r\n        // Default options\r\n        options = _.extend({\r\n            insert: null,\r\n            remove: null,\r\n            update: null\r\n        }, options);\r\n\r\n        // Check options\r\n        if (options.insert && typeof options.insert !== 'function') {\r\n            throw new TypeError(\"StorePermissions: insert is not a function\");\r\n        }\r\n        if (options.remove && typeof options.remove !== 'function') {\r\n            throw new TypeError(\"StorePermissions: remove is not a function\");\r\n        }\r\n        if (options.update && typeof options.update !== 'function') {\r\n            throw new TypeError(\"StorePermissions: update is not a function\");\r\n        }\r\n\r\n        this.actions = {\r\n            insert: options.insert,\r\n            remove: options.remove,\r\n            update: options.update,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Checks the permission for the action\r\n     * @param action\r\n     * @param userId\r\n     * @param file\r\n     * @param fields\r\n     * @param modifiers\r\n     * @return {*}\r\n     */\r\n    check(action, userId, file, fields, modifiers) {\r\n        if (typeof this.actions[action] === 'function') {\r\n            return this.actions[action](userId, file, fields, modifiers);\r\n        }\r\n        return true; // by default allow all\r\n    }\r\n\r\n    /**\r\n     * Checks the insert permission\r\n     * @param userId\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    checkInsert(userId, file) {\r\n        return this.check('insert', userId, file);\r\n    }\r\n\r\n    /**\r\n     * Checks the remove permission\r\n     * @param userId\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    checkRemove(userId, file) {\r\n        return this.check('remove', userId, file);\r\n    }\r\n\r\n    /**\r\n     * Checks the update permission\r\n     * @param userId\r\n     * @param file\r\n     * @param fields\r\n     * @param modifiers\r\n     * @returns {*}\r\n     */\r\n    checkUpdate(userId, file, fields, modifiers) {\r\n        return this.check('update', userId, file, fields, modifiers);\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {check} from 'meteor/check';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {Mongo} from 'meteor/mongo';\r\nimport {UploadFS} from './ufs';\r\nimport {Filter} from './ufs-filter';\r\nimport {StorePermissions} from './ufs-store-permissions';\r\nimport {Tokens} from './ufs-tokens';\r\n\r\n\r\n/**\r\n * File store\r\n */\r\nexport class Store {\r\n\r\n    constructor(options) {\r\n        let self = this;\r\n\r\n        // Default options\r\n        options = _.extend({\r\n            collection: null,\r\n            filter: null,\r\n            name: null,\r\n            onCopyError: null,\r\n            onFinishUpload: null,\r\n            onRead: null,\r\n            onReadError: null,\r\n            onValidate: this.onValidate,\r\n            onWriteError: null,\r\n            permissions: null,\r\n            transformRead: null,\r\n            transformWrite: null\r\n        }, options);\r\n\r\n        // Check instance\r\n        if (!(self instanceof Store)) {\r\n            throw new Error('UploadFS.Store is not an instance');\r\n        }\r\n\r\n        // Check options\r\n        if (!(options.collection instanceof Mongo.Collection)) {\r\n            throw new TypeError('Store: collection is not a Mongo.Collection');\r\n        }\r\n        if (options.filter && !(options.filter instanceof Filter)) {\r\n            throw new TypeError('Store: filter is not a UploadFS.Filter');\r\n        }\r\n        if (typeof options.name !== 'string') {\r\n            throw new TypeError('Store: name is not a string');\r\n        }\r\n        if (UploadFS.getStore(options.name)) {\r\n            throw new TypeError('Store: name already exists');\r\n        }\r\n        if (options.onCopyError && typeof options.onCopyError !== 'function') {\r\n            throw new TypeError('Store: onCopyError is not a function');\r\n        }\r\n        if (options.onFinishUpload && typeof options.onFinishUpload !== 'function') {\r\n            throw new TypeError('Store: onFinishUpload is not a function');\r\n        }\r\n        if (options.onRead && typeof options.onRead !== 'function') {\r\n            throw new TypeError('Store: onRead is not a function');\r\n        }\r\n        if (options.onReadError && typeof options.onReadError !== 'function') {\r\n            throw new TypeError('Store: onReadError is not a function');\r\n        }\r\n        if (options.onWriteError && typeof options.onWriteError !== 'function') {\r\n            throw new TypeError('Store: onWriteError is not a function');\r\n        }\r\n        if (options.permissions && !(options.permissions instanceof StorePermissions)) {\r\n            throw new TypeError('Store: permissions is not a UploadFS.StorePermissions');\r\n        }\r\n        if (options.transformRead && typeof options.transformRead !== 'function') {\r\n            throw new TypeError('Store: transformRead is not a function');\r\n        }\r\n        if (options.transformWrite && typeof options.transformWrite !== 'function') {\r\n            throw new TypeError('Store: transformWrite is not a function');\r\n        }\r\n        if (options.onValidate && typeof options.onValidate !== 'function') {\r\n            throw new TypeError('Store: onValidate is not a function');\r\n        }\r\n\r\n        // Public attributes\r\n        self.onCopyError = options.onCopyError || self.onCopyError;\r\n        self.onFinishUpload = options.onFinishUpload || self.onFinishUpload;\r\n        self.onRead = options.onRead || self.onRead;\r\n        self.onReadError = options.onReadError || self.onReadError;\r\n        self.onWriteError = options.onWriteError || self.onWriteError;\r\n        self.permissions = options.permissions;\r\n        self.onValidate = options.onValidate;\r\n\r\n        // Private attributes\r\n        let collection = options.collection;\r\n        let copyTo = options.copyTo;\r\n        let filter = options.filter;\r\n        let name = options.name;\r\n        let transformRead = options.transformRead;\r\n        let transformWrite = options.transformWrite;\r\n\r\n        // Set default permissions\r\n        if (!(self.permissions instanceof StorePermissions)) {\r\n            // Uses custom default permissions or UFS default permissions\r\n            if (UploadFS.config.defaultStorePermissions instanceof StorePermissions) {\r\n                self.permissions = UploadFS.config.defaultStorePermissions;\r\n            } else {\r\n                self.permissions = new StorePermissions();\r\n                console.warn(`ufs: permissions are not defined for store \"${name}\"`);\r\n            }\r\n        }\r\n\r\n        // Add the store to the list\r\n        UploadFS.getStores()[name] = self;\r\n\r\n        /**\r\n         * Returns the collection\r\n         * @return {Mongo.Collection}\r\n         */\r\n        self.getCollection = function () {\r\n            return collection;\r\n        };\r\n\r\n        /**\r\n         * Returns the file filter\r\n         * @return {UploadFS.Filter}\r\n         */\r\n        self.getFilter = function () {\r\n            return filter;\r\n        };\r\n\r\n        /**\r\n         * Returns the store name\r\n         * @return {string}\r\n         */\r\n        self.getName = function () {\r\n            return name;\r\n        };\r\n\r\n        /**\r\n         * Defines the store permissions\r\n         * @param permissions\r\n         */\r\n        self.setPermissions = function (permissions) {\r\n            if (!(permissions instanceof StorePermissions)) {\r\n                throw new TypeError(\"permissions is not an instance of UploadFS.StorePermissions\");\r\n            }\r\n            self.permissions = permissions;\r\n        };\r\n\r\n        if (Meteor.isServer) {\r\n\r\n            /**\r\n             * Checks token validity\r\n             * @param token\r\n             * @param fileId\r\n             * @returns {boolean}\r\n             */\r\n            self.checkToken = function (token, fileId) {\r\n                check(token, String);\r\n                check(fileId, String);\r\n                return Tokens.find({value: token, fileId: fileId}).count() === 1;\r\n            };\r\n\r\n            /**\r\n             * Copies the file to a store\r\n             * @param fileId\r\n             * @param store\r\n             * @param callback\r\n             */\r\n            self.copy = function (fileId, store, callback) {\r\n                check(fileId, String);\r\n\r\n                if (!(store instanceof Store)) {\r\n                    throw new TypeError('store is not an instance of UploadFS.Store');\r\n                }\r\n                // Get original file\r\n                let file = collection.findOne({_id: fileId});\r\n                if (!file) {\r\n                    throw new Meteor.Error('file-not-found', 'File not found');\r\n                }\r\n                // Silently ignore the file if it does not match filter\r\n                let filter = store.getFilter();\r\n                if (filter instanceof Filter && !filter.isValid(file)) {\r\n                    return;\r\n                }\r\n\r\n                // Prepare copy\r\n                let copy = _.omit(file, '_id', 'url');\r\n                copy.originalStore = self.getName();\r\n                copy.originalId = fileId;\r\n\r\n                // Create the copy\r\n                let copyId = store.create(copy);\r\n\r\n                // Get original stream\r\n                let rs = self.getReadStream(fileId, file);\r\n\r\n                // Catch errors to avoid app crashing\r\n                rs.on('error', Meteor.bindEnvironment(function (err) {\r\n                    callback.call(self, err, null);\r\n                }));\r\n\r\n                // Copy file data\r\n                store.write(rs, copyId, Meteor.bindEnvironment(function (err) {\r\n                    if (err) {\r\n                        collection.remove({_id: copyId});\r\n                        self.onCopyError.call(self, err, fileId, file);\r\n                    }\r\n                    if (typeof callback === 'function') {\r\n                        callback.call(self, err, copyId, copy, store);\r\n                    }\r\n                }));\r\n            };\r\n\r\n            /**\r\n             * Creates the file in the collection\r\n             * @param file\r\n             * @param callback\r\n             * @return {string}\r\n             */\r\n            self.create = function (file, callback) {\r\n                check(file, Object);\r\n                file.store = name;\r\n                return collection.insert(file, callback);\r\n            };\r\n\r\n            /**\r\n             * Creates a token for the file (only needed for client side upload)\r\n             * @param fileId\r\n             * @returns {*}\r\n             */\r\n            self.createToken = function (fileId) {\r\n                let token = self.generateToken();\r\n\r\n                // Check if token exists\r\n                if (Tokens.find({fileId: fileId}).count()) {\r\n                    Tokens.update({fileId: fileId}, {\r\n                        $set: {\r\n                            createdAt: new Date(),\r\n                            value: token\r\n                        }\r\n                    });\r\n                } else {\r\n                    Tokens.insert({\r\n                        createdAt: new Date(),\r\n                        fileId: fileId,\r\n                        value: token\r\n                    });\r\n                }\r\n                return token;\r\n            };\r\n\r\n            /**\r\n             * Generates a random token\r\n             * @param pattern\r\n             * @return {string}\r\n             */\r\n            self.generateToken = function (pattern) {\r\n                return (pattern || 'xyxyxyxyxy').replace(/[xy]/g, function (c) {\r\n                    let r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n                    let s = v.toString(16);\r\n                    return Math.round(Math.random()) ? s.toUpperCase() : s;\r\n                });\r\n            };\r\n\r\n            /**\r\n             * Transforms the file on reading\r\n             * @param readStream\r\n             * @param writeStream\r\n             * @param fileId\r\n             * @param file\r\n             * @param request\r\n             * @param headers\r\n             */\r\n            self.transformRead = function (readStream, writeStream, fileId, file, request, headers) {\r\n                if (typeof transformRead === 'function') {\r\n                    transformRead.call(self, readStream, writeStream, fileId, file, request, headers);\r\n                } else {\r\n                    readStream.pipe(writeStream);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Transforms the file on writing\r\n             * @param readStream\r\n             * @param writeStream\r\n             * @param fileId\r\n             * @param file\r\n             */\r\n            self.transformWrite = function (readStream, writeStream, fileId, file) {\r\n                if (typeof transformWrite === 'function') {\r\n                    transformWrite.call(self, readStream, writeStream, fileId, file);\r\n                } else {\r\n                    readStream.pipe(writeStream);\r\n                }\r\n            };\r\n\r\n            /**\r\n             * Writes the file to the store\r\n             * @param rs\r\n             * @param fileId\r\n             * @param callback\r\n             */\r\n            self.write = function (rs, fileId, callback) {\r\n                let file = collection.findOne({_id: fileId});\r\n                let ws = self.getWriteStream(fileId, file);\r\n\r\n                let errorHandler = Meteor.bindEnvironment(function (err) {\r\n                    collection.remove({_id: fileId});\r\n                    self.onWriteError.call(self, err, fileId, file);\r\n                    callback.call(self, err);\r\n                });\r\n\r\n                ws.on('error', errorHandler);\r\n                ws.on('finish', Meteor.bindEnvironment(function () {\r\n                    let size = 0;\r\n                    let readStream = self.getReadStream(fileId, file);\r\n\r\n                    readStream.on('error', Meteor.bindEnvironment(function (error) {\r\n                        callback.call(self, error, null);\r\n                    }));\r\n                    readStream.on('data', Meteor.bindEnvironment(function (data) {\r\n                        size += data.length;\r\n                    }));\r\n                    readStream.on('end', Meteor.bindEnvironment(function () {\r\n                        // Set file attribute\r\n                        file.complete = true;\r\n                        file.etag = UploadFS.generateEtag();\r\n                        file.path = self.getFileRelativeURL(fileId);\r\n                        file.progress = 1;\r\n                        file.size = size;\r\n                        file.token = self.generateToken();\r\n                        file.uploading = false;\r\n                        file.uploadedAt = new Date();\r\n                        file.url = self.getFileURL(fileId);\r\n\r\n                        // Sets the file URL when file transfer is complete,\r\n                        // this way, the image will loads entirely.\r\n                        collection.direct.update({_id: fileId}, {\r\n                            $set: {\r\n                                complete: file.complete,\r\n                                etag: file.etag,\r\n                                path: file.path,\r\n                                progress: file.progress,\r\n                                size: file.size,\r\n                                token: file.token,\r\n                                uploading: file.uploading,\r\n                                uploadedAt: file.uploadedAt,\r\n                                url: file.url\r\n                            }\r\n                        });\r\n\r\n                        // Return file info\r\n                        callback.call(self, null, file);\r\n\r\n                        // Execute callback\r\n                        if (typeof self.onFinishUpload == 'function') {\r\n                            self.onFinishUpload.call(self, file);\r\n                        }\r\n\r\n                        // Simulate write speed\r\n                        if (UploadFS.config.simulateWriteDelay) {\r\n                            Meteor._sleepForMs(UploadFS.config.simulateWriteDelay);\r\n                        }\r\n\r\n                        // Copy file to other stores\r\n                        if (copyTo instanceof Array) {\r\n                            for (let i = 0; i < copyTo.length; i += 1) {\r\n                                let store = copyTo[i];\r\n\r\n                                if (!store.getFilter() || store.getFilter().isValid(file)) {\r\n                                    self.copy(fileId, store);\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n                }));\r\n\r\n                // Execute transformation\r\n                self.transformWrite(rs, ws, fileId, file);\r\n            };\r\n        }\r\n\r\n        if (Meteor.isServer) {\r\n            const fs = Npm.require('fs');\r\n\r\n            // Code executed after removing file\r\n            collection.after.remove(function (userId, file) {\r\n                // Remove associated tokens\r\n                Tokens.remove({fileId: file._id});\r\n\r\n                if (copyTo instanceof Array) {\r\n                    for (let i = 0; i < copyTo.length; i += 1) {\r\n                        // Remove copies in stores\r\n                        copyTo[i].getCollection().remove({originalId: file._id});\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Code executed before inserting file\r\n            collection.before.insert(function (userId, file) {\r\n                if (!self.permissions.checkInsert(userId, file)) {\r\n                    throw new Meteor.Error('forbidden', \"Forbidden\");\r\n                }\r\n            });\r\n\r\n            // Code executed before updating file\r\n            collection.before.update(function (userId, file, fields, modifiers) {\r\n                if (!self.permissions.checkUpdate(userId, file, fields, modifiers)) {\r\n                    throw new Meteor.Error('forbidden', \"Forbidden\");\r\n                }\r\n            });\r\n\r\n            // Code executed before removing file\r\n            collection.before.remove(function (userId, file) {\r\n                if (!self.permissions.checkRemove(userId, file)) {\r\n                    throw new Meteor.Error('forbidden', \"Forbidden\");\r\n                }\r\n\r\n                // Delete the physical file in the store\r\n                self.delete(file._id);\r\n\r\n                let tmpFile = UploadFS.getTempFilePath(file._id);\r\n\r\n                // Delete the temp file\r\n                fs.stat(tmpFile, function (err) {\r\n                    !err && fs.unlink(tmpFile, function (err) {\r\n                        err && console.error(`ufs: cannot delete temp file at ${tmpFile} (${err.message})`);\r\n                    });\r\n                });\r\n            });\r\n\r\n            /**\r\n             * Deletes a file async\r\n             * @param fileId\r\n             * @param callback\r\n             */\r\n            self.delete = function (fileId, callback) {\r\n                throw new Error('delete is not implemented');\r\n            };\r\n\r\n            /**\r\n             * Returns the file read stream\r\n             * @param fileId\r\n             * @param file\r\n             */\r\n            self.getReadStream = function (fileId, file) {\r\n                throw new Error('getReadStream is not implemented');\r\n            };\r\n\r\n            /**\r\n             * Returns the file write stream\r\n             * @param fileId\r\n             * @param file\r\n             */\r\n            self.getWriteStream = function (fileId, file) {\r\n                throw new Error('getWriteStream is not implemented');\r\n            };\r\n\r\n            /**\r\n             * Callback for copy errors\r\n             * @param err\r\n             * @param fileId\r\n             * @param file\r\n             * @return boolean\r\n             */\r\n            self.onCopyError = function (err, fileId, file) {\r\n                console.error(`ufs: cannot copy file \"${fileId}\" (${err.message})`, err);\r\n            };\r\n\r\n            /**\r\n             * Called when a file has been uploaded\r\n             * @param file\r\n             */\r\n            self.onFinishUpload = function (file) {\r\n            };\r\n\r\n            /**\r\n             * Called when a file is read from the store\r\n             * @param fileId\r\n             * @param file\r\n             * @param request\r\n             * @param response\r\n             * @return boolean\r\n             */\r\n            self.onRead = function (fileId, file, request, response) {\r\n                return true;\r\n            };\r\n\r\n            /**\r\n             * Callback for read errors\r\n             * @param err\r\n             * @param fileId\r\n             * @param file\r\n             * @return boolean\r\n             */\r\n            self.onReadError = function (err, fileId, file) {\r\n                console.error(`ufs: cannot read file \"${fileId}\" (${err.message})`, err);\r\n            };\r\n\r\n            /**\r\n             * Callback for write errors\r\n             * @param err\r\n             * @param fileId\r\n             * @param file\r\n             * @return boolean\r\n             */\r\n            self.onWriteError = function (err, fileId, file) {\r\n                console.error(`ufs: cannot write file \"${fileId}\" (${err.message})`, err);\r\n            };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the file URL\r\n     * @param fileId\r\n     */\r\n    getFileRelativeURL(fileId) {\r\n        let file = this.getCollection().findOne(fileId, {fields: {name: 1}});\r\n        return file ? this.getRelativeURL(`${fileId}/${file.name}`) : null;\r\n    }\r\n\r\n    /**\r\n     * Returns the file URL\r\n     * @param fileId\r\n     */\r\n    getFileURL(fileId) {\r\n        let file = this.getCollection().findOne(fileId, {fields: {name: 1}});\r\n        return file ? this.getURL(`${fileId}/${file.name}`) : null;\r\n    }\r\n\r\n    /**\r\n     * Returns the store relative URL\r\n     * @param path\r\n     */\r\n    getRelativeURL(path) {\r\n        const rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\r\n        const rootPath = rootUrl.replace(/^[a-z]+:\\/\\/[^/]+\\/*/gi, '');\r\n        const storeName = this.getName();\r\n        path = String(path).replace(/\\/$/, '').trim();\r\n        return encodeURI(`${rootPath}/${UploadFS.config.storesPath}/${storeName}/${path}`);\r\n    }\r\n\r\n    /**\r\n     * Returns the store absolute URL\r\n     * @param path\r\n     */\r\n    getURL(path) {\r\n        const rootUrl = Meteor.absoluteUrl().replace(/\\/+$/, '');\r\n        const storeName = this.getName();\r\n        path = String(path).replace(/\\/$/, '').trim();\r\n        return encodeURI(`${rootUrl}/${UploadFS.config.storesPath}/${storeName}/${path}`);\r\n    }\r\n\r\n    /**\r\n     * Completes the file upload\r\n     * @param url\r\n     * @param file\r\n     * @param callback\r\n     */\r\n    importFromURL(url, file, callback) {\r\n        Meteor.call('ufsImportURL', url, file, this.getName(), callback);\r\n    }\r\n\r\n    /**\r\n     * Validates the file\r\n     * @param file\r\n     */\r\n    onValidate(file) {\r\n    }\r\n\r\n    /**\r\n     * Validates the file\r\n     * @param file\r\n     */\r\n    validate(file) {\r\n        if (typeof this.onValidate === 'function') {\r\n            this.onValidate(file);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {Template} from 'meteor/templating';\r\n\r\n\r\nlet isMIME = function (type, mime) {\r\n    return typeof type === 'string'\r\n        && typeof mime === 'string'\r\n        && mime.indexOf(type + '/') === 0;\r\n};\r\n\r\nTemplate.registerHelper('isApplication', function (type) {\r\n    return isMIME('application', this.type || type);\r\n});\r\n\r\nTemplate.registerHelper('isAudio', function (type) {\r\n    return isMIME('audio', this.type || type);\r\n});\r\n\r\nTemplate.registerHelper('isImage', function (type) {\r\n    return isMIME('image', this.type || type);\r\n});\r\n\r\nTemplate.registerHelper('isText', function (type) {\r\n    return isMIME('text', this.type || type);\r\n});\r\n\r\nTemplate.registerHelper('isVideo', function (type) {\r\n    return isMIME('video', this.type || type);\r\n});\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {Mongo} from 'meteor/mongo';\r\n\r\n/**\r\n * Collection of upload tokens\r\n * @type {Mongo.Collection}\r\n */\r\nexport const Tokens = new Mongo.Collection('ufsTokens');\r\n","/*\r\n * The MIT License (MIT)\r\n *\r\n * Copyright (c) 2017 Karl STEIN\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal\r\n * in the Software without restriction, including without limitation the rights\r\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n * copies of the Software, and to permit persons to whom the Software is\r\n * furnished to do so, subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in all\r\n * copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n * SOFTWARE.\r\n *\r\n */\r\n\r\nimport {_} from 'meteor/underscore';\r\nimport {Meteor} from 'meteor/meteor';\r\nimport {Store} from './ufs-store';\r\n\r\n\r\n/**\r\n * File uploader\r\n */\r\nexport class Uploader {\r\n\r\n    constructor(options) {\r\n        let self = this;\r\n\r\n        // Set default options\r\n        options = _.extend({\r\n            adaptive: true,\r\n            capacity: 0.9,\r\n            chunkSize: 16 * 1024,\r\n            data: null,\r\n            file: null,\r\n            maxChunkSize: 4 * 1024 * 1000,\r\n            maxTries: 5,\r\n            onAbort: this.onAbort,\r\n            onComplete: this.onComplete,\r\n            onCreate: this.onCreate,\r\n            onError: this.onError,\r\n            onProgress: this.onProgress,\r\n            onStart: this.onStart,\r\n            onStop: this.onStop,\r\n            retryDelay: 2000,\r\n            store: null,\r\n            transferDelay: 100\r\n        }, options);\r\n\r\n        // Check options\r\n        if (typeof options.adaptive !== 'boolean') {\r\n            throw new TypeError('adaptive is not a number');\r\n        }\r\n        if (typeof options.capacity !== 'number') {\r\n            throw new TypeError('capacity is not a number');\r\n        }\r\n        if (options.capacity <= 0 || options.capacity > 1) {\r\n            throw new RangeError('capacity must be a float between 0.1 and 1.0');\r\n        }\r\n        if (typeof options.chunkSize !== 'number') {\r\n            throw new TypeError('chunkSize is not a number');\r\n        }\r\n        if (!(options.data instanceof Blob) && !(options.data instanceof File)) {\r\n            throw new TypeError('data is not an Blob or File');\r\n        }\r\n        if (options.file === null || typeof options.file !== 'object') {\r\n            throw new TypeError('file is not an object');\r\n        }\r\n        if (typeof options.maxChunkSize !== 'number') {\r\n            throw new TypeError('maxChunkSize is not a number');\r\n        }\r\n        if (typeof options.maxTries !== 'number') {\r\n            throw new TypeError('maxTries is not a number');\r\n        }\r\n        if (typeof options.retryDelay !== 'number') {\r\n            throw new TypeError('retryDelay is not a number');\r\n        }\r\n        if (typeof options.transferDelay !== 'number') {\r\n            throw new TypeError('transferDelay is not a number');\r\n        }\r\n        if (typeof options.onAbort !== 'function') {\r\n            throw new TypeError('onAbort is not a function');\r\n        }\r\n        if (typeof options.onComplete !== 'function') {\r\n            throw new TypeError('onComplete is not a function');\r\n        }\r\n        if (typeof options.onCreate !== 'function') {\r\n            throw new TypeError('onCreate is not a function');\r\n        }\r\n        if (typeof options.onError !== 'function') {\r\n            throw new TypeError('onError is not a function');\r\n        }\r\n        if (typeof options.onProgress !== 'function') {\r\n            throw new TypeError('onProgress is not a function');\r\n        }\r\n        if (typeof options.onStart !== 'function') {\r\n            throw new TypeError('onStart is not a function');\r\n        }\r\n        if (typeof options.onStop !== 'function') {\r\n            throw new TypeError('onStop is not a function');\r\n        }\r\n        if (typeof options.store !== 'string' && !(options.store instanceof Store)) {\r\n            throw new TypeError('store must be the name of the store or an instance of UploadFS.Store');\r\n        }\r\n\r\n        // Public attributes\r\n        self.adaptive = options.adaptive;\r\n        self.capacity = parseFloat(options.capacity);\r\n        self.chunkSize = parseInt(options.chunkSize);\r\n        self.maxChunkSize = parseInt(options.maxChunkSize);\r\n        self.maxTries = parseInt(options.maxTries);\r\n        self.retryDelay = parseInt(options.retryDelay);\r\n        self.transferDelay = parseInt(options.transferDelay);\r\n        self.onAbort = options.onAbort;\r\n        self.onComplete = options.onComplete;\r\n        self.onCreate = options.onCreate;\r\n        self.onError = options.onError;\r\n        self.onProgress = options.onProgress;\r\n        self.onStart = options.onStart;\r\n        self.onStop = options.onStop;\r\n\r\n        // Private attributes\r\n        let store = options.store;\r\n        let data = options.data;\r\n        let capacityMargin = 0.1;\r\n        let file = options.file;\r\n        let fileId = null;\r\n        let offset = 0;\r\n        let loaded = 0;\r\n        let total = data.size;\r\n        let tries = 0;\r\n        let postUrl = null;\r\n        let token = null;\r\n        let complete = false;\r\n        let uploading = false;\r\n\r\n        let timeA = null;\r\n        let timeB = null;\r\n\r\n        let elapsedTime = 0;\r\n        let startTime = 0;\r\n\r\n        // Keep only the name of the store\r\n        if (store instanceof Store) {\r\n            store = store.getName();\r\n        }\r\n\r\n        // Assign file to store\r\n        file.store = store;\r\n\r\n        function finish() {\r\n            // Finish the upload by telling the store the upload is complete\r\n            Meteor.call('ufsComplete', fileId, store, token, function (err, uploadedFile) {\r\n                if (err) {\r\n                    self.onError(err, file);\r\n                    self.abort();\r\n                }\r\n                else if (uploadedFile) {\r\n                    uploading = false;\r\n                    complete = true;\r\n                    file = uploadedFile;\r\n                    self.onComplete(uploadedFile);\r\n                }\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Aborts the current transfer\r\n         */\r\n        self.abort = function () {\r\n            // Remove the file from database\r\n            Meteor.call('ufsDelete', fileId, store, token, function (err, result) {\r\n                if (err) {\r\n                    self.onError(err, file);\r\n                }\r\n            });\r\n\r\n            // Reset uploader status\r\n            uploading = false;\r\n            fileId = null;\r\n            offset = 0;\r\n            tries = 0;\r\n            loaded = 0;\r\n            complete = false;\r\n            startTime = null;\r\n            self.onAbort(file);\r\n        };\r\n\r\n        /**\r\n         * Returns the average speed in bytes per second\r\n         * @returns {number}\r\n         */\r\n        self.getAverageSpeed = function () {\r\n            let seconds = self.getElapsedTime() / 1000;\r\n            return self.getLoaded() / seconds;\r\n        };\r\n\r\n        /**\r\n         * Returns the elapsed time in milliseconds\r\n         * @returns {number}\r\n         */\r\n        self.getElapsedTime = function () {\r\n            if (startTime && self.isUploading()) {\r\n                return elapsedTime + (Date.now() - startTime);\r\n            }\r\n            return elapsedTime;\r\n        };\r\n\r\n        /**\r\n         * Returns the file\r\n         * @return {object}\r\n         */\r\n        self.getFile = function () {\r\n            return file;\r\n        };\r\n\r\n        /**\r\n         * Returns the loaded bytes\r\n         * @return {number}\r\n         */\r\n        self.getLoaded = function () {\r\n            return loaded;\r\n        };\r\n\r\n        /**\r\n         * Returns current progress\r\n         * @return {number}\r\n         */\r\n        self.getProgress = function () {\r\n            return Math.min((loaded / total) * 100 / 100, 1.0);\r\n        };\r\n\r\n        /**\r\n         * Returns the remaining time in milliseconds\r\n         * @returns {number}\r\n         */\r\n        self.getRemainingTime = function () {\r\n            let averageSpeed = self.getAverageSpeed();\r\n            let remainingBytes = total - self.getLoaded();\r\n            return averageSpeed && remainingBytes ? Math.max(remainingBytes / averageSpeed, 0) : 0;\r\n        };\r\n\r\n        /**\r\n         * Returns the upload speed in bytes per second\r\n         * @returns {number}\r\n         */\r\n        self.getSpeed = function () {\r\n            if (timeA && timeB && self.isUploading()) {\r\n                let seconds = (timeB - timeA) / 1000;\r\n                return self.chunkSize / seconds;\r\n            }\r\n            return 0;\r\n        };\r\n\r\n        /**\r\n         * Returns the total bytes\r\n         * @return {number}\r\n         */\r\n        self.getTotal = function () {\r\n            return total;\r\n        };\r\n\r\n        /**\r\n         * Checks if the transfer is complete\r\n         * @return {boolean}\r\n         */\r\n        self.isComplete = function () {\r\n            return complete;\r\n        };\r\n\r\n        /**\r\n         * Checks if the transfer is active\r\n         * @return {boolean}\r\n         */\r\n        self.isUploading = function () {\r\n            return uploading;\r\n        };\r\n\r\n        /**\r\n         * Reads a portion of file\r\n         * @param start\r\n         * @param length\r\n         * @param callback\r\n         * @returns {Blob}\r\n         */\r\n        self.readChunk = function (start, length, callback) {\r\n            if (typeof callback != 'function') {\r\n                throw new Error('readChunk is missing callback');\r\n            }\r\n            try {\r\n                let end;\r\n\r\n                // Calculate the chunk size\r\n                if (length && start + length > total) {\r\n                    end = total;\r\n                } else {\r\n                    end = start + length;\r\n                }\r\n                // Get chunk\r\n                let chunk = data.slice(start, end);\r\n                // Pass chunk to callback\r\n                callback.call(self, null, chunk);\r\n\r\n            } catch (err) {\r\n                console.error('read error', err);\r\n                // Retry to read chunk\r\n                Meteor.setTimeout(function () {\r\n                    if (tries < self.maxTries) {\r\n                        tries += 1;\r\n                        self.readChunk(start, length, callback);\r\n                    }\r\n                }, self.retryDelay);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Sends a file chunk to the store\r\n         */\r\n        self.sendChunk = function () {\r\n            if (!complete && startTime !== null) {\r\n                if (offset < total) {\r\n                    let chunkSize = self.chunkSize;\r\n\r\n                    // Use adaptive length\r\n                    if (self.adaptive && timeA && timeB && timeB > timeA) {\r\n                        let duration = (timeB - timeA) / 1000;\r\n                        let max = self.capacity * (1 + capacityMargin);\r\n                        let min = self.capacity * (1 - capacityMargin);\r\n\r\n                        if (duration >= max) {\r\n                            chunkSize = Math.abs(Math.round(chunkSize * (max - duration)));\r\n\r\n                        } else if (duration < min) {\r\n                            chunkSize = Math.round(chunkSize * (min / duration));\r\n                        }\r\n                        // Limit to max chunk size\r\n                        if (self.maxChunkSize > 0 && chunkSize > self.maxChunkSize) {\r\n                            chunkSize = self.maxChunkSize;\r\n                        }\r\n                    }\r\n\r\n                    // Limit to max chunk size\r\n                    if (self.maxChunkSize > 0 && chunkSize > self.maxChunkSize) {\r\n                        chunkSize = self.maxChunkSize;\r\n                    }\r\n\r\n                    // Reduce chunk size to fit total\r\n                    if (offset + chunkSize > total) {\r\n                        chunkSize = total - offset;\r\n                    }\r\n\r\n                    // Prepare the chunk\r\n                    self.readChunk(offset, chunkSize, function (err, chunk) {\r\n                        if (err) {\r\n                            self.onError(err, file);\r\n                            return;\r\n                        }\r\n\r\n                        let xhr = new XMLHttpRequest();\r\n                        xhr.onreadystatechange = function () {\r\n                            if (xhr.readyState === 4) {\r\n                                if (_.contains([200, 201, 202, 204], xhr.status)) {\r\n                                    timeB = Date.now();\r\n                                    offset += chunkSize;\r\n                                    loaded += chunkSize;\r\n\r\n                                    // Send next chunk\r\n                                    self.onProgress(file, self.getProgress());\r\n\r\n                                    // Finish upload\r\n                                    if (loaded >= total) {\r\n                                        elapsedTime = Date.now() - startTime;\r\n                                        finish();\r\n                                    } else {\r\n                                        Meteor.setTimeout(self.sendChunk, self.transferDelay);\r\n                                    }\r\n                                }\r\n                                else if (!_.contains([402, 403, 404, 500], xhr.status)) {\r\n                                    // Retry until max tries is reach\r\n                                    // But don't retry if these errors occur\r\n                                    if (tries <= self.maxTries) {\r\n                                        tries += 1;\r\n                                        // Wait before retrying\r\n                                        Meteor.setTimeout(self.sendChunk, self.retryDelay);\r\n                                    } else {\r\n                                        self.abort();\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    self.abort();\r\n                                }\r\n                            }\r\n                        };\r\n\r\n                        // Calculate upload progress\r\n                        let progress = (offset + chunkSize) / total;\r\n                        // let formData = new FormData();\r\n                        // formData.append('progress', progress);\r\n                        // formData.append('chunk', chunk);\r\n                        let url = `${postUrl}&progress=${progress}`;\r\n\r\n                        timeA = Date.now();\r\n                        timeB = null;\r\n                        uploading = true;\r\n\r\n                        // Send chunk to the store\r\n                        xhr.open('POST', url, true);\r\n                        xhr.send(chunk);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Starts or resumes the transfer\r\n         */\r\n        self.start = function () {\r\n            if (!fileId) {\r\n                // Create the file document and get the token\r\n                // that allows the user to send chunks to the store.\r\n                Meteor.call('ufsCreate', _.extend({}, file), function (err, result) {\r\n                    if (err) {\r\n                        self.onError(err, file);\r\n                    } else if (result) {\r\n                        token = result.token;\r\n                        postUrl = result.url;\r\n                        fileId = result.fileId;\r\n                        file._id = result.fileId;\r\n                        self.onCreate(file);\r\n                        tries = 0;\r\n                        startTime = Date.now();\r\n                        self.onStart(file);\r\n                        self.sendChunk();\r\n                    }\r\n                });\r\n            } else if (!uploading && !complete) {\r\n                // Resume uploading\r\n                tries = 0;\r\n                startTime = Date.now();\r\n                self.onStart(file);\r\n                self.sendChunk();\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Stops the transfer\r\n         */\r\n        self.stop = function () {\r\n            if (uploading) {\r\n                // Update elapsed time\r\n                elapsedTime = Date.now() - startTime;\r\n                startTime = null;\r\n                uploading = false;\r\n                self.onStop(file);\r\n\r\n                Meteor.call('ufsStop', fileId, store, token, function (err, result) {\r\n                    if (err) {\r\n                        self.onError(err, file);\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Called when the file upload is aborted\r\n     * @param file\r\n     */\r\n    onAbort(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when the file upload is complete\r\n     * @param file\r\n     */\r\n    onComplete(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when the file is created in the collection\r\n     * @param file\r\n     */\r\n    onCreate(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when an error occurs during file upload\r\n     * @param err\r\n     * @param file\r\n     */\r\n    onError(err, file) {\r\n        console.error(`ufs: ${err.message}`);\r\n    }\r\n\r\n    /**\r\n     * Called when a file chunk has been sent\r\n     * @param file\r\n     * @param progress is a float from 0.0 to 1.0\r\n     */\r\n    onProgress(file, progress) {\r\n    }\r\n\r\n    /**\r\n     * Called when the file upload starts\r\n     * @param file\r\n     */\r\n    onStart(file) {\r\n    }\r\n\r\n    /**\r\n     * Called when the file upload stops\r\n     * @param file\r\n     */\r\n    onStop(file) {\r\n    }\r\n}\r\n"]}
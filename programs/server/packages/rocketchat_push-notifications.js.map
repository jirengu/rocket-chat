{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:push-notifications/server/methods/saveNotificationSettings.js","meteor://ðŸ’»app/packages/rocketchat:push-notifications/server/models/Subscriptions.js"],"names":["Meteor","methods","saveNotificationSettings","rid","field","value","userId","Error","method","check","String","indexOf","subscription","RocketChat","models","Subscriptions","findOneByRoomIdAndUserId","updateAudioNotificationById","_id","updateDesktopNotificationsById","updateMobilePushNotificationsById","updateEmailNotificationsById","updateUnreadAlertById","saveDesktopNotificationDuration","updateDesktopNotificationDurationById","audioNotification","query","update","$set","desktopNotifications","desktopNotificationDuration","mobilePushNotifications","emailNotifications","unreadAlert","findAlwaysNotifyDesktopUsersByRoomId","roomId","find","findDontNotifyDesktopUsersByRoomId","findAlwaysNotifyMobileUsersByRoomId","findDontNotifyMobileUsersByRoomId","findNotificationPreferencesByRoom","$exists","$or","findWithSendEmailByRoomId","fields","u"],"mappings":"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","file":"/packages/rocketchat_push-notifications.js","sourcesContent":["Meteor.methods({\n\tsaveNotificationSettings: function(rid, field, value) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tcheck(rid, String);\n\t\tcheck(field, String);\n\t\tcheck(value, String);\n\n\t\tif (['audioNotification', 'desktopNotifications', 'mobilePushNotifications', 'emailNotifications', 'unreadAlert'].indexOf(field) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings field', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tif (field !== 'audioNotification' && ['all', 'mentions', 'nothing', 'default'].indexOf(value) === -1) {\n\t\t\tthrow new Meteor.Error('error-invalid-settings', 'Invalid settings value', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveNotificationSettings' });\n\t\t}\n\n\t\tswitch (field) {\n\t\t\tcase 'audioNotification':\n\t\t\t\tRocketChat.models.Subscriptions.updateAudioNotificationById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'desktopNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateDesktopNotificationsById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'mobilePushNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateMobilePushNotificationsById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'emailNotifications':\n\t\t\t\tRocketChat.models.Subscriptions.updateEmailNotificationsById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t\tcase 'unreadAlert':\n\t\t\t\tRocketChat.models.Subscriptions.updateUnreadAlertById(subscription._id, value);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\tsaveDesktopNotificationDuration: function(rid, value) {\n\t\tconst subscription = RocketChat.models.Subscriptions.findOneByRoomIdAndUserId(rid, Meteor.userId());\n\t\tif (!subscription) {\n\t\t\tthrow new Meteor.Error('error-invalid-subscription', 'Invalid subscription', { method: 'saveDesktopNotificationDuration' });\n\t\t}\n\t\tRocketChat.models.Subscriptions.updateDesktopNotificationDurationById(subscription._id, value);\n\t\treturn true;\n\t}\n});\n","RocketChat.models.Subscriptions.updateAudioNotificationById = function(_id, audioNotification) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\taudioNotification: audioNotification\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDesktopNotificationsById = function(_id, desktopNotifications) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdesktopNotifications: desktopNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateDesktopNotificationDurationById = function(_id, value) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tdesktopNotificationDuration: value - 0\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateMobilePushNotificationsById = function(_id, mobilePushNotifications) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tmobilePushNotifications: mobilePushNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateEmailNotificationsById = function(_id, emailNotifications) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\temailNotifications: emailNotifications\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.updateUnreadAlertById = function(_id, unreadAlert) {\n\tconst query = {\n\t\t_id: _id\n\t};\n\n\tconst update = {\n\t\t$set: {\n\t\t\tunreadAlert\n\t\t}\n\t};\n\n\treturn this.update(query, update);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyDesktopUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tdesktopNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findAlwaysNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'all'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findDontNotifyMobileUsersByRoomId = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\tmobilePushNotifications: 'nothing'\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findNotificationPreferencesByRoom = function(roomId) {\n\tconst query = {\n\t\trid: roomId,\n\t\t'u._id': {$exists: true},\n\t\t$or: [\n\t\t\t{audioNotification: {$exists: true}},\n\t\t\t{desktopNotifications: {$exists: true}},\n\t\t\t{desktopNotificationDuration: {$exists: true}},\n\t\t\t{mobilePushNotifications: {$exists: true}}\n\t\t]\n\t};\n\n\treturn this.find(query);\n};\n\nRocketChat.models.Subscriptions.findWithSendEmailByRoomId = function(roomId) {\n\tvar query = {\n\t\trid: roomId,\n\t\temailNotifications: {\n\t\t\t$exists: true\n\t\t}\n\t};\n\n\treturn this.find(query, { fields: { emailNotifications: 1, u: 1 } });\n};\n"]}